{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6","program":"C:\\Users\\Nlanson\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","futures_util","--edition=2018","C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","-C","metadata=0dd6f6bae82e25dc","-C","extra-filename=-0dd6f6bae82e25dc","--out-dir","c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps","--extern","futures_core=c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps\\libfutures_core-5e41affe63bebbab.rmeta","--extern","futures_task=c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps\\libfutures_task-321674f8ed1da831.rmeta","--extern","pin_project=c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps\\libpin_project-29d2d25ff557a5ae.rmeta","--extern","pin_utils=c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps\\libpin_utils-8db4e498cd9caa1b.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Nlanson\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps\\libfutures_util-0dd6f6bae82e25dc.rmeta"},"prelude":{"crate_id":{"name":"futures_util","disambiguator":[9620434293441122415,8956295760214777793]},"crate_root":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src","external_crates":[{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":1,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":4,"id":{"name":"futures_core","disambiguator":[6466831029986549161,18351979618423246699]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":5,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":6,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":7,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":8,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":9,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":10,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","num":15,"id":{"name":"pin_utils","disambiguator":[9649324178910884247,16817075994413001608]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","num":16,"id":{"name":"futures_task","disambiguator":[10554077165743188851,6778206987655610544]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","num":17,"id":{"name":"pin_project","disambiguator":[15904722217533655527,8504335766727125013]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","num":18,"id":{"name":"pin_project_internal","disambiguator":[2909305656479172688,8603685319846488652]}}],"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":12703,"line_start":1,"line_end":342,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":4,"index":131},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":1863,"byte_end":1868,"line_start":41,"line_end":41,"column_start":23,"column_end":28},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":15,"index":7},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":1889,"byte_end":1896,"line_start":42,"line_end":42,"column_start":20,"column_end":27},"alias_span":null,"name":"pin_mut","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":168},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":2133,"byte_end":2146,"line_start":55,"line_end":55,"column_start":23,"column_end":36},"alias_span":null,"name":"core_reexport","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":17},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13023,"byte_end":13034,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedFuture","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":1,"index":8336},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13036,"byte_end":13042,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Future","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":4,"index":32},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13044,"byte_end":13053,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryFuture","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":16,"index":89},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13079,"byte_end":13088,"line_start":10,"line_end":10,"column_start":24,"column_end":33},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":16,"index":55},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13090,"byte_end":13104,"line_start":10,"line_end":10,"column_start":35,"column_end":49},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":16,"index":110},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13106,"byte_end":13121,"line_start":10,"line_end":10,"column_start":51,"column_end":66},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13236,"byte_end":13243,"line_start":16,"line_end":16,"column_start":5,"column_end":12},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13245,"byte_end":13249,"line_start":16,"line_end":16,"column_start":14,"column_end":18},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13251,"byte_end":13260,"line_start":16,"line_end":16,"column_start":20,"column_end":29},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13262,"byte_end":13269,"line_start":16,"line_end":16,"column_start":31,"column_end":38},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13271,"byte_end":13281,"line_start":16,"line_end":16,"column_start":40,"column_end":50},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2753},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13283,"byte_end":13286,"line_start":16,"line_end":16,"column_start":52,"column_end":55},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3093},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13288,"byte_end":13298,"line_start":16,"line_end":16,"column_start":57,"column_end":67},"alias_span":null,"name":"NeverError","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2944},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13300,"byte_end":13304,"line_start":16,"line_end":16,"column_start":69,"column_end":73},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3146},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13306,"byte_end":13315,"line_start":16,"line_end":16,"column_start":75,"column_end":84},"alias_span":null,"name":"UnitError","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13317,"byte_end":13324,"line_start":16,"line_end":16,"column_start":86,"column_end":93},"alias_span":null,"name":"MapInto","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":2698},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13420,"byte_end":13433,"line_start":20,"line_end":20,"column_start":23,"column_end":36},"alias_span":null,"name":"FlattenStream","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3577},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13749,"byte_end":13756,"line_start":35,"line_end":35,"column_start":5,"column_end":12},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3742},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13758,"byte_end":13765,"line_start":35,"line_end":35,"column_start":14,"column_end":21},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3810},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13767,"byte_end":13773,"line_start":35,"line_end":35,"column_start":23,"column_end":29},"alias_span":null,"name":"OkInto","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3946},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13775,"byte_end":13785,"line_start":35,"line_end":35,"column_start":31,"column_end":41},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3878},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13787,"byte_end":13796,"line_start":35,"line_end":35,"column_start":43,"column_end":52},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3197},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13798,"byte_end":13808,"line_start":35,"line_end":35,"column_start":54,"column_end":64},"alias_span":null,"name":"IntoFuture","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4082},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13810,"byte_end":13816,"line_start":35,"line_end":35,"column_start":66,"column_end":72},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13818,"byte_end":13823,"line_start":35,"line_end":35,"column_start":74,"column_end":79},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3660},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13825,"byte_end":13831,"line_start":35,"line_end":35,"column_start":81,"column_end":87},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3521},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13833,"byte_end":13849,"line_start":35,"line_end":35,"column_start":89,"column_end":105},"alias_span":null,"name":"TryFlattenStream","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13855,"byte_end":13867,"line_start":36,"line_end":36,"column_start":5,"column_end":17},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4233},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13869,"byte_end":13881,"line_start":36,"line_end":36,"column_start":19,"column_end":31},"alias_span":null,"name":"UnwrapOrElse","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4151},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13883,"byte_end":13894,"line_start":36,"line_end":36,"column_start":33,"column_end":44},"alias_span":null,"name":"MapOkOrElse","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":3386},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":13896,"byte_end":13906,"line_start":36,"line_end":36,"column_start":46,"column_end":56},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14078,"byte_end":14082,"line_start":46,"line_end":46,"column_start":22,"column_end":26},"alias_span":null,"name":"lazy","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4298},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14084,"byte_end":14088,"line_start":46,"line_end":46,"column_start":28,"column_end":32},"alias_span":null,"name":"Lazy","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14129,"byte_end":14136,"line_start":49,"line_end":49,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4304},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14138,"byte_end":14145,"line_start":49,"line_end":49,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14192,"byte_end":14202,"line_start":52,"line_end":52,"column_start":28,"column_end":38},"alias_span":null,"name":"maybe_done","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4310},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14204,"byte_end":14213,"line_start":52,"line_end":52,"column_start":40,"column_end":49},"alias_span":null,"name":"MaybeDone","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14268,"byte_end":14282,"line_start":55,"line_end":55,"column_start":32,"column_end":46},"alias_span":null,"name":"try_maybe_done","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4381},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14284,"byte_end":14296,"line_start":55,"line_end":55,"column_start":48,"column_end":60},"alias_span":null,"name":"TryMaybeDone","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4452},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14334,"byte_end":14346,"line_start":58,"line_end":58,"column_start":23,"column_end":35},"alias_span":null,"name":"OptionFuture","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14386,"byte_end":14393,"line_start":61,"line_end":61,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14395,"byte_end":14401,"line_start":61,"line_end":61,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14438,"byte_end":14441,"line_start":64,"line_end":64,"column_start":23,"column_end":26},"alias_span":null,"name":"err","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14443,"byte_end":14445,"line_start":64,"line_end":64,"column_start":28,"column_end":30},"alias_span":null,"name":"ok","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14447,"byte_end":14452,"line_start":64,"line_end":64,"column_start":32,"column_end":37},"alias_span":null,"name":"ready","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4499},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14454,"byte_end":14459,"line_start":64,"line_end":64,"column_start":39,"column_end":44},"alias_span":null,"name":"Ready","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14494,"byte_end":14498,"line_start":67,"line_end":67,"column_start":22,"column_end":26},"alias_span":null,"name":"join","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14500,"byte_end":14505,"line_start":67,"line_end":67,"column_start":28,"column_end":33},"alias_span":null,"name":"join3","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14507,"byte_end":14512,"line_start":67,"line_end":67,"column_start":35,"column_end":40},"alias_span":null,"name":"join4","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14514,"byte_end":14519,"line_start":67,"line_end":67,"column_start":42,"column_end":47},"alias_span":null,"name":"join5","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4601},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14521,"byte_end":14525,"line_start":67,"line_end":67,"column_start":49,"column_end":53},"alias_span":null,"name":"Join","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4653},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14527,"byte_end":14532,"line_start":67,"line_end":67,"column_start":55,"column_end":60},"alias_span":null,"name":"Join3","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4719},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14534,"byte_end":14539,"line_start":67,"line_end":67,"column_start":62,"column_end":67},"alias_span":null,"name":"Join4","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4799},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14541,"byte_end":14546,"line_start":67,"line_end":67,"column_start":69,"column_end":74},"alias_span":null,"name":"Join5","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14697,"byte_end":14703,"line_start":75,"line_end":75,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4893},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14705,"byte_end":14711,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14879,"byte_end":14887,"line_start":84,"line_end":84,"column_start":5,"column_end":13},"alias_span":null,"name":"try_join","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14889,"byte_end":14898,"line_start":84,"line_end":84,"column_start":15,"column_end":24},"alias_span":null,"name":"try_join3","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14900,"byte_end":14909,"line_start":84,"line_end":84,"column_start":26,"column_end":35},"alias_span":null,"name":"try_join4","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14911,"byte_end":14920,"line_start":84,"line_end":84,"column_start":37,"column_end":46},"alias_span":null,"name":"try_join5","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14922,"byte_end":14929,"line_start":84,"line_end":84,"column_start":48,"column_end":55},"alias_span":null,"name":"TryJoin","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":5023},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14931,"byte_end":14939,"line_start":84,"line_end":84,"column_start":57,"column_end":65},"alias_span":null,"name":"TryJoin3","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":5089},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14941,"byte_end":14949,"line_start":84,"line_end":84,"column_start":67,"column_end":75},"alias_span":null,"name":"TryJoin4","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":5169},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":14951,"byte_end":14959,"line_start":84,"line_end":84,"column_start":77,"column_end":85},"alias_span":null,"name":"TryJoin5","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":15135,"byte_end":15145,"line_start":93,"line_end":93,"column_start":28,"column_end":38},"alias_span":null,"name":"try_select","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":5263},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":15147,"byte_end":15156,"line_start":93,"line_end":93,"column_start":40,"column_end":49},"alias_span":null,"name":"TrySelect","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":5271},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":15310,"byte_end":15316,"line_start":101,"line_end":101,"column_start":23,"column_end":29},"alias_span":null,"name":"Either","value":"","parent":{"krate":0,"index":13}},{"kind":"Use","ref_id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11977,"byte_end":11986,"line_start":309,"line_end":309,"column_start":40,"column_end":49},"alias_span":null,"name":"FutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11988,"byte_end":12000,"line_start":309,"line_end":309,"column_start":51,"column_end":63},"alias_span":null,"name":"TryFutureExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":82},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113660,"byte_end":113671,"line_start":9,"line_end":9,"column_start":32,"column_end":43},"alias_span":null,"name":"FusedStream","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":4,"index":68},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113673,"byte_end":113679,"line_start":9,"line_end":9,"column_start":45,"column_end":51},"alias_span":null,"name":"Stream","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":4,"index":97},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113681,"byte_end":113690,"line_start":9,"line_end":9,"column_start":53,"column_end":62},"alias_span":null,"name":"TryStream","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":5340},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113806,"byte_end":113811,"line_start":16,"line_end":16,"column_start":5,"column_end":10},"alias_span":null,"name":"Chain","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":5396},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113813,"byte_end":113820,"line_start":16,"line_end":16,"column_start":12,"column_end":19},"alias_span":null,"name":"Collect","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":5451},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113822,"byte_end":113828,"line_start":16,"line_end":16,"column_start":21,"column_end":27},"alias_span":null,"name":"Concat","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":5495},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113830,"byte_end":113839,"line_start":16,"line_end":16,"column_start":29,"column_end":38},"alias_span":null,"name":"Enumerate","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":5543},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113841,"byte_end":113847,"line_start":16,"line_end":16,"column_start":40,"column_end":46},"alias_span":null,"name":"Filter","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":5615},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113849,"byte_end":113858,"line_start":16,"line_end":16,"column_start":48,"column_end":57},"alias_span":null,"name":"FilterMap","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6136},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113860,"byte_end":113867,"line_start":16,"line_end":16,"column_start":59,"column_end":66},"alias_span":null,"name":"FlatMap","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":5746},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113869,"byte_end":113876,"line_start":16,"line_end":16,"column_start":68,"column_end":75},"alias_span":null,"name":"Flatten","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":5804},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113878,"byte_end":113882,"line_start":16,"line_end":16,"column_start":77,"column_end":81},"alias_span":null,"name":"Fold","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":5882},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113884,"byte_end":113891,"line_start":16,"line_end":16,"column_start":83,"column_end":90},"alias_span":null,"name":"ForEach","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":5947},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113893,"byte_end":113897,"line_start":16,"line_end":16,"column_start":92,"column_end":96},"alias_span":null,"name":"Fuse","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6004},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113903,"byte_end":113910,"line_start":17,"line_end":17,"column_start":5,"column_end":12},"alias_span":null,"name":"Inspect","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6077},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113912,"byte_end":113915,"line_start":17,"line_end":17,"column_start":14,"column_end":17},"alias_span":null,"name":"Map","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6224},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113917,"byte_end":113921,"line_start":17,"line_end":17,"column_start":19,"column_end":23},"alias_span":null,"name":"Next","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6288},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113923,"byte_end":113927,"line_start":17,"line_end":17,"column_start":25,"column_end":29},"alias_span":null,"name":"Peek","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6240},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113929,"byte_end":113937,"line_start":17,"line_end":17,"column_start":31,"column_end":39},"alias_span":null,"name":"Peekable","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6775},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113939,"byte_end":113943,"line_start":17,"line_end":17,"column_start":41,"column_end":45},"alias_span":null,"name":"Scan","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6232},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113945,"byte_end":113959,"line_start":17,"line_end":17,"column_start":47,"column_end":61},"alias_span":null,"name":"SelectNextSome","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6336},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113961,"byte_end":113965,"line_start":17,"line_end":17,"column_start":63,"column_end":67},"alias_span":null,"name":"Skip","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6384},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113967,"byte_end":113976,"line_start":17,"line_end":17,"column_start":69,"column_end":78},"alias_span":null,"name":"SkipWhile","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113978,"byte_end":113987,"line_start":17,"line_end":17,"column_start":80,"column_end":89},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":5995},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113993,"byte_end":114005,"line_start":18,"line_end":18,"column_start":5,"column_end":17},"alias_span":null,"name":"StreamFuture","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6459},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114007,"byte_end":114011,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"alias_span":null,"name":"Take","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6507},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114013,"byte_end":114022,"line_start":18,"line_end":18,"column_start":25,"column_end":34},"alias_span":null,"name":"TakeWhile","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6582},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114024,"byte_end":114033,"line_start":18,"line_end":18,"column_start":36,"column_end":45},"alias_span":null,"name":"TakeUntil","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6644},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114035,"byte_end":114039,"line_start":18,"line_end":18,"column_start":47,"column_end":51},"alias_span":null,"name":"Then","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6713},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114041,"byte_end":114044,"line_start":18,"line_end":18,"column_start":53,"column_end":56},"alias_span":null,"name":"Zip","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":1837},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114799,"byte_end":114809,"line_start":46,"line_end":46,"column_start":5,"column_end":15},"alias_span":null,"name":"try_unfold","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6854},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114811,"byte_end":114818,"line_start":46,"line_end":46,"column_start":17,"column_end":24},"alias_span":null,"name":"AndThen","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":6926},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114820,"byte_end":114827,"line_start":46,"line_end":46,"column_start":26,"column_end":33},"alias_span":null,"name":"ErrInto","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7078},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114829,"byte_end":114839,"line_start":46,"line_end":46,"column_start":35,"column_end":45},"alias_span":null,"name":"InspectErr","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7002},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114841,"byte_end":114850,"line_start":46,"line_end":46,"column_start":47,"column_end":56},"alias_span":null,"name":"InspectOk","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7151},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114852,"byte_end":114862,"line_start":46,"line_end":46,"column_start":58,"column_end":68},"alias_span":null,"name":"IntoStream","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7275},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114864,"byte_end":114870,"line_start":46,"line_end":46,"column_start":70,"column_end":76},"alias_span":null,"name":"MapErr","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7199},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114872,"byte_end":114877,"line_start":46,"line_end":46,"column_start":78,"column_end":83},"alias_span":null,"name":"MapOk","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7348},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114879,"byte_end":114885,"line_start":46,"line_end":46,"column_start":85,"column_end":91},"alias_span":null,"name":"OrElse","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7680},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114891,"byte_end":114901,"line_start":47,"line_end":47,"column_start":5,"column_end":15},"alias_span":null,"name":"TryCollect","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7735},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114903,"byte_end":114912,"line_start":47,"line_end":47,"column_start":17,"column_end":26},"alias_span":null,"name":"TryConcat","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7490},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114914,"byte_end":114923,"line_start":47,"line_end":47,"column_start":28,"column_end":37},"alias_span":null,"name":"TryFilter","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7562},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114925,"byte_end":114937,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"alias_span":null,"name":"TryFilterMap","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7631},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114939,"byte_end":114949,"line_start":47,"line_end":47,"column_start":53,"column_end":63},"alias_span":null,"name":"TryFlatten","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7779},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114951,"byte_end":114958,"line_start":47,"line_end":47,"column_start":65,"column_end":72},"alias_span":null,"name":"TryFold","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7425},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114960,"byte_end":114970,"line_start":47,"line_end":47,"column_start":74,"column_end":84},"alias_span":null,"name":"TryForEach","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7417},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114972,"byte_end":114979,"line_start":47,"line_end":47,"column_start":86,"column_end":93},"alias_span":null,"name":"TryNext","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7921},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114985,"byte_end":114997,"line_start":48,"line_end":48,"column_start":5,"column_end":17},"alias_span":null,"name":"TrySkipWhile","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":1931},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":114999,"byte_end":115011,"line_start":48,"line_end":48,"column_start":19,"column_end":31},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7996},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115013,"byte_end":115025,"line_start":48,"line_end":48,"column_start":33,"column_end":45},"alias_span":null,"name":"TryTakeWhile","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":7857},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115027,"byte_end":115036,"line_start":48,"line_end":48,"column_start":47,"column_end":56},"alias_span":null,"name":"TryUnfold","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":2007},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115406,"byte_end":115410,"line_start":63,"line_end":63,"column_start":22,"column_end":26},"alias_span":null,"name":"iter","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":8071},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115412,"byte_end":115416,"line_start":63,"line_end":63,"column_start":28,"column_end":32},"alias_span":null,"name":"Iter","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":2025},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115455,"byte_end":115461,"line_start":66,"line_end":66,"column_start":24,"column_end":30},"alias_span":null,"name":"repeat","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":8077},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115463,"byte_end":115469,"line_start":66,"line_end":66,"column_start":32,"column_end":38},"alias_span":null,"name":"Repeat","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115506,"byte_end":115511,"line_start":69,"line_end":69,"column_start":23,"column_end":28},"alias_span":null,"name":"empty","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":8083},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115513,"byte_end":115518,"line_start":69,"line_end":69,"column_start":30,"column_end":35},"alias_span":null,"name":"Empty","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115553,"byte_end":115557,"line_start":72,"line_end":72,"column_start":22,"column_end":26},"alias_span":null,"name":"once","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":8089},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115559,"byte_end":115563,"line_start":72,"line_end":72,"column_start":28,"column_end":32},"alias_span":null,"name":"Once","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115604,"byte_end":115611,"line_start":75,"line_end":75,"column_start":25,"column_end":32},"alias_span":null,"name":"pending","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":8130},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115613,"byte_end":115620,"line_start":75,"line_end":75,"column_start":34,"column_end":41},"alias_span":null,"name":"Pending","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115661,"byte_end":115668,"line_start":78,"line_end":78,"column_start":25,"column_end":32},"alias_span":null,"name":"poll_fn","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115670,"byte_end":115676,"line_start":78,"line_end":78,"column_start":34,"column_end":40},"alias_span":null,"name":"PollFn","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115715,"byte_end":115721,"line_start":81,"line_end":81,"column_start":24,"column_end":30},"alias_span":null,"name":"select","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":8136},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115723,"byte_end":115729,"line_start":81,"line_end":81,"column_start":32,"column_end":38},"alias_span":null,"name":"Select","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115768,"byte_end":115774,"line_start":84,"line_end":84,"column_start":24,"column_end":30},"alias_span":null,"name":"unfold","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":8195},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":115776,"byte_end":115782,"line_start":84,"line_end":84,"column_start":32,"column_end":38},"alias_span":null,"name":"Unfold","value":"","parent":{"krate":0,"index":676}},{"kind":"Use","ref_id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":12059,"byte_end":12068,"line_start":312,"line_end":312,"column_start":40,"column_end":49},"alias_span":null,"name":"StreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":1931},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":12070,"byte_end":12082,"line_start":312,"line_end":312,"column_start":51,"column_end":63},"alias_span":null,"name":"TryStreamExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":4,"index":142},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306151,"byte_end":306162,"line_start":13,"line_end":13,"column_start":45,"column_end":56},"alias_span":null,"name":"AtomicWaker","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306200,"byte_end":306208,"line_start":17,"line_end":17,"column_start":23,"column_end":31},"alias_span":null,"name":"SpawnExt","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306210,"byte_end":306223,"line_start":17,"line_end":17,"column_start":33,"column_end":46},"alias_span":null,"name":"LocalSpawnExt","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":1,"index":8502},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306256,"byte_end":306263,"line_start":19,"line_end":19,"column_start":30,"column_end":37},"alias_span":null,"name":"Context","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":1,"index":32540},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306265,"byte_end":306269,"line_start":19,"line_end":19,"column_start":39,"column_end":43},"alias_span":null,"name":"Poll","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":1,"index":8512},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306271,"byte_end":306276,"line_start":19,"line_end":19,"column_start":45,"column_end":50},"alias_span":null,"name":"Waker","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":1,"index":32580},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306278,"byte_end":306286,"line_start":19,"line_end":19,"column_start":52,"column_end":60},"alias_span":null,"name":"RawWaker","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":1,"index":32589},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306288,"byte_end":306302,"line_start":19,"line_end":19,"column_start":62,"column_end":76},"alias_span":null,"name":"RawWakerVTable","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":16,"index":10},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306334,"byte_end":306339,"line_start":22,"line_end":22,"column_start":5,"column_end":10},"alias_span":null,"name":"Spawn","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":16,"index":13},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306341,"byte_end":306351,"line_start":22,"line_end":22,"column_start":12,"column_end":22},"alias_span":null,"name":"LocalSpawn","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":16,"index":16},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306353,"byte_end":306363,"line_start":22,"line_end":22,"column_start":24,"column_end":34},"alias_span":null,"name":"SpawnError","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":16,"index":89},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306369,"byte_end":306378,"line_start":23,"line_end":23,"column_start":5,"column_end":14},"alias_span":null,"name":"FutureObj","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":16,"index":55},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306380,"byte_end":306394,"line_start":23,"line_end":23,"column_start":16,"column_end":30},"alias_span":null,"name":"LocalFutureObj","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":16,"index":110},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306396,"byte_end":306411,"line_start":23,"line_end":23,"column_start":32,"column_end":47},"alias_span":null,"name":"UnsafeFutureObj","value":"","parent":{"krate":0,"index":2220}},{"kind":"Use","ref_id":{"krate":16,"index":151},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":306439,"byte_end":306449,"line_start":26,"line_end":26,"column_start":23,"column_end":33},"alias_span":null,"name":"noop_waker","value":"","parent":{"krate":0,"index":2220}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":12703,"line_start":1,"line_end":342,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":7},{"krate":0,"index":13},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":675},{"krate":0,"index":676},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2220},{"krate":0,"index":2248},{"krate":0,"index":2250}],"decl_id":null,"docs":" Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,\n and the `AsyncRead` and `AsyncWrite` traits.\n","sig":null,"attributes":[{"value":"! Combinators and utilities for working with `Future`s, `Stream`s, `Sink`s,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":77,"line_start":1,"line_end":1,"column_start":1,"column_end":78}},{"value":"! and the `AsyncRead` and `AsyncWrite` traits.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":78,"byte_end":126,"line_start":2,"line_end":2,"column_start":1,"column_end":49}},{"value":"no_std","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":385,"byte_end":391,"line_start":8,"line_end":8,"column_start":35,"column_end":41}},{"value":"warn(missing_docs, missing_debug_implementations, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":394,"byte_end":482,"line_start":9,"line_end":9,"column_start":1,"column_end":89}},{"value":"warn(clippy :: all)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":650,"byte_end":671,"line_start":12,"line_end":12,"column_start":1,"column_end":22}},{"value":"allow(clippy :: mem_replace_with_default, clippy ::\n        match_like_matches_macro)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":876,"byte_end":953,"line_start":17,"line_end":17,"column_start":1,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"future","qualname":"::future","value":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":293},{"krate":0,"index":294},{"krate":0,"index":295},{"krate":0,"index":296},{"krate":0,"index":297},{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":330},{"krate":0,"index":331},{"krate":0,"index":332},{"krate":0,"index":333},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":381},{"krate":0,"index":382},{"krate":0,"index":383},{"krate":0,"index":384},{"krate":0,"index":407},{"krate":0,"index":408},{"krate":0,"index":409},{"krate":0,"index":410},{"krate":0,"index":429},{"krate":0,"index":430},{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":484},{"krate":0,"index":485},{"krate":0,"index":486},{"krate":0,"index":487},{"krate":0,"index":488},{"krate":0,"index":489},{"krate":0,"index":522},{"krate":0,"index":523},{"krate":0,"index":524},{"krate":0,"index":525},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":531},{"krate":0,"index":557},{"krate":0,"index":558},{"krate":0,"index":559},{"krate":0,"index":560},{"krate":0,"index":592},{"krate":0,"index":593},{"krate":0,"index":594},{"krate":0,"index":595},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":669},{"krate":0,"index":670}],"decl_id":null,"docs":" Futures","sig":null,"attributes":[{"value":"! Futures","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":12705,"byte_end":12716,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":12717,"byte_end":12720,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Future`s,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":12721,"byte_end":12795,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`FutureExt`] trait and the [`TryFutureExt`] trait which add","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":12796,"byte_end":12874,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Future` types.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\mod.rs","byte_start":12875,"byte_end":12905,"line_start":5,"line_end":5,"column_start":1,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2461},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":35903,"byte_end":35908,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::future::flatten::Flatten::First","value":"Flatten::First(Fut1)","parent":{"krate":0,"index":2458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2463},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":35927,"byte_end":35933,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::future::flatten::Flatten::Second","value":"Flatten::Second(Fut2)","parent":{"krate":0,"index":2458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2465},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":35952,"byte_end":35957,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::future::flatten::Flatten::Empty","value":"Flatten::Empty","parent":{"krate":0,"index":2458},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2458},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":35877,"byte_end":35884,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"Flatten","qualname":"::future::future::flatten::Flatten","value":"pub enum Flatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":2461},{"krate":0,"index":2463},{"krate":0,"index":2465}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = FlattenProj))","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":35813,"byte_end":35850,"line_start":9,"line_end":9,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2501},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":35877,"byte_end":35884,"line_start":11,"line_end":11,"column_start":10,"column_end":17},"name":"__Flatten","qualname":"::future::future::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":2505},{"krate":0,"index":2506},{"krate":0,"index":2507}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2529},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40316,"byte_end":40320,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::future::future::fuse::Fuse","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`fuse`](super::FutureExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40237,"byte_end":40304,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40205,"byte_end":40219,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":2550},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40316,"byte_end":40320,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::future::future::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":2553},{"krate":0,"index":2554}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":42102,"byte_end":42112,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"terminated","qualname":"<Fuse<Fut>>::terminated","value":"pub fn terminated() -> Fuse<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Fuse`-wrapped future which is already terminated.","sig":null,"attributes":[{"value":"/ Creates a new `Fuse`-wrapped future which is already terminated.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40480,"byte_end":40548,"line_start":19,"line_end":19,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40553,"byte_end":40556,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ This can be useful in combination with looping and the `select!`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40561,"byte_end":40629,"line_start":21,"line_end":21,"column_start":5,"column_end":73}},{"value":"/ macro, which bypasses terminated futures.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40634,"byte_end":40679,"line_start":22,"line_end":22,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40684,"byte_end":40687,"line_start":23,"line_end":23,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40692,"byte_end":40706,"line_start":24,"line_end":24,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40711,"byte_end":40714,"line_start":25,"line_end":25,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40719,"byte_end":40726,"line_start":26,"line_end":26,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40731,"byte_end":40772,"line_start":27,"line_end":27,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40777,"byte_end":40808,"line_start":28,"line_end":28,"column_start":5,"column_end":36}},{"value":"/ use futures::future::{Fuse, FusedFuture, FutureExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40813,"byte_end":40869,"line_start":29,"line_end":29,"column_start":5,"column_end":61}},{"value":"/ use futures::select;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40874,"byte_end":40898,"line_start":30,"line_end":30,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40903,"byte_end":40938,"line_start":31,"line_end":31,"column_start":5,"column_end":40}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40943,"byte_end":40968,"line_start":32,"line_end":32,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40973,"byte_end":40976,"line_start":33,"line_end":33,"column_start":5,"column_end":8}},{"value":"/ let (sender, mut stream) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40981,"byte_end":41030,"line_start":34,"line_end":34,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41035,"byte_end":41038,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ // Send a few messages into the stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41043,"byte_end":41085,"line_start":36,"line_end":36,"column_start":5,"column_end":47}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41090,"byte_end":41129,"line_start":37,"line_end":37,"column_start":5,"column_end":44}},{"value":"/ sender.unbounded_send(()).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41134,"byte_end":41173,"line_start":38,"line_end":38,"column_start":5,"column_end":44}},{"value":"/ drop(sender);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41178,"byte_end":41195,"line_start":39,"line_end":39,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41200,"byte_end":41203,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ // Use `Fuse::terminated()` to create an already-terminated future","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41208,"byte_end":41278,"line_start":41,"line_end":41,"column_start":5,"column_end":75}},{"value":"/ // which may be instantiated later.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41283,"byte_end":41322,"line_start":42,"line_end":42,"column_start":5,"column_end":44}},{"value":"/ let foo_printer = Fuse::terminated();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41327,"byte_end":41368,"line_start":43,"line_end":43,"column_start":5,"column_end":46}},{"value":"/ pin_mut!(foo_printer);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41373,"byte_end":41399,"line_start":44,"line_end":44,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41404,"byte_end":41407,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41412,"byte_end":41422,"line_start":46,"line_end":46,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41427,"byte_end":41444,"line_start":47,"line_end":47,"column_start":5,"column_end":22}},{"value":"/         _ = foo_printer => {},","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41449,"byte_end":41483,"line_start":48,"line_end":48,"column_start":5,"column_end":39}},{"value":"/         () = stream.select_next_some() => {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41488,"byte_end":41535,"line_start":49,"line_end":49,"column_start":5,"column_end":52}},{"value":"/             if !foo_printer.is_terminated() {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41540,"byte_end":41589,"line_start":50,"line_end":50,"column_start":5,"column_end":54}},{"value":"/                 println!(\"Foo is already being printed!\");","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41594,"byte_end":41656,"line_start":51,"line_end":51,"column_start":5,"column_end":67}},{"value":"/             } else {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41661,"byte_end":41685,"line_start":52,"line_end":52,"column_start":5,"column_end":29}},{"value":"/                 foo_printer.set(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41690,"byte_end":41733,"line_start":53,"line_end":53,"column_start":5,"column_end":48}},{"value":"/                     // do some other async operations","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41738,"byte_end":41795,"line_start":54,"line_end":54,"column_start":5,"column_end":62}},{"value":"/                     println!(\"Printing foo from `foo_printer` future\");","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41800,"byte_end":41875,"line_start":55,"line_end":55,"column_start":5,"column_end":80}},{"value":"/                 }.fuse());","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41880,"byte_end":41910,"line_start":56,"line_end":56,"column_start":5,"column_end":35}},{"value":"/             }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41915,"byte_end":41932,"line_start":57,"line_end":57,"column_start":5,"column_end":22}},{"value":"/         },","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41937,"byte_end":41951,"line_start":58,"line_end":58,"column_start":5,"column_end":19}},{"value":"/         complete => break, // `foo_printer` is terminated and the stream is done","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":41956,"byte_end":42040,"line_start":59,"line_end":59,"column_start":5,"column_end":89}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":42045,"byte_end":42054,"line_start":60,"line_end":60,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":42059,"byte_end":42064,"line_start":61,"line_end":61,"column_start":5,"column_end":10}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":42069,"byte_end":42078,"line_start":62,"line_end":62,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":42083,"byte_end":42090,"line_start":63,"line_end":63,"column_start":5,"column_end":12}}]},{"kind":"StructVariant","id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\map.rs","byte_start":43088,"byte_end":43098,"line_start":13,"line_end":13,"column_start":5,"column_end":15},"name":"Incomplete","qualname":"::future::future::map::Map::Incomplete","value":"Map::Incomplete { future, f }","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\map.rs","byte_start":43162,"byte_end":43170,"line_start":18,"line_end":18,"column_start":5,"column_end":13},"name":"Complete","qualname":"::future::future::map::Map::Complete","value":"Map::Complete","parent":{"krate":0,"index":2573},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2573},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\map.rs","byte_start":43070,"byte_end":43073,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"Map","qualname":"::future::future::map::Map","value":"pub enum Map<Fut, F> {\n    Incomplete {\n        #[pin]\n        future: Fut,\n        f: F,\n    },\n    Complete,\n}","parent":null,"children":[{"krate":0,"index":2576},{"krate":0,"index":2578}],"decl_id":null,"docs":" Internal Map future\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\map.rs","byte_start":42993,"byte_end":43060,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private(project = MapProj, project_replace = MapProjOwn))","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\map.rs","byte_start":42912,"byte_end":42975,"line_start":9,"line_end":9,"column_start":1,"column_end":64}}]},{"kind":"Struct","id":{"krate":0,"index":2616},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\map.rs","byte_start":43070,"byte_end":43073,"line_start":12,"line_end":12,"column_start":10,"column_end":13},"name":"__Map","qualname":"::future::future::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":2620},{"krate":0,"index":2621}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2645},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::future::future::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":2647}],"decl_id":null,"docs":" Future for the [`flatten`](super::FutureExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2663},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::future::future::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":2666},{"krate":0,"index":2667}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2698},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"FlattenStream","qualname":"::future::future::FlattenStream","value":"FlattenStream {  }","parent":null,"children":[{"krate":0,"index":2700}],"decl_id":null,"docs":" Stream for the [`flatten_stream`](FutureExt::flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2716},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__FlattenStream","qualname":"::future::future::_::__FlattenStream","value":"__FlattenStream {  }","parent":null,"children":[{"krate":0,"index":2719},{"krate":0,"index":2720}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2753},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"Map","qualname":"::future::future::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":2756}],"decl_id":null,"docs":" Future for the [`map`](super::FutureExt::map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2775},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__Map","qualname":"::future::future::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":2779},{"krate":0,"index":2780}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2820},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"IntoStream","qualname":"::future::future::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":2822}],"decl_id":null,"docs":" Stream for the [`into_stream`](FutureExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2838},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__IntoStream","qualname":"::future::future::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2842}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2875},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"MapInto","qualname":"::future::future::MapInto","value":"MapInto {  }","parent":null,"children":[{"krate":0,"index":2878}],"decl_id":null,"docs":" Future for the [`map_into`](FutureExt::map_into) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2897},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__MapInto","qualname":"::future::future::_::__MapInto","value":"__MapInto {  }","parent":null,"children":[{"krate":0,"index":2901},{"krate":0,"index":2902}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2944},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"Then","qualname":"::future::future::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":2948}],"decl_id":null,"docs":" Future for the [`then`](FutureExt::then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":2970},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__Then","qualname":"::future::future::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":2975},{"krate":0,"index":2976}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3026},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::future::future::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":3029}],"decl_id":null,"docs":" Future for the [`inspect`](FutureExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3048},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::future::future::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":3052},{"krate":0,"index":3053}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3093},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"NeverError","qualname":"::future::future::NeverError","value":"NeverError {  }","parent":null,"children":[{"krate":0,"index":3095}],"decl_id":null,"docs":" Future for the [`never_error`](super::FutureExt::never_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__NeverError","qualname":"::future::future::_::__NeverError","value":"__NeverError {  }","parent":null,"children":[{"krate":0,"index":3114},{"krate":0,"index":3115}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3146},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"UnitError","qualname":"::future::future::UnitError","value":"UnitError {  }","parent":null,"children":[{"krate":0,"index":3148}],"decl_id":null,"docs":" Future for the [`unit_error`](super::FutureExt::unit_error) combinator.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3164},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__UnitError","qualname":"::future::future::_::__UnitError","value":"__UnitError {  }","parent":null,"children":[{"krate":0,"index":3167},{"krate":0,"index":3168}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19400,"byte_end":19409,"line_start":123,"line_end":123,"column_start":11,"column_end":20},"name":"FutureExt","qualname":"::future::future::FutureExt","value":"FutureExt: Future","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":137},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145}],"decl_id":null,"docs":" An extension trait for `Future`s that provides a variety of convenient\n adapters.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Future`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19301,"byte_end":19375,"line_start":121,"line_end":121,"column_start":1,"column_end":75}},{"value":"/ adapters.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19376,"byte_end":19389,"line_start":122,"line_end":122,"column_start":1,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":124},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20241,"byte_end":20244,"line_start":146,"line_end":146,"column_start":8,"column_end":11},"name":"map","qualname":"::future::future::FutureExt::map","value":"pub fn map<U, F>(Self, F) -> Map<Self, F> where F: FnOnce(Self::Output) -> U,\nSelf: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19424,"byte_end":19499,"line_start":124,"line_end":124,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19504,"byte_end":19527,"line_start":125,"line_end":125,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19532,"byte_end":19535,"line_start":126,"line_end":126,"column_start":5,"column_end":8}},{"value":"/ This function is similar to the `Option::map` or `Iterator::map` where","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19540,"byte_end":19614,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ it will change the type of the underlying future. This is useful to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19619,"byte_end":19690,"line_start":128,"line_end":128,"column_start":5,"column_end":76}},{"value":"/ chain along a computation once a future has been resolved.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19695,"byte_end":19757,"line_start":129,"line_end":129,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19762,"byte_end":19765,"line_start":130,"line_end":130,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19770,"byte_end":19841,"line_start":131,"line_end":131,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19846,"byte_end":19917,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19922,"byte_end":19943,"line_start":133,"line_end":133,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19948,"byte_end":19951,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19956,"byte_end":19970,"line_start":135,"line_end":135,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19975,"byte_end":19978,"line_start":136,"line_end":136,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19983,"byte_end":19990,"line_start":137,"line_end":137,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19995,"byte_end":20036,"line_start":138,"line_end":138,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20041,"byte_end":20076,"line_start":139,"line_end":139,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20081,"byte_end":20084,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20089,"byte_end":20118,"line_start":141,"line_end":141,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.map(|x| x + 3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20123,"byte_end":20166,"line_start":142,"line_end":142,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(new_future.await, 4);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20171,"byte_end":20207,"line_start":143,"line_end":143,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20212,"byte_end":20221,"line_start":144,"line_end":144,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20226,"byte_end":20233,"line_start":145,"line_end":145,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":127},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20641,"byte_end":20649,"line_start":159,"line_end":159,"column_start":8,"column_end":16},"name":"map_into","qualname":"::future::future::FutureExt::map_into","value":"pub fn map_into<U>(Self) -> MapInto<Self, U> where Self::Output: Into<U>,\nSelf: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Map this future's output to a different type, returning a new future of\n the resulting type.","sig":null,"attributes":[{"value":"/ Map this future's output to a different type, returning a new future of","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20414,"byte_end":20489,"line_start":154,"line_end":154,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20494,"byte_end":20517,"line_start":155,"line_end":155,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20522,"byte_end":20525,"line_start":156,"line_end":156,"column_start":5,"column_end":8}},{"value":"/ This function is equivalent to calling `map(Into::into)` but allows naming","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20530,"byte_end":20608,"line_start":157,"line_end":157,"column_start":5,"column_end":83}},{"value":"/ the return type.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20613,"byte_end":20633,"line_start":158,"line_end":158,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":129},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21661,"byte_end":21665,"line_start":191,"line_end":191,"column_start":8,"column_end":12},"name":"then","qualname":"::future::future::FutureExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where\nF: FnOnce(Self::Output) -> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Chain on a computation for when a future finished, passing the result of\n the future to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a future finished, passing the result of","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20808,"byte_end":20884,"line_start":167,"line_end":167,"column_start":5,"column_end":81}},{"value":"/ the future to the provided closure `f`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20889,"byte_end":20932,"line_start":168,"line_end":168,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20937,"byte_end":20940,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `Future` trait","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":20945,"byte_end":21016,"line_start":170,"line_end":170,"column_start":5,"column_end":76}},{"value":"/ and can represent some more work to be done before the composed future","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21021,"byte_end":21095,"line_start":171,"line_end":171,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21100,"byte_end":21116,"line_start":172,"line_end":172,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21121,"byte_end":21124,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ The closure `f` is only run *after* successful completion of the `self`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21129,"byte_end":21204,"line_start":174,"line_end":174,"column_start":5,"column_end":80}},{"value":"/ future.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21209,"byte_end":21220,"line_start":175,"line_end":175,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21225,"byte_end":21228,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21233,"byte_end":21304,"line_start":177,"line_end":177,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21309,"byte_end":21335,"line_start":178,"line_end":178,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21340,"byte_end":21343,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21348,"byte_end":21362,"line_start":180,"line_end":180,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21367,"byte_end":21370,"line_start":181,"line_end":181,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21375,"byte_end":21382,"line_start":182,"line_end":182,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21387,"byte_end":21428,"line_start":183,"line_end":183,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21433,"byte_end":21468,"line_start":184,"line_end":184,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21473,"byte_end":21476,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ let future_of_1 = async { 1 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21481,"byte_end":21515,"line_start":186,"line_end":186,"column_start":5,"column_end":39}},{"value":"/ let future_of_4 = future_of_1.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21520,"byte_end":21585,"line_start":187,"line_end":187,"column_start":5,"column_end":70}},{"value":"/ assert_eq!(future_of_4.await, 4);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21590,"byte_end":21627,"line_start":188,"line_end":188,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21632,"byte_end":21641,"line_start":189,"line_end":189,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21646,"byte_end":21653,"line_start":190,"line_end":190,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":132},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22535,"byte_end":22546,"line_start":222,"line_end":222,"column_start":8,"column_end":19},"name":"left_future","qualname":"::future::future::FutureExt::left_future","value":"pub fn left_future<B>(Self) -> Either<Self, B> where B: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the left-hand variant","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21877,"byte_end":21952,"line_start":200,"line_end":200,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21957,"byte_end":21978,"line_start":201,"line_end":201,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21983,"byte_end":21986,"line_start":202,"line_end":202,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_future` method to write `if`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":21991,"byte_end":22071,"line_start":203,"line_end":203,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22076,"byte_end":22148,"line_start":204,"line_end":204,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22153,"byte_end":22156,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22161,"byte_end":22175,"line_start":206,"line_end":206,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22180,"byte_end":22183,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22188,"byte_end":22195,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22200,"byte_end":22241,"line_start":209,"line_end":209,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22246,"byte_end":22281,"line_start":210,"line_end":210,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22286,"byte_end":22289,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22294,"byte_end":22308,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/ let future = if x < 10 {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22313,"byte_end":22341,"line_start":213,"line_end":213,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22346,"byte_end":22382,"line_start":214,"line_end":214,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22387,"byte_end":22399,"line_start":215,"line_end":215,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22404,"byte_end":22442,"line_start":216,"line_end":216,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22447,"byte_end":22453,"line_start":217,"line_end":217,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22458,"byte_end":22461,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, true);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22466,"byte_end":22501,"line_start":219,"line_end":219,"column_start":5,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22506,"byte_end":22515,"line_start":220,"line_end":220,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22520,"byte_end":22527,"line_start":221,"line_end":221,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":134},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23385,"byte_end":23397,"line_start":252,"line_end":252,"column_start":8,"column_end":20},"name":"right_future","qualname":"::future::future::FutureExt::right_future","value":"pub fn right_future<A>(Self) -> Either<A, Self> where A: Future<Output =\nSelf::Output>, Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Wrap this future in an `Either` future, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this future in an `Either` future, making it the right-hand variant","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22726,"byte_end":22802,"line_start":230,"line_end":230,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22807,"byte_end":22828,"line_start":231,"line_end":231,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22833,"byte_end":22836,"line_start":232,"line_end":232,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_future` method to write `if`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22841,"byte_end":22920,"line_start":233,"line_end":233,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different futures in different branches.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":22925,"byte_end":22997,"line_start":234,"line_end":234,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23002,"byte_end":23005,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23010,"byte_end":23024,"line_start":236,"line_end":236,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23029,"byte_end":23032,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23037,"byte_end":23044,"line_start":238,"line_end":238,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23049,"byte_end":23090,"line_start":239,"line_end":239,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23095,"byte_end":23130,"line_start":240,"line_end":240,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23135,"byte_end":23138,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let x = 6;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23143,"byte_end":23157,"line_start":242,"line_end":242,"column_start":5,"column_end":19}},{"value":"/ let future = if x > 10 {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23162,"byte_end":23190,"line_start":243,"line_end":243,"column_start":5,"column_end":33}},{"value":"/     async { true }.left_future()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23195,"byte_end":23231,"line_start":244,"line_end":244,"column_start":5,"column_end":41}},{"value":"/ } else {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23236,"byte_end":23248,"line_start":245,"line_end":245,"column_start":5,"column_end":17}},{"value":"/     async { false }.right_future()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23253,"byte_end":23291,"line_start":246,"line_end":246,"column_start":5,"column_end":43}},{"value":"/ };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23296,"byte_end":23302,"line_start":247,"line_end":247,"column_start":5,"column_end":11}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23307,"byte_end":23310,"line_start":248,"line_end":248,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future.await, false);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23315,"byte_end":23351,"line_start":249,"line_end":249,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23356,"byte_end":23365,"line_start":250,"line_end":250,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23370,"byte_end":23377,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24176,"byte_end":24187,"line_start":278,"line_end":278,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::future::future::FutureExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Convert this future into a single element stream.","sig":null,"attributes":[{"value":"/ Convert this future into a single element stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23578,"byte_end":23631,"line_start":260,"line_end":260,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23636,"byte_end":23639,"line_start":261,"line_end":261,"column_start":5,"column_end":8}},{"value":"/ The returned stream contains single success if this future resolves to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23644,"byte_end":23718,"line_start":262,"line_end":262,"column_start":5,"column_end":79}},{"value":"/ success or single error if this future resolves into error.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23723,"byte_end":23786,"line_start":263,"line_end":263,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23791,"byte_end":23794,"line_start":264,"line_end":264,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23799,"byte_end":23813,"line_start":265,"line_end":265,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23818,"byte_end":23821,"line_start":266,"line_end":266,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23826,"byte_end":23833,"line_start":267,"line_end":267,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23838,"byte_end":23879,"line_start":268,"line_end":268,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23884,"byte_end":23919,"line_start":269,"line_end":269,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23924,"byte_end":23959,"line_start":270,"line_end":270,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23964,"byte_end":23967,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ let future = async { 17 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":23972,"byte_end":24002,"line_start":272,"line_end":272,"column_start":5,"column_end":35}},{"value":"/ let stream = future.into_stream();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24007,"byte_end":24045,"line_start":273,"line_end":273,"column_start":5,"column_end":43}},{"value":"/ let collected: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24050,"byte_end":24101,"line_start":274,"line_end":274,"column_start":5,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24106,"byte_end":24142,"line_start":275,"line_end":275,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24147,"byte_end":24156,"line_start":276,"line_end":276,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24161,"byte_end":24168,"line_start":277,"line_end":277,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25052,"byte_end":25059,"line_start":307,"line_end":307,"column_start":8,"column_end":15},"name":"flatten","qualname":"::future::future::FutureExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Output: Future, Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the output of this\n future is itself another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the output of this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24326,"byte_end":24390,"line_start":285,"line_end":285,"column_start":5,"column_end":69}},{"value":"/ future is itself another future.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24395,"byte_end":24431,"line_start":286,"line_end":286,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24436,"byte_end":24439,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ This can be useful when combining futures together to flatten the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24444,"byte_end":24513,"line_start":288,"line_end":288,"column_start":5,"column_end":74}},{"value":"/ computation out the final result.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24518,"byte_end":24555,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24560,"byte_end":24563,"line_start":290,"line_end":290,"column_start":5,"column_end":8}},{"value":"/ This method is roughly equivalent to `self.then(|x| x)`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24568,"byte_end":24628,"line_start":291,"line_end":291,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24633,"byte_end":24636,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving future and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24641,"byte_end":24712,"line_start":293,"line_end":293,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24717,"byte_end":24743,"line_start":294,"line_end":294,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24748,"byte_end":24751,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24756,"byte_end":24770,"line_start":296,"line_end":296,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24775,"byte_end":24778,"line_start":297,"line_end":297,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24783,"byte_end":24790,"line_start":298,"line_end":298,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24795,"byte_end":24836,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24841,"byte_end":24876,"line_start":300,"line_end":300,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24881,"byte_end":24884,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ let nested_future = async { async { 1 } };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24889,"byte_end":24935,"line_start":302,"line_end":302,"column_start":5,"column_end":51}},{"value":"/ let future = nested_future.flatten();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24940,"byte_end":24981,"line_start":303,"line_end":303,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(future.await, 1);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":24986,"byte_end":25018,"line_start":304,"line_end":304,"column_start":5,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25023,"byte_end":25032,"line_start":305,"line_end":305,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25037,"byte_end":25044,"line_start":306,"line_end":306,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":138},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26164,"byte_end":26178,"line_start":341,"line_end":341,"column_start":8,"column_end":22},"name":"flatten_stream","qualname":"::future::future::FutureExt::flatten_stream","value":"pub fn flatten_stream(Self) -> FlattenStream<Self> where Self::Output: Stream,\nSelf: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25273,"byte_end":25348,"line_start":316,"line_end":316,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25353,"byte_end":25376,"line_start":317,"line_end":317,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25381,"byte_end":25384,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25389,"byte_end":25461,"line_start":319,"line_end":319,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25466,"byte_end":25539,"line_start":320,"line_end":320,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25544,"byte_end":25558,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25563,"byte_end":25566,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25571,"byte_end":25641,"line_start":323,"line_end":323,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25646,"byte_end":25664,"line_start":324,"line_end":324,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25669,"byte_end":25672,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25677,"byte_end":25691,"line_start":326,"line_end":326,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25696,"byte_end":25699,"line_start":327,"line_end":327,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25704,"byte_end":25711,"line_start":328,"line_end":328,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25716,"byte_end":25757,"line_start":329,"line_end":329,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25762,"byte_end":25797,"line_start":330,"line_end":330,"column_start":5,"column_end":40}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25802,"byte_end":25845,"line_start":331,"line_end":331,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25850,"byte_end":25853,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19];","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25858,"byte_end":25898,"line_start":333,"line_end":333,"column_start":5,"column_end":45}},{"value":"/ let future_of_a_stream = async { stream::iter(stream_items) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25903,"byte_end":25969,"line_start":334,"line_end":334,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25974,"byte_end":25977,"line_start":335,"line_end":335,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.flatten_stream();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":25982,"byte_end":26035,"line_start":336,"line_end":336,"column_start":5,"column_end":58}},{"value":"/ let list: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26040,"byte_end":26086,"line_start":337,"line_end":337,"column_start":5,"column_end":51}},{"value":"/ assert_eq!(list, vec![17, 18, 19]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26091,"byte_end":26130,"line_start":338,"line_end":338,"column_start":5,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26135,"byte_end":26144,"line_start":339,"line_end":339,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26149,"byte_end":26156,"line_start":340,"line_end":340,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":139},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27266,"byte_end":27270,"line_start":365,"line_end":365,"column_start":8,"column_end":12},"name":"fuse","qualname":"::future::future::FutureExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Fuse a future such that `poll` will never again be called once it has\n completed. This method can be used to turn any `Future` into a\n `FusedFuture`.","sig":null,"attributes":[{"value":"/ Fuse a future such that `poll` will never again be called once it has","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26371,"byte_end":26444,"line_start":349,"line_end":349,"column_start":5,"column_end":78}},{"value":"/ completed. This method can be used to turn any `Future` into a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26449,"byte_end":26515,"line_start":350,"line_end":350,"column_start":5,"column_end":71}},{"value":"/ `FusedFuture`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26520,"byte_end":26538,"line_start":351,"line_end":351,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26543,"byte_end":26546,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Normally, once a future has returned `Poll::Ready` from `poll`,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26551,"byte_end":26618,"line_start":353,"line_end":353,"column_start":5,"column_end":72}},{"value":"/ any further calls could exhibit bad behavior such as blocking","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26623,"byte_end":26688,"line_start":354,"line_end":354,"column_start":5,"column_end":70}},{"value":"/ forever, panicking, never returning, etc. If it is known that `poll`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26693,"byte_end":26765,"line_start":355,"line_end":355,"column_start":5,"column_end":77}},{"value":"/ may be called too often then this method can be used to ensure that it","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26770,"byte_end":26844,"line_start":356,"line_end":356,"column_start":5,"column_end":79}},{"value":"/ has defined semantics.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26849,"byte_end":26875,"line_start":357,"line_end":357,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26880,"byte_end":26883,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ If a `fuse`d future is `poll`ed after having returned `Poll::Ready`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26888,"byte_end":26959,"line_start":359,"line_end":359,"column_start":5,"column_end":76}},{"value":"/ previously, it will return `Poll::Pending`, from `poll` again (and will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":26964,"byte_end":27039,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ continue to do so for all future calls to `poll`).","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27044,"byte_end":27098,"line_start":361,"line_end":361,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27103,"byte_end":27106,"line_start":362,"line_end":362,"column_start":5,"column_end":8}},{"value":"/ This combinator will drop the underlying future as soon as it has been","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27111,"byte_end":27185,"line_start":363,"line_end":363,"column_start":5,"column_end":79}},{"value":"/ completed to ensure resources are reclaimed as soon as possible.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27190,"byte_end":27258,"line_start":364,"line_end":364,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":140},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":28110,"byte_end":28117,"line_start":391,"line_end":391,"column_start":8,"column_end":15},"name":"inspect","qualname":"::future::future::FutureExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnOnce(&Self::Output)\n-> (), Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Do something with the output of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the output of a future before passing it on.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27416,"byte_end":27482,"line_start":373,"line_end":373,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27487,"byte_end":27490,"line_start":374,"line_end":374,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27495,"byte_end":27570,"line_start":375,"line_end":375,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27575,"byte_end":27648,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27653,"byte_end":27722,"line_start":377,"line_end":377,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27727,"byte_end":27777,"line_start":378,"line_end":378,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27782,"byte_end":27785,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27790,"byte_end":27804,"line_start":380,"line_end":380,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27809,"byte_end":27812,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27817,"byte_end":27824,"line_start":382,"line_end":382,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27829,"byte_end":27870,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ use futures::future::FutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27875,"byte_end":27910,"line_start":384,"line_end":384,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27915,"byte_end":27918,"line_start":385,"line_end":385,"column_start":5,"column_end":8}},{"value":"/ let future = async { 1 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27923,"byte_end":27952,"line_start":386,"line_end":386,"column_start":5,"column_end":34}},{"value":"/ let new_future = future.inspect(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":27957,"byte_end":28035,"line_start":387,"line_end":387,"column_start":5,"column_end":83}},{"value":"/ assert_eq!(new_future.await, 1);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":28040,"byte_end":28076,"line_start":388,"line_end":388,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":28081,"byte_end":28090,"line_start":389,"line_end":389,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":28095,"byte_end":28102,"line_start":390,"line_end":390,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":33278,"byte_end":33288,"line_start":540,"line_end":540,"column_start":8,"column_end":18},"name":"unit_error","qualname":"::future::future::FutureExt::unit_error","value":"pub fn unit_error(Self) -> UnitError<Self> where Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":33145,"byte_end":33194,"line_start":538,"line_end":538,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = ()`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":33199,"byte_end":33270,"line_start":539,"line_end":539,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":143},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":33573,"byte_end":33584,"line_start":549,"line_end":549,"column_start":8,"column_end":19},"name":"never_error","qualname":"::future::future::FutureExt::never_error","value":"pub fn never_error(Self) -> NeverError<Self> where Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Turns a [`Future<Output = T>`](Future) into a\n [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).\n","sig":null,"attributes":[{"value":"/ Turns a [`Future<Output = T>`](Future) into a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":33437,"byte_end":33486,"line_start":547,"line_end":547,"column_start":5,"column_end":54}},{"value":"/ [`TryFuture<Ok = T, Error = Never`>](futures_core::future::TryFuture).","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":33491,"byte_end":33565,"line_start":548,"line_end":548,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":33815,"byte_end":33825,"line_start":557,"line_end":557,"column_start":8,"column_end":18},"name":"poll_unpin","qualname":"::future::future::FutureExt::poll_unpin","value":"pub fn poll_unpin(&mut Self, &mut Context) -> Poll<Self::Output> where\nSelf: Unpin","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" A convenience for calling `Future::poll` on `Unpin` future types.\n","sig":null,"attributes":[{"value":"/ A convenience for calling `Future::poll` on `Unpin` future types.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":33738,"byte_end":33807,"line_start":556,"line_end":556,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":145},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":35221,"byte_end":35233,"line_start":595,"line_end":595,"column_start":8,"column_end":20},"name":"now_or_never","qualname":"::future::future::FutureExt::now_or_never","value":"pub fn now_or_never(Self) -> Option<Self::Output> where Self: Sized","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Evaluates and consumes the future, returning the resulting output if\n the future is ready after the first call to `Future::poll`.","sig":null,"attributes":[{"value":"/ Evaluates and consumes the future, returning the resulting output if","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":33961,"byte_end":34033,"line_start":564,"line_end":564,"column_start":5,"column_end":77}},{"value":"/ the future is ready after the first call to `Future::poll`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34038,"byte_end":34101,"line_start":565,"line_end":565,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34106,"byte_end":34109,"line_start":566,"line_end":566,"column_start":5,"column_end":8}},{"value":"/ If `poll` instead returns `Poll::Pending`, `None` is returned.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34114,"byte_end":34180,"line_start":567,"line_end":567,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34185,"byte_end":34188,"line_start":568,"line_end":568,"column_start":5,"column_end":8}},{"value":"/ This method is useful in cases where immediacy is more important than","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34193,"byte_end":34266,"line_start":569,"line_end":569,"column_start":5,"column_end":78}},{"value":"/ waiting for a result. It is also convenient for quickly obtaining","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34271,"byte_end":34340,"line_start":570,"line_end":570,"column_start":5,"column_end":74}},{"value":"/ the value of a future that is known to always resolve immediately.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34345,"byte_end":34415,"line_start":571,"line_end":571,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34420,"byte_end":34423,"line_start":572,"line_end":572,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34428,"byte_end":34442,"line_start":573,"line_end":573,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34447,"byte_end":34450,"line_start":574,"line_end":574,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34455,"byte_end":34462,"line_start":575,"line_end":575,"column_start":5,"column_end":12}},{"value":"/ # use futures::prelude::*;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34467,"byte_end":34497,"line_start":576,"line_end":576,"column_start":5,"column_end":35}},{"value":"/ use futures::{future::ready, future::pending};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34502,"byte_end":34552,"line_start":577,"line_end":577,"column_start":5,"column_end":55}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34557,"byte_end":34596,"line_start":578,"line_end":578,"column_start":5,"column_end":44}},{"value":"/ let future_pending = pending::<&'static str>();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34601,"byte_end":34652,"line_start":579,"line_end":579,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34657,"byte_end":34660,"line_start":580,"line_end":580,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never(), Some(\"foobar\"));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34665,"byte_end":34725,"line_start":581,"line_end":581,"column_start":5,"column_end":65}},{"value":"/ assert_eq!(future_pending.now_or_never(), None);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34730,"byte_end":34782,"line_start":582,"line_end":582,"column_start":5,"column_end":57}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34787,"byte_end":34794,"line_start":583,"line_end":583,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34799,"byte_end":34802,"line_start":584,"line_end":584,"column_start":5,"column_end":8}},{"value":"/ In cases where it is absolutely known that a future should always","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34807,"byte_end":34876,"line_start":585,"line_end":585,"column_start":5,"column_end":74}},{"value":"/ resolve immediately and never return `Poll::Pending`, this method can","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34881,"byte_end":34954,"line_start":586,"line_end":586,"column_start":5,"column_end":78}},{"value":"/ be combined with `expect()`:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34959,"byte_end":34991,"line_start":587,"line_end":587,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":34996,"byte_end":34999,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":35004,"byte_end":35011,"line_start":589,"line_end":589,"column_start":5,"column_end":12}},{"value":"/ # use futures::{prelude::*, future::ready};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":35016,"byte_end":35063,"line_start":590,"line_end":590,"column_start":5,"column_end":52}},{"value":"/ let future_ready = ready(\"foobar\");","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":35068,"byte_end":35107,"line_start":591,"line_end":591,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":35112,"byte_end":35115,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(future_ready.now_or_never().expect(\"Future not ready\"), \"foobar\");","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":35120,"byte_end":35201,"line_start":593,"line_end":593,"column_start":5,"column_end":86}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":35206,"byte_end":35213,"line_start":594,"line_end":594,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":3197},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\into_future.rs","byte_start":66193,"byte_end":66203,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"IntoFuture","qualname":"::future::try_future::into_future::IntoFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`into_future`](super::TryFutureExt::into_future) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\into_future.rs","byte_start":66114,"byte_end":66181,"line_start":9,"line_end":9,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\into_future.rs","byte_start":66082,"byte_end":66096,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3218},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\into_future.rs","byte_start":66193,"byte_end":66203,"line_start":10,"line_end":10,"column_start":12,"column_end":22},"name":"__IntoFuture","qualname":"::future::try_future::into_future::_::__IntoFuture","value":"__IntoFuture {  }","parent":null,"children":[{"krate":0,"index":3221},{"krate":0,"index":3222}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3244},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":67111,"byte_end":67116,"line_start":12,"line_end":12,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten::TryFlatten::First","value":"TryFlatten::First(Fut1)","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3246},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":67135,"byte_end":67141,"line_start":13,"line_end":13,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten::TryFlatten::Second","value":"TryFlatten::Second(Fut2)","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3248},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":67160,"byte_end":67165,"line_start":14,"line_end":14,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten::TryFlatten::Empty","value":"TryFlatten::Empty","parent":{"krate":0,"index":3241},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3241},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":67082,"byte_end":67092,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"TryFlatten","qualname":"::future::try_future::try_flatten::TryFlatten","value":"pub enum TryFlatten<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3244},{"krate":0,"index":3246},{"krate":0,"index":3248}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = TryFlattenProj))","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":67015,"byte_end":67055,"line_start":9,"line_end":9,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":67082,"byte_end":67092,"line_start":11,"line_end":11,"column_start":10,"column_end":20},"name":"__TryFlatten","qualname":"::future::try_future::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3290}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72258,"byte_end":72263,"line_start":9,"line_end":9,"column_start":5,"column_end":10},"name":"First","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::First","value":"TryFlattenErr::First(Fut1)","parent":{"krate":0,"index":3312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72282,"byte_end":72288,"line_start":10,"line_end":10,"column_start":5,"column_end":11},"name":"Second","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Second","value":"TryFlattenErr::Second(Fut2)","parent":{"krate":0,"index":3312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3319},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72307,"byte_end":72312,"line_start":11,"line_end":11,"column_start":5,"column_end":10},"name":"Empty","qualname":"::future::try_future::try_flatten_err::TryFlattenErr::Empty","value":"TryFlattenErr::Empty","parent":{"krate":0,"index":3312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3312},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72226,"byte_end":72239,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"TryFlattenErr","qualname":"::future::try_future::try_flatten_err::TryFlattenErr","value":"pub enum TryFlattenErr<Fut1, Fut2> {\n    First(\n          #[pin]\n          Fut1),\n    Second(\n           #[pin]\n           Fut2),\n    Empty,\n}","parent":null,"children":[{"krate":0,"index":3315},{"krate":0,"index":3317},{"krate":0,"index":3319}],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"pin(__private(project = TryFlattenErrProj))","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72156,"byte_end":72199,"line_start":6,"line_end":6,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":3355},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72226,"byte_end":72239,"line_start":8,"line_end":8,"column_start":10,"column_end":23},"name":"__TryFlattenErr","qualname":"::future::try_future::try_flatten_err::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3359},{"krate":0,"index":3360},{"krate":0,"index":3361}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3386},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"TryFlatten","qualname":"::future::try_future::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3389}],"decl_id":null,"docs":" Future for the [`try_flatten`](TryFutureExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3408},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__TryFlatten","qualname":"::future::try_future::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":3412},{"krate":0,"index":3413}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3454},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"TryFlattenErr","qualname":"::future::try_future::TryFlattenErr","value":"TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3457}],"decl_id":null,"docs":" Future for the [`try_flatten_err`](TryFutureExt::try_flatten_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3476},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__TryFlattenErr","qualname":"::future::try_future::_::__TryFlattenErr","value":"__TryFlattenErr {  }","parent":null,"children":[{"krate":0,"index":3480},{"krate":0,"index":3481}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3521},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"TryFlattenStream","qualname":"::future::try_future::TryFlattenStream","value":"TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":3523}],"decl_id":null,"docs":" Future for the [`try_flatten_stream`](TryFutureExt::try_flatten_stream) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3539},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__TryFlattenStream","qualname":"::future::try_future::_::__TryFlattenStream","value":"__TryFlattenStream {  }","parent":null,"children":[{"krate":0,"index":3542},{"krate":0,"index":3543}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3577},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"AndThen","qualname":"::future::try_future::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":3581}],"decl_id":null,"docs":" Future for the [`and_then`](TryFutureExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3603},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__AndThen","qualname":"::future::try_future::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":3608},{"krate":0,"index":3609}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3660},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"OrElse","qualname":"::future::try_future::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":3664}],"decl_id":null,"docs":" Future for the [`or_else`](TryFutureExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3686},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__OrElse","qualname":"::future::try_future::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":3691},{"krate":0,"index":3692}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3742},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::future::try_future::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":3745}],"decl_id":null,"docs":" Future for the [`err_into`](TryFutureExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3764},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::future::try_future::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":3768},{"krate":0,"index":3769}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3810},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"OkInto","qualname":"::future::try_future::OkInto","value":"OkInto {  }","parent":null,"children":[{"krate":0,"index":3813}],"decl_id":null,"docs":" Future for the [`ok_into`](TryFutureExt::ok_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3832},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__OkInto","qualname":"::future::try_future::_::__OkInto","value":"__OkInto {  }","parent":null,"children":[{"krate":0,"index":3836},{"krate":0,"index":3837}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3878},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::future::try_future::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":3881}],"decl_id":null,"docs":" Future for the [`inspect_ok`](super::TryFutureExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::future::try_future::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":3904},{"krate":0,"index":3905}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3946},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::future::try_future::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":3949}],"decl_id":null,"docs":" Future for the [`inspect_err`](super::TryFutureExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":3968},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::future::try_future::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":3972},{"krate":0,"index":3973}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4014},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::future::try_future::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":4017}],"decl_id":null,"docs":" Future for the [`map_ok`](TryFutureExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4036},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::future::try_future::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":4040},{"krate":0,"index":4041}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4082},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::future::try_future::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":4085}],"decl_id":null,"docs":" Future for the [`map_err`](TryFutureExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4104},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::future::try_future::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":4108},{"krate":0,"index":4109}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4151},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"MapOkOrElse","qualname":"::future::try_future::MapOkOrElse","value":"MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":4155}],"decl_id":null,"docs":" Future for the [`map_ok_or_else`](TryFutureExt::map_ok_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4177},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__MapOkOrElse","qualname":"::future::try_future::_::__MapOkOrElse","value":"__MapOkOrElse {  }","parent":null,"children":[{"krate":0,"index":4182},{"krate":0,"index":4183}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4233},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"UnwrapOrElse","qualname":"::future::try_future::UnwrapOrElse","value":"UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4236}],"decl_id":null,"docs":" Future for the [`unwrap_or_else`](TryFutureExt::unwrap_or_else) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":4255},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__UnwrapOrElse","qualname":"::future::try_future::_::__UnwrapOrElse","value":"__UnwrapOrElse {  }","parent":null,"children":[{"krate":0,"index":4259},{"krate":0,"index":4260}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":49027,"byte_end":49039,"line_start":137,"line_end":137,"column_start":11,"column_end":23},"name":"TryFutureExt","qualname":"::future::try_future::TryFutureExt","value":"TryFutureExt: TryFuture","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":270},{"krate":0,"index":273},{"krate":0,"index":275},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":287},{"krate":0,"index":288},{"krate":0,"index":289},{"krate":0,"index":291},{"krate":0,"index":292}],"decl_id":null,"docs":" Adapters specific to [`Result`]-returning futures\n","sig":null,"attributes":[{"value":"/ Adapters specific to [`Result`]-returning futures","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":48963,"byte_end":49016,"line_start":136,"line_end":136,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51749,"byte_end":51755,"line_start":217,"line_end":217,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::future::try_future::TryFutureExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where F: FnOnce(Self::Ok) -> T,\nSelf: Sized","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":50377,"byte_end":50435,"line_start":179,"line_end":179,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":50440,"byte_end":50443,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Ok`](TryFuture::Ok) type of the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":50448,"byte_end":50523,"line_start":181,"line_end":181,"column_start":5,"column_end":80}},{"value":"/ future into a different type. It is similar to the [`Result::map`]","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":50528,"byte_end":50598,"line_start":182,"line_end":182,"column_start":5,"column_end":75}},{"value":"/ method. You can use this method to chain along a computation once the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":50603,"byte_end":50676,"line_start":183,"line_end":183,"column_start":5,"column_end":78}},{"value":"/ future has been resolved.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":50681,"byte_end":50710,"line_start":184,"line_end":184,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":50715,"byte_end":50718,"line_start":185,"line_end":185,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":50723,"byte_end":50798,"line_start":186,"line_end":186,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":50803,"byte_end":50878,"line_start":187,"line_end":187,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":50883,"byte_end":50930,"line_start":188,"line_end":188,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":50935,"byte_end":50938,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":50943,"byte_end":51018,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51023,"byte_end":51049,"line_start":191,"line_end":191,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51054,"byte_end":51057,"line_start":192,"line_end":192,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51062,"byte_end":51076,"line_start":193,"line_end":193,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51081,"byte_end":51084,"line_start":194,"line_end":194,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51089,"byte_end":51096,"line_start":195,"line_end":195,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51101,"byte_end":51139,"line_start":196,"line_end":196,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51144,"byte_end":51147,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51152,"byte_end":51193,"line_start":198,"line_end":198,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51198,"byte_end":51243,"line_start":199,"line_end":199,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51248,"byte_end":51290,"line_start":200,"line_end":200,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51295,"byte_end":51331,"line_start":201,"line_end":201,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51336,"byte_end":51345,"line_start":202,"line_end":202,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51350,"byte_end":51357,"line_start":203,"line_end":203,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51362,"byte_end":51365,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_ok`](TryFutureExt::map_ok) on an errored future has no","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51370,"byte_end":51442,"line_start":205,"line_end":205,"column_start":5,"column_end":77}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51447,"byte_end":51458,"line_start":206,"line_end":206,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51463,"byte_end":51466,"line_start":207,"line_end":207,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51471,"byte_end":51478,"line_start":208,"line_end":208,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51483,"byte_end":51521,"line_start":209,"line_end":209,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51526,"byte_end":51529,"line_start":210,"line_end":210,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51534,"byte_end":51575,"line_start":211,"line_end":211,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51580,"byte_end":51626,"line_start":212,"line_end":212,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok(|x| x + 3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51631,"byte_end":51673,"line_start":213,"line_end":213,"column_start":5,"column_end":47}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51678,"byte_end":51715,"line_start":214,"line_end":214,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51720,"byte_end":51729,"line_start":215,"line_end":215,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51734,"byte_end":51741,"line_start":216,"line_end":216,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":266},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53314,"byte_end":53328,"line_start":257,"line_end":257,"column_start":8,"column_end":22},"name":"map_ok_or_else","qualname":"::future::try_future::TryFutureExt::map_ok_or_else","value":"pub fn map_ok_or_else<T, E, F>(Self, E, F) -> MapOkOrElse<Self, F, E> where\nF: FnOnce(Self::Ok) -> T, E: FnOnce(Self::Error) -> T, Self: Sized","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Maps this future's success value to a different value, and permits for error handling resulting in the same type.","sig":null,"attributes":[{"value":"/ Maps this future's success value to a different value, and permits for error handling resulting in the same type.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":51946,"byte_end":52063,"line_start":225,"line_end":225,"column_start":5,"column_end":122}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52068,"byte_end":52071,"line_start":226,"line_end":226,"column_start":5,"column_end":8}},{"value":"/ This method can be used to coalesce your [`Ok`](TryFuture::Ok) type and [`Error`](TryFuture::Error) into another type,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52076,"byte_end":52198,"line_start":227,"line_end":227,"column_start":5,"column_end":127}},{"value":"/ where that type is the same for both outcomes.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52203,"byte_end":52253,"line_start":228,"line_end":228,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52258,"byte_end":52261,"line_start":229,"line_end":229,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52266,"byte_end":52341,"line_start":230,"line_end":230,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If it resolves to an [`Err`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52346,"byte_end":52421,"line_start":231,"line_end":231,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52426,"byte_end":52473,"line_start":232,"line_end":232,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52478,"byte_end":52481,"line_start":233,"line_end":233,"column_start":5,"column_end":8}},{"value":"/ The provided closure `e` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52486,"byte_end":52561,"line_start":234,"line_end":234,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52566,"byte_end":52641,"line_start":235,"line_end":235,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52646,"byte_end":52693,"line_start":236,"line_end":236,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52698,"byte_end":52701,"line_start":237,"line_end":237,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52706,"byte_end":52781,"line_start":238,"line_end":238,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52786,"byte_end":52812,"line_start":239,"line_end":239,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52817,"byte_end":52820,"line_start":240,"line_end":240,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52825,"byte_end":52839,"line_start":241,"line_end":241,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52844,"byte_end":52847,"line_start":242,"line_end":242,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52852,"byte_end":52859,"line_start":243,"line_end":243,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52864,"byte_end":52902,"line_start":244,"line_end":244,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52907,"byte_end":52910,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52915,"byte_end":52956,"line_start":246,"line_end":246,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":52961,"byte_end":53006,"line_start":247,"line_end":247,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53011,"byte_end":53072,"line_start":248,"line_end":248,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 8);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53077,"byte_end":53109,"line_start":249,"line_end":249,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53114,"byte_end":53117,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<i32, i32>(5) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53122,"byte_end":53168,"line_start":251,"line_end":251,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_ok_or_else(|x| x * 2, |x| x + 3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53173,"byte_end":53234,"line_start":252,"line_end":252,"column_start":5,"column_end":66}},{"value":"/ assert_eq!(future.await, 10);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53239,"byte_end":53272,"line_start":253,"line_end":253,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53277,"byte_end":53286,"line_start":254,"line_end":254,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53291,"byte_end":53298,"line_start":255,"line_end":255,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53303,"byte_end":53306,"line_start":256,"line_end":256,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":270},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55011,"byte_end":55018,"line_start":305,"line_end":305,"column_start":8,"column_end":15},"name":"map_err","qualname":"::future::try_future::TryFutureExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where F: FnOnce(Self::Error)\n-> E, Self: Sized","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Maps this future's error value to a different value.","sig":null,"attributes":[{"value":"/ Maps this future's error value to a different value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53562,"byte_end":53618,"line_start":266,"line_end":266,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53623,"byte_end":53626,"line_start":267,"line_end":267,"column_start":5,"column_end":8}},{"value":"/ This method can be used to change the [`Error`](TryFuture::Error) type","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53631,"byte_end":53705,"line_start":268,"line_end":268,"column_start":5,"column_end":79}},{"value":"/ of the future into a different type. It is similar to the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53710,"byte_end":53771,"line_start":269,"line_end":269,"column_start":5,"column_end":66}},{"value":"/ [`Result::map_err`] method. You can use this method for example to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53776,"byte_end":53846,"line_start":270,"line_end":270,"column_start":5,"column_end":75}},{"value":"/ ensure that futures have the same [`Error`](TryFuture::Error) type when","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53851,"byte_end":53926,"line_start":271,"line_end":271,"column_start":5,"column_end":80}},{"value":"/ using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53931,"byte_end":53966,"line_start":272,"line_end":272,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53971,"byte_end":53974,"line_start":273,"line_end":273,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":53979,"byte_end":54054,"line_start":274,"line_end":274,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If it resolves to an [`Ok`], panics, or is dropped, then","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54059,"byte_end":54134,"line_start":275,"line_end":275,"column_start":5,"column_end":80}},{"value":"/ the provided closure will never be invoked.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54139,"byte_end":54186,"line_start":276,"line_end":276,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54191,"byte_end":54194,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54199,"byte_end":54274,"line_start":278,"line_end":278,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54279,"byte_end":54305,"line_start":279,"line_end":279,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54310,"byte_end":54313,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54318,"byte_end":54332,"line_start":281,"line_end":281,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54337,"byte_end":54340,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54345,"byte_end":54352,"line_start":283,"line_end":283,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54357,"byte_end":54395,"line_start":284,"line_end":284,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54400,"byte_end":54403,"line_start":285,"line_end":285,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54408,"byte_end":54449,"line_start":286,"line_end":286,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54454,"byte_end":54500,"line_start":287,"line_end":287,"column_start":5,"column_end":51}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54505,"byte_end":54548,"line_start":288,"line_end":288,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54553,"byte_end":54590,"line_start":289,"line_end":289,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54595,"byte_end":54604,"line_start":290,"line_end":290,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54609,"byte_end":54616,"line_start":291,"line_end":291,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54621,"byte_end":54624,"line_start":292,"line_end":292,"column_start":5,"column_end":8}},{"value":"/ Calling [`map_err`](TryFutureExt::map_err) on a successful future has","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54629,"byte_end":54702,"line_start":293,"line_end":293,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54707,"byte_end":54721,"line_start":294,"line_end":294,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54726,"byte_end":54729,"line_start":295,"line_end":295,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54734,"byte_end":54741,"line_start":296,"line_end":296,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54746,"byte_end":54784,"line_start":297,"line_end":297,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54789,"byte_end":54792,"line_start":298,"line_end":298,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54797,"byte_end":54838,"line_start":299,"line_end":299,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54843,"byte_end":54888,"line_start":300,"line_end":300,"column_start":5,"column_end":50}},{"value":"/ let future = future.map_err(|x| x + 3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54893,"byte_end":54936,"line_start":301,"line_end":301,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54941,"byte_end":54977,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54982,"byte_end":54991,"line_start":303,"line_end":303,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":54996,"byte_end":55003,"line_start":304,"line_end":304,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":273},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56108,"byte_end":56116,"line_start":335,"line_end":335,"column_start":8,"column_end":16},"name":"err_into","qualname":"::future::try_future::TryFutureExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Maps this future's [`Error`](TryFuture::Error) to a new error type\n using the [`Into`](std::convert::Into) trait.","sig":null,"attributes":[{"value":"/ Maps this future's [`Error`](TryFuture::Error) to a new error type","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55211,"byte_end":55281,"line_start":313,"line_end":313,"column_start":5,"column_end":75}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55286,"byte_end":55335,"line_start":314,"line_end":314,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55340,"byte_end":55343,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ This method does for futures what the `?`-operator does for","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55348,"byte_end":55411,"line_start":316,"line_end":316,"column_start":5,"column_end":68}},{"value":"/ [`Result`]: It lets the compiler infer the type of the resulting","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55416,"byte_end":55484,"line_start":317,"line_end":317,"column_start":5,"column_end":73}},{"value":"/ error. Just as [`map_err`](TryFutureExt::map_err), this is useful for","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55489,"byte_end":55562,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ example to ensure that futures have the same [`Error`](TryFuture::Error)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55567,"byte_end":55643,"line_start":319,"line_end":319,"column_start":5,"column_end":81}},{"value":"/ type when using [`select!`] or [`join!`].","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55648,"byte_end":55693,"line_start":320,"line_end":320,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55698,"byte_end":55701,"line_start":321,"line_end":321,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55706,"byte_end":55781,"line_start":322,"line_end":322,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55786,"byte_end":55812,"line_start":323,"line_end":323,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55817,"byte_end":55820,"line_start":324,"line_end":324,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55825,"byte_end":55839,"line_start":325,"line_end":325,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55844,"byte_end":55847,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55852,"byte_end":55859,"line_start":327,"line_end":327,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55864,"byte_end":55902,"line_start":328,"line_end":328,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55907,"byte_end":55910,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55915,"byte_end":55956,"line_start":330,"line_end":330,"column_start":5,"column_end":46}},{"value":"/ let future_err_u8 = async { Err::<(), u8>(1) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":55961,"byte_end":56012,"line_start":331,"line_end":331,"column_start":5,"column_end":56}},{"value":"/ let future_err_i32 = future_err_u8.err_into::<i32>();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56017,"byte_end":56074,"line_start":332,"line_end":332,"column_start":5,"column_end":62}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56079,"byte_end":56088,"line_start":333,"line_end":333,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56093,"byte_end":56100,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":275},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56412,"byte_end":56419,"line_start":345,"line_end":345,"column_start":8,"column_end":15},"name":"ok_into","qualname":"::future::try_future::TryFutureExt::ok_into","value":"pub fn ok_into<U>(Self) -> OkInto<Self, U> where Self: Sized,\nSelf::Ok: Into<U>","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Maps this future's [`Ok`](TryFuture::Ok) to a new type\n using the [`Into`](std::convert::Into) trait.\n","sig":null,"attributes":[{"value":"/ Maps this future's [`Ok`](TryFuture::Ok) to a new type","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56292,"byte_end":56350,"line_start":343,"line_end":343,"column_start":5,"column_end":63}},{"value":"/ using the [`Into`](std::convert::Into) trait.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56355,"byte_end":56404,"line_start":344,"line_end":344,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":277},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57974,"byte_end":57982,"line_start":389,"line_end":389,"column_start":8,"column_end":16},"name":"and_then","qualname":"::future::try_future::TryFutureExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnOnce(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Executes another future after this one resolves successfully. The\n success value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future after this one resolves successfully. The","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56593,"byte_end":56662,"line_start":353,"line_end":353,"column_start":5,"column_end":74}},{"value":"/ success value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56667,"byte_end":56741,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56746,"byte_end":56749,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56754,"byte_end":56829,"line_start":356,"line_end":356,"column_start":5,"column_end":80}},{"value":"/ to an [`Ok`]. If this future resolves to an [`Err`], panics, or is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56834,"byte_end":56904,"line_start":357,"line_end":357,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56909,"byte_end":56974,"line_start":358,"line_end":358,"column_start":5,"column_end":70}},{"value":"/ [`Error`](TryFuture::Error) type of this future and the future","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":56979,"byte_end":57045,"line_start":359,"line_end":359,"column_start":5,"column_end":71}},{"value":"/ returned by `f` have to match.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57050,"byte_end":57084,"line_start":360,"line_end":360,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57089,"byte_end":57092,"line_start":361,"line_end":361,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57097,"byte_end":57172,"line_start":362,"line_end":362,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57177,"byte_end":57203,"line_start":363,"line_end":363,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57208,"byte_end":57211,"line_start":364,"line_end":364,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57216,"byte_end":57230,"line_start":365,"line_end":365,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57235,"byte_end":57238,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57243,"byte_end":57250,"line_start":367,"line_end":367,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57255,"byte_end":57293,"line_start":368,"line_end":368,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57298,"byte_end":57301,"line_start":369,"line_end":369,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57306,"byte_end":57347,"line_start":370,"line_end":370,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57352,"byte_end":57397,"line_start":371,"line_end":371,"column_start":5,"column_end":50}},{"value":"/ let future = future.and_then(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57402,"byte_end":57477,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Ok(4));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57482,"byte_end":57518,"line_start":373,"line_end":373,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57523,"byte_end":57532,"line_start":374,"line_end":374,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57537,"byte_end":57544,"line_start":375,"line_end":375,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57549,"byte_end":57552,"line_start":376,"line_end":376,"column_start":5,"column_end":8}},{"value":"/ Calling [`and_then`](TryFutureExt::and_then) on an errored future has no","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57557,"byte_end":57633,"line_start":377,"line_end":377,"column_start":5,"column_end":81}},{"value":"/ effect:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57638,"byte_end":57649,"line_start":378,"line_end":378,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57654,"byte_end":57657,"line_start":379,"line_end":379,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57662,"byte_end":57669,"line_start":380,"line_end":380,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57674,"byte_end":57712,"line_start":381,"line_end":381,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57717,"byte_end":57720,"line_start":382,"line_end":382,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57725,"byte_end":57766,"line_start":383,"line_end":383,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57771,"byte_end":57817,"line_start":384,"line_end":384,"column_start":5,"column_end":51}},{"value":"/ let future = future.and_then(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57822,"byte_end":57898,"line_start":385,"line_end":385,"column_start":5,"column_end":81}},{"value":"/ assert_eq!(future.await, Err(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57903,"byte_end":57940,"line_start":386,"line_end":386,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57945,"byte_end":57954,"line_start":387,"line_end":387,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":57959,"byte_end":57966,"line_start":388,"line_end":388,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59603,"byte_end":59610,"line_start":434,"line_end":434,"column_start":8,"column_end":15},"name":"or_else","qualname":"::future::try_future::TryFutureExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnOnce(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Executes another future if this one resolves to an error. The\n error value is passed to a closure to create this subsequent future.","sig":null,"attributes":[{"value":"/ Executes another future if this one resolves to an error. The","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58236,"byte_end":58301,"line_start":398,"line_end":398,"column_start":5,"column_end":70}},{"value":"/ error value is passed to a closure to create this subsequent future.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58306,"byte_end":58378,"line_start":399,"line_end":399,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58383,"byte_end":58386,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will only be called if this future is resolved","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58391,"byte_end":58466,"line_start":401,"line_end":401,"column_start":5,"column_end":80}},{"value":"/ to an [`Err`]. If this future resolves to an [`Ok`], panics, or is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58471,"byte_end":58541,"line_start":402,"line_end":402,"column_start":5,"column_end":75}},{"value":"/ dropped, then the provided closure will never be invoked. The","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58546,"byte_end":58611,"line_start":403,"line_end":403,"column_start":5,"column_end":70}},{"value":"/ [`Ok`](TryFuture::Ok) type of this future and the future returned by `f`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58616,"byte_end":58692,"line_start":404,"line_end":404,"column_start":5,"column_end":81}},{"value":"/ have to match.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58697,"byte_end":58715,"line_start":405,"line_end":405,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58720,"byte_end":58723,"line_start":406,"line_end":406,"column_start":5,"column_end":8}},{"value":"/ Note that this method consumes the future it is called on and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58728,"byte_end":58803,"line_start":407,"line_end":407,"column_start":5,"column_end":80}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58808,"byte_end":58834,"line_start":408,"line_end":408,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58839,"byte_end":58842,"line_start":409,"line_end":409,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58847,"byte_end":58861,"line_start":410,"line_end":410,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58866,"byte_end":58869,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58874,"byte_end":58881,"line_start":412,"line_end":412,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58886,"byte_end":58924,"line_start":413,"line_end":413,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58929,"byte_end":58932,"line_start":414,"line_end":414,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58937,"byte_end":58978,"line_start":415,"line_end":415,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":58983,"byte_end":59029,"line_start":416,"line_end":416,"column_start":5,"column_end":51}},{"value":"/ let future = future.or_else(|x| async move { Err::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59034,"byte_end":59109,"line_start":417,"line_end":417,"column_start":5,"column_end":80}},{"value":"/ assert_eq!(future.await, Err(4));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59114,"byte_end":59151,"line_start":418,"line_end":418,"column_start":5,"column_end":42}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59156,"byte_end":59165,"line_start":419,"line_end":419,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59170,"byte_end":59177,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59182,"byte_end":59185,"line_start":421,"line_end":421,"column_start":5,"column_end":8}},{"value":"/ Calling [`or_else`](TryFutureExt::or_else) on a successful future has","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59190,"byte_end":59263,"line_start":422,"line_end":422,"column_start":5,"column_end":78}},{"value":"/ no effect:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59268,"byte_end":59282,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59287,"byte_end":59290,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59295,"byte_end":59302,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59307,"byte_end":59345,"line_start":426,"line_end":426,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59350,"byte_end":59353,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59358,"byte_end":59399,"line_start":428,"line_end":428,"column_start":5,"column_end":46}},{"value":"/ let future = async { Ok::<i32, i32>(1) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59404,"byte_end":59449,"line_start":429,"line_end":429,"column_start":5,"column_end":50}},{"value":"/ let future = future.or_else(|x| async move { Ok::<i32, i32>(x + 3) });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59454,"byte_end":59528,"line_start":430,"line_end":430,"column_start":5,"column_end":79}},{"value":"/ assert_eq!(future.await, Ok(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59533,"byte_end":59569,"line_start":431,"line_end":431,"column_start":5,"column_end":41}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59574,"byte_end":59583,"line_start":432,"line_end":432,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59588,"byte_end":59595,"line_start":433,"line_end":433,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60586,"byte_end":60596,"line_start":461,"line_end":461,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::future::try_future::TryFutureExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnOnce(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Do something with the success value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of a future before passing it on.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59859,"byte_end":59932,"line_start":443,"line_end":443,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59937,"byte_end":59940,"line_start":444,"line_end":444,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":59945,"byte_end":60020,"line_start":445,"line_end":445,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60025,"byte_end":60098,"line_start":446,"line_end":446,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60103,"byte_end":60172,"line_start":447,"line_end":447,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_ok`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60177,"byte_end":60230,"line_start":448,"line_end":448,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60235,"byte_end":60238,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60243,"byte_end":60257,"line_start":450,"line_end":450,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60262,"byte_end":60265,"line_start":451,"line_end":451,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60270,"byte_end":60277,"line_start":452,"line_end":452,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60282,"byte_end":60323,"line_start":453,"line_end":453,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60328,"byte_end":60366,"line_start":454,"line_end":454,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60371,"byte_end":60374,"line_start":455,"line_end":455,"column_start":5,"column_end":8}},{"value":"/ let future = async { Ok::<_, ()>(1) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60379,"byte_end":60421,"line_start":456,"line_end":456,"column_start":5,"column_end":47}},{"value":"/ let new_future = future.inspect_ok(|&x| println!(\"about to resolve: {}\", x));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60426,"byte_end":60507,"line_start":457,"line_end":457,"column_start":5,"column_end":86}},{"value":"/ assert_eq!(new_future.await, Ok(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60512,"byte_end":60552,"line_start":458,"line_end":458,"column_start":5,"column_end":45}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60557,"byte_end":60566,"line_start":459,"line_end":459,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60571,"byte_end":60578,"line_start":460,"line_end":460,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61522,"byte_end":61533,"line_start":487,"line_end":487,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::future::try_future::TryFutureExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnOnce(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Do something with the error value of a future before passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of a future before passing it on.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60795,"byte_end":60866,"line_start":469,"line_end":469,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60871,"byte_end":60874,"line_start":470,"line_end":470,"column_start":5,"column_end":8}},{"value":"/ When using futures, you'll often chain several of them together.  While","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60879,"byte_end":60954,"line_start":471,"line_end":471,"column_start":5,"column_end":80}},{"value":"/ working on such code, you might want to check out what's happening at","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":60959,"byte_end":61032,"line_start":472,"line_end":472,"column_start":5,"column_end":78}},{"value":"/ various parts in the pipeline, without consuming the intermediate","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61037,"byte_end":61106,"line_start":473,"line_end":473,"column_start":5,"column_end":74}},{"value":"/ value. To do that, insert a call to `inspect_err`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61111,"byte_end":61165,"line_start":474,"line_end":474,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61170,"byte_end":61173,"line_start":475,"line_end":475,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61178,"byte_end":61192,"line_start":476,"line_end":476,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61197,"byte_end":61200,"line_start":477,"line_end":477,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61205,"byte_end":61212,"line_start":478,"line_end":478,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61217,"byte_end":61258,"line_start":479,"line_end":479,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61263,"byte_end":61301,"line_start":480,"line_end":480,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61306,"byte_end":61309,"line_start":481,"line_end":481,"column_start":5,"column_end":8}},{"value":"/ let future = async { Err::<(), _>(1) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61314,"byte_end":61357,"line_start":482,"line_end":482,"column_start":5,"column_end":48}},{"value":"/ let new_future = future.inspect_err(|&x| println!(\"about to error: {}\", x));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61362,"byte_end":61442,"line_start":483,"line_end":483,"column_start":5,"column_end":85}},{"value":"/ assert_eq!(new_future.await, Err(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61447,"byte_end":61488,"line_start":484,"line_end":484,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61493,"byte_end":61502,"line_start":485,"line_end":485,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61507,"byte_end":61514,"line_start":486,"line_end":486,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61918,"byte_end":61929,"line_start":499,"line_end":499,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::future::try_future::TryFutureExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self, Self::Ok> where\nSelf::Ok: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is another future.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61737,"byte_end":61812,"line_start":495,"line_end":495,"column_start":5,"column_end":80}},{"value":"/ future is another future.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61817,"byte_end":61846,"line_start":496,"line_end":496,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61851,"byte_end":61854,"line_start":497,"line_end":497,"column_start":5,"column_end":8}},{"value":"/ This is equivalent to `future.and_then(|x| x)`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":61859,"byte_end":61910,"line_start":498,"line_end":498,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63038,"byte_end":63056,"line_start":532,"line_end":532,"column_start":8,"column_end":26},"name":"try_flatten_stream","qualname":"::future::try_future::TryFutureExt::try_flatten_stream","value":"pub fn try_flatten_stream(Self) -> TryFlattenStream<Self> where\nSelf::Ok: TryStream<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Flatten the execution of this future when the successful result of this\n future is a stream.","sig":null,"attributes":[{"value":"/ Flatten the execution of this future when the successful result of this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62094,"byte_end":62169,"line_start":507,"line_end":507,"column_start":5,"column_end":80}},{"value":"/ future is a stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62174,"byte_end":62197,"line_start":508,"line_end":508,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62202,"byte_end":62205,"line_start":509,"line_end":509,"column_start":5,"column_end":8}},{"value":"/ This can be useful when stream initialization is deferred, and it is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62210,"byte_end":62282,"line_start":510,"line_end":510,"column_start":5,"column_end":77}},{"value":"/ convenient to work with that stream as if stream was available at the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62287,"byte_end":62360,"line_start":511,"line_end":511,"column_start":5,"column_end":78}},{"value":"/ call site.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62365,"byte_end":62379,"line_start":512,"line_end":512,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62384,"byte_end":62387,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes this future and returns a wrapped","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62392,"byte_end":62462,"line_start":514,"line_end":514,"column_start":5,"column_end":75}},{"value":"/ version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62467,"byte_end":62485,"line_start":515,"line_end":515,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62490,"byte_end":62493,"line_start":516,"line_end":516,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62498,"byte_end":62512,"line_start":517,"line_end":517,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62517,"byte_end":62520,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62525,"byte_end":62532,"line_start":519,"line_end":519,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62537,"byte_end":62578,"line_start":520,"line_end":520,"column_start":5,"column_end":46}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62583,"byte_end":62621,"line_start":521,"line_end":521,"column_start":5,"column_end":43}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62626,"byte_end":62672,"line_start":522,"line_end":522,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62677,"byte_end":62680,"line_start":523,"line_end":523,"column_start":5,"column_end":8}},{"value":"/ let stream_items = vec![17, 18, 19].into_iter().map(Ok);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62685,"byte_end":62745,"line_start":524,"line_end":524,"column_start":5,"column_end":65}},{"value":"/ let future_of_a_stream = async { Ok::<_, ()>(stream::iter(stream_items)) };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62750,"byte_end":62829,"line_start":525,"line_end":525,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62834,"byte_end":62837,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ let stream = future_of_a_stream.try_flatten_stream();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62842,"byte_end":62899,"line_start":527,"line_end":527,"column_start":5,"column_end":62}},{"value":"/ let list = stream.try_collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62904,"byte_end":62956,"line_start":528,"line_end":528,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(list, Ok(vec![17, 18, 19]));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":62961,"byte_end":63004,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63009,"byte_end":63018,"line_start":530,"line_end":530,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63023,"byte_end":63030,"line_start":531,"line_end":531,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64146,"byte_end":64160,"line_start":564,"line_end":564,"column_start":8,"column_end":22},"name":"unwrap_or_else","qualname":"::future::try_future::TryFutureExt::unwrap_or_else","value":"pub fn unwrap_or_else<F>(Self, F) -> UnwrapOrElse<Self, F> where Self: Sized,\nF: FnOnce(Self::Error) -> Self::Ok","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Unwraps this future's ouput, producing a future with this future's\n [`Ok`](TryFuture::Ok) type as its\n [`Output`](std::future::Future::Output) type.","sig":null,"attributes":[{"value":"/ Unwraps this future's ouput, producing a future with this future's","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63316,"byte_end":63386,"line_start":542,"line_end":542,"column_start":5,"column_end":75}},{"value":"/ [`Ok`](TryFuture::Ok) type as its","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63391,"byte_end":63428,"line_start":543,"line_end":543,"column_start":5,"column_end":42}},{"value":"/ [`Output`](std::future::Future::Output) type.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63433,"byte_end":63482,"line_start":544,"line_end":544,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63487,"byte_end":63490,"line_start":545,"line_end":545,"column_start":5,"column_end":8}},{"value":"/ If this future is resolved successfully, the returned future will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63495,"byte_end":63564,"line_start":546,"line_end":546,"column_start":5,"column_end":74}},{"value":"/ contain the original future's success value as output. Otherwise, the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63569,"byte_end":63642,"line_start":547,"line_end":547,"column_start":5,"column_end":78}},{"value":"/ closure `f` is called with the error value to produce an alternate","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63647,"byte_end":63717,"line_start":548,"line_end":548,"column_start":5,"column_end":75}},{"value":"/ success value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63722,"byte_end":63740,"line_start":549,"line_end":549,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63745,"byte_end":63748,"line_start":550,"line_end":550,"column_start":5,"column_end":8}},{"value":"/ This method is similar to the [`Result::unwrap_or_else`] method.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63753,"byte_end":63821,"line_start":551,"line_end":551,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63826,"byte_end":63829,"line_start":552,"line_end":552,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63834,"byte_end":63848,"line_start":553,"line_end":553,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63853,"byte_end":63856,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63861,"byte_end":63868,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/ use futures::future::TryFutureExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63873,"byte_end":63911,"line_start":556,"line_end":556,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63916,"byte_end":63919,"line_start":557,"line_end":557,"column_start":5,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63924,"byte_end":63965,"line_start":558,"line_end":558,"column_start":5,"column_end":46}},{"value":"/ let future = async { Err::<(), &str>(\"Boom!\") };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":63970,"byte_end":64022,"line_start":559,"line_end":559,"column_start":5,"column_end":57}},{"value":"/ let future = future.unwrap_or_else(|_| ());","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64027,"byte_end":64074,"line_start":560,"line_end":560,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(future.await, ());","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64079,"byte_end":64112,"line_start":561,"line_end":561,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64117,"byte_end":64126,"line_start":562,"line_end":562,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64131,"byte_end":64138,"line_start":563,"line_end":563,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":291},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65414,"byte_end":65425,"line_start":604,"line_end":604,"column_start":8,"column_end":19},"name":"into_future","qualname":"::future::try_future::TryFutureExt::into_future","value":"pub fn into_future(Self) -> IntoFuture<Self> where Self: Sized","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" Wraps a [`TryFuture`] into a type that implements\n [`Future`](std::future::Future).","sig":null,"attributes":[{"value":"/ Wraps a [`TryFuture`] into a type that implements","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64713,"byte_end":64766,"line_start":583,"line_end":583,"column_start":5,"column_end":58}},{"value":"/ [`Future`](std::future::Future).","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64771,"byte_end":64807,"line_start":584,"line_end":584,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64812,"byte_end":64815,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`TryFuture`]s currently do not implement the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64820,"byte_end":64869,"line_start":586,"line_end":586,"column_start":5,"column_end":54}},{"value":"/ [`Future`](std::future::Future) trait due to limitations of the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64874,"byte_end":64941,"line_start":587,"line_end":587,"column_start":5,"column_end":72}},{"value":"/ compiler.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64946,"byte_end":64959,"line_start":588,"line_end":588,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64964,"byte_end":64967,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64972,"byte_end":64986,"line_start":590,"line_end":590,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64991,"byte_end":64994,"line_start":591,"line_end":591,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":64999,"byte_end":65006,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/ use futures::future::{Future, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65011,"byte_end":65070,"line_start":593,"line_end":593,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65075,"byte_end":65078,"line_start":594,"line_end":594,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65083,"byte_end":65102,"line_start":595,"line_end":595,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65107,"byte_end":65125,"line_start":596,"line_end":596,"column_start":5,"column_end":23}},{"value":"/ fn make_try_future() -> impl TryFuture<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65130,"byte_end":65202,"line_start":597,"line_end":597,"column_start":5,"column_end":77}},{"value":"/ # async { Ok::<i32, ()>(1) }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65207,"byte_end":65239,"line_start":598,"line_end":598,"column_start":5,"column_end":37}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65244,"byte_end":65251,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ fn take_future(future: impl Future<Output = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65256,"byte_end":65332,"line_start":600,"line_end":600,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65337,"byte_end":65340,"line_start":601,"line_end":601,"column_start":5,"column_end":8}},{"value":"/ take_future(make_try_future().into_future());","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65345,"byte_end":65394,"line_start":602,"line_end":602,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65399,"byte_end":65406,"line_start":603,"line_end":603,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65684,"byte_end":65698,"line_start":613,"line_end":613,"column_start":8,"column_end":22},"name":"try_poll_unpin","qualname":"::future::try_future::TryFutureExt::try_poll_unpin","value":"pub fn try_poll_unpin(&mut Self, &mut Context)\n-> Poll<Result<Self::Ok, Self::Error>> where Self: Unpin","parent":{"krate":0,"index":262},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]\n future types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryFuture::try_poll`] on [`Unpin`]","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65581,"byte_end":65654,"line_start":611,"line_end":611,"column_start":5,"column_end":78}},{"value":"/ future types.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":65659,"byte_end":65676,"line_start":612,"line_end":612,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":4298},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74035,"byte_end":74039,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Lazy","qualname":"::future::lazy::Lazy","value":"Lazy {  }","parent":null,"children":[{"krate":0,"index":4300}],"decl_id":null,"docs":" Future for the [`lazy`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`lazy`] function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":73901,"byte_end":73938,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":73956,"byte_end":74023,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":318},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74580,"byte_end":74584,"line_start":34,"line_end":34,"column_start":8,"column_end":12},"name":"lazy","qualname":"::future::lazy::lazy","value":"pub fn lazy<F, R>(F) -> Lazy<F> where F: FnOnce(&mut Context) -> R","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future that allows delayed execution of a closure.","sig":null,"attributes":[{"value":"/ Creates a new future that allows delayed execution of a closure.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74143,"byte_end":74211,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74212,"byte_end":74215,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ The provided closure is only run once the future is polled.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74216,"byte_end":74279,"line_start":17,"line_end":17,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74280,"byte_end":74283,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74284,"byte_end":74298,"line_start":19,"line_end":19,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74299,"byte_end":74302,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74303,"byte_end":74310,"line_start":21,"line_end":21,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74311,"byte_end":74352,"line_start":22,"line_end":22,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74353,"byte_end":74377,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74378,"byte_end":74381,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ let a = future::lazy(|_| 1);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74382,"byte_end":74414,"line_start":25,"line_end":25,"column_start":1,"column_end":33}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74415,"byte_end":74442,"line_start":26,"line_end":26,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74443,"byte_end":74446,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ let b = future::lazy(|_| -> i32 {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74447,"byte_end":74484,"line_start":28,"line_end":28,"column_start":1,"column_end":38}},{"value":"/     panic!(\"oh no!\")","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74485,"byte_end":74509,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74510,"byte_end":74517,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ drop(b); // closure is never run","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74518,"byte_end":74554,"line_start":31,"line_end":31,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74555,"byte_end":74564,"line_start":32,"line_end":32,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74565,"byte_end":74572,"line_start":33,"line_end":33,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4304},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75350,"byte_end":75357,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::future::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":4306}],"decl_id":null,"docs":" Future for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`pending()`] function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75211,"byte_end":75253,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75271,"byte_end":75338,"line_start":8,"line_end":8,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":345},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75876,"byte_end":75883,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"pending","qualname":"::future::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future which never resolves, representing a computation that never\n finishes.","sig":null,"attributes":[{"value":"/ Creates a future which never resolves, representing a computation that never","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75498,"byte_end":75578,"line_start":19,"line_end":19,"column_start":1,"column_end":81}},{"value":"/ finishes.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75579,"byte_end":75592,"line_start":20,"line_end":20,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75593,"byte_end":75596,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ The returned future will forever return [`Poll::Pending`].","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75597,"byte_end":75659,"line_start":22,"line_end":22,"column_start":1,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75660,"byte_end":75663,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75664,"byte_end":75678,"line_start":24,"line_end":24,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75679,"byte_end":75682,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ ```ignore","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75683,"byte_end":75696,"line_start":26,"line_end":26,"column_start":1,"column_end":14}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75697,"byte_end":75738,"line_start":27,"line_end":27,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75739,"byte_end":75763,"line_start":28,"line_end":28,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75764,"byte_end":75767,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ let future = future::pending();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75768,"byte_end":75803,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"/ let () = future.await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75804,"byte_end":75830,"line_start":31,"line_end":31,"column_start":1,"column_end":27}},{"value":"/ unreachable!();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75831,"byte_end":75850,"line_start":32,"line_end":32,"column_start":1,"column_end":20}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75851,"byte_end":75860,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75861,"byte_end":75868,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4312},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76686,"byte_end":76692,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::maybe_done::MaybeDone::Future","value":"MaybeDone::Future(Fut)","parent":{"krate":0,"index":4310},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76651,"byte_end":76681,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4314},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76753,"byte_end":76757,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::maybe_done::MaybeDone::Done","value":"MaybeDone::Done(Fut::Output)","parent":{"krate":0,"index":4310},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76710,"byte_end":76748,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4317},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76919,"byte_end":76923,"line_start":20,"line_end":20,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::maybe_done::MaybeDone::Gone","value":"MaybeDone::Gone","parent":{"krate":0,"index":4310},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`MaybeDone`] has been\n taken using the [`take_output`](MaybeDone::take_output) method.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`MaybeDone`] has been","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76776,"byte_end":76842,"line_start":18,"line_end":18,"column_start":5,"column_end":71}},{"value":"/ taken using the [`take_output`](MaybeDone::take_output) method.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76847,"byte_end":76914,"line_start":19,"line_end":19,"column_start":5,"column_end":72}}]},{"kind":"Enum","id":{"krate":0,"index":4310},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76622,"byte_end":76631,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"MaybeDone","qualname":"::future::maybe_done::MaybeDone","value":"pub enum MaybeDone<Fut: Future> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Output),\n\n    /// The empty variant after the result of a [`MaybeDone`] has been\n    /// taken using the [`take_output`](MaybeDone::take_output) method.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":4312},{"krate":0,"index":4314},{"krate":0,"index":4317}],"decl_id":null,"docs":" A future that may have completed.","sig":null,"attributes":[{"value":"pin(__private(project = MaybeDoneProj, project_replace = MaybeDoneProjOwn))","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76520,"byte_end":76595,"line_start":11,"line_end":11,"column_start":1,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":4360},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76622,"byte_end":76631,"line_start":13,"line_end":13,"column_start":10,"column_end":19},"name":"__MaybeDone","qualname":"::future::maybe_done::_::__MaybeDone","value":"__MaybeDone {  }","parent":null,"children":[{"krate":0,"index":4363},{"krate":0,"index":4364}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":368},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77389,"byte_end":77399,"line_start":40,"line_end":40,"column_start":8,"column_end":18},"name":"maybe_done","qualname":"::future::maybe_done::maybe_done","value":"pub fn maybe_done<Fut: Future>(Fut) -> MaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `MaybeDone`","sig":null,"attributes":[{"value":"/ Wraps a future into a `MaybeDone`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76928,"byte_end":76965,"line_start":23,"line_end":23,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76966,"byte_end":76969,"line_start":24,"line_end":24,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76970,"byte_end":76984,"line_start":25,"line_end":25,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76985,"byte_end":76988,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76989,"byte_end":76996,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":76997,"byte_end":77038,"line_start":28,"line_end":28,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77039,"byte_end":77063,"line_start":29,"line_end":29,"column_start":1,"column_end":25}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77064,"byte_end":77089,"line_start":30,"line_end":30,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77090,"byte_end":77093,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let future = future::maybe_done(async { 5 });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77094,"byte_end":77143,"line_start":32,"line_end":32,"column_start":1,"column_end":50}},{"value":"/ pin_mut!(future);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77144,"byte_end":77165,"line_start":33,"line_end":33,"column_start":1,"column_end":22}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77166,"byte_end":77218,"line_start":34,"line_end":34,"column_start":1,"column_end":53}},{"value":"/ let () = future.as_mut().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77219,"byte_end":77254,"line_start":35,"line_end":35,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(future.as_mut().take_output(), Some(5));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77255,"byte_end":77310,"line_start":36,"line_end":36,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(future.as_mut().take_output(), None);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77311,"byte_end":77363,"line_start":37,"line_end":37,"column_start":1,"column_end":53}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77364,"byte_end":77373,"line_start":38,"line_end":38,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77374,"byte_end":77381,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":372},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77816,"byte_end":77826,"line_start":50,"line_end":50,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<MaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has been completed and [`take_output`](MaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77518,"byte_end":77603,"line_start":45,"line_end":45,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77608,"byte_end":77679,"line_start":46,"line_end":46,"column_start":5,"column_end":76}},{"value":"/ future has been completed and [`take_output`](MaybeDone::take_output)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77684,"byte_end":77757,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77762,"byte_end":77790,"line_start":48,"line_end":48,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77795,"byte_end":77804,"line_start":49,"line_end":49,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":78125,"byte_end":78136,"line_start":60,"line_end":60,"column_start":12,"column_end":23},"name":"take_output","qualname":"<MaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `MaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `MaybeDone` without driving it","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":78005,"byte_end":78071,"line_start":57,"line_end":57,"column_start":5,"column_end":71}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":78076,"byte_end":78099,"line_start":58,"line_end":58,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":78104,"byte_end":78113,"line_start":59,"line_end":59,"column_start":5,"column_end":14}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4383},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":79716,"byte_end":79722,"line_start":15,"line_end":15,"column_start":5,"column_end":11},"name":"Future","qualname":"::future::try_maybe_done::TryMaybeDone::Future","value":"TryMaybeDone::Future(Fut)","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":" A not-yet-completed future\n","sig":null,"attributes":[{"value":"/ A not-yet-completed future","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":79681,"byte_end":79711,"line_start":14,"line_end":14,"column_start":5,"column_end":35}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4385},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":79783,"byte_end":79787,"line_start":17,"line_end":17,"column_start":5,"column_end":9},"name":"Done","qualname":"::future::try_maybe_done::TryMaybeDone::Done","value":"TryMaybeDone::Done(Fut::Ok)","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":" The output of the completed future\n","sig":null,"attributes":[{"value":"/ The output of the completed future","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":79740,"byte_end":79778,"line_start":16,"line_end":16,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4388},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":79995,"byte_end":79999,"line_start":21,"line_end":21,"column_start":5,"column_end":9},"name":"Gone","qualname":"::future::try_maybe_done::TryMaybeDone::Gone","value":"TryMaybeDone::Gone","parent":{"krate":0,"index":4381},"children":[],"decl_id":null,"docs":" The empty variant after the result of a [`TryMaybeDone`] has been\n taken using the [`take_output`](TryMaybeDone::take_output) method,\n or if the future returned an error.\n","sig":null,"attributes":[{"value":"/ The empty variant after the result of a [`TryMaybeDone`] has been","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":79802,"byte_end":79871,"line_start":18,"line_end":18,"column_start":5,"column_end":74}},{"value":"/ taken using the [`take_output`](TryMaybeDone::take_output) method,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":79876,"byte_end":79946,"line_start":19,"line_end":19,"column_start":5,"column_end":75}},{"value":"/ or if the future returned an error.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":79951,"byte_end":79990,"line_start":20,"line_end":20,"column_start":5,"column_end":44}}]},{"kind":"Enum","id":{"krate":0,"index":4381},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":79646,"byte_end":79658,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"TryMaybeDone","qualname":"::future::try_maybe_done::TryMaybeDone","value":"pub enum TryMaybeDone<Fut: TryFuture> {\n\n    /// A not-yet-completed future\n    Future(\n           #[pin]\n           Fut),\n\n    /// The output of the completed future\n    Done(Fut::Ok),\n\n    /// The empty variant after the result of a [`TryMaybeDone`] has been\n    /// taken using the [`take_output`](TryMaybeDone::take_output) method,\n    /// or if the future returned an error.\n    Gone,\n}","parent":null,"children":[{"krate":0,"index":4383},{"krate":0,"index":4385},{"krate":0,"index":4388}],"decl_id":null,"docs":" A future that may have completed with an error.","sig":null,"attributes":[{"value":"pin(__private(project = TryMaybeDoneProj, project_replace =\n                TryMaybeDoneProjOwn))","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":79538,"byte_end":79619,"line_start":11,"line_end":11,"column_start":1,"column_end":82}}]},{"kind":"Struct","id":{"krate":0,"index":4431},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":79646,"byte_end":79658,"line_start":13,"line_end":13,"column_start":10,"column_end":22},"name":"__TryMaybeDone","qualname":"::future::try_maybe_done::_::__TryMaybeDone","value":"__TryMaybeDone {  }","parent":null,"children":[{"krate":0,"index":4434},{"krate":0,"index":4435}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80052,"byte_end":80066,"line_start":25,"line_end":25,"column_start":8,"column_end":22},"name":"try_maybe_done","qualname":"::future::try_maybe_done::try_maybe_done","value":"pub fn try_maybe_done<Fut: TryFuture>(Fut) -> TryMaybeDone<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Wraps a future into a `TryMaybeDone`\n","sig":null,"attributes":[{"value":"/ Wraps a future into a `TryMaybeDone`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80004,"byte_end":80044,"line_start":24,"line_end":24,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80509,"byte_end":80519,"line_start":35,"line_end":35,"column_start":12,"column_end":22},"name":"output_mut","qualname":"<TryMaybeDone<Fut>>::output_mut","value":"pub fn output_mut(Pin<&mut Self>) -> Option<&mut Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Returns an [`Option`] containing a mutable reference to the output of the future.\n The output of this method will be [`Some`] if and only if the inner\n future has completed successfully and [`take_output`](TryMaybeDone::take_output)\n has not yet been called.\n","sig":null,"attributes":[{"value":"/ Returns an [`Option`] containing a mutable reference to the output of the future.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80200,"byte_end":80285,"line_start":30,"line_end":30,"column_start":5,"column_end":90}},{"value":"/ The output of this method will be [`Some`] if and only if the inner","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80290,"byte_end":80361,"line_start":31,"line_end":31,"column_start":5,"column_end":76}},{"value":"/ future has completed successfully and [`take_output`](TryMaybeDone::take_output)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80366,"byte_end":80450,"line_start":32,"line_end":32,"column_start":5,"column_end":89}},{"value":"/ has not yet been called.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80455,"byte_end":80483,"line_start":33,"line_end":33,"column_start":5,"column_end":33}},{"value":"inline","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80488,"byte_end":80497,"line_start":34,"line_end":34,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80820,"byte_end":80831,"line_start":45,"line_end":45,"column_start":12,"column_end":23},"name":"take_output","qualname":"<TryMaybeDone<Fut>>::take_output","value":"pub fn take_output(Pin<&mut Self>) -> Option<Fut::Ok>","parent":null,"children":[],"decl_id":null,"docs":" Attempt to take the output of a `TryMaybeDone` without driving it\n towards completion.\n","sig":null,"attributes":[{"value":"/ Attempt to take the output of a `TryMaybeDone` without driving it","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80697,"byte_end":80766,"line_start":42,"line_end":42,"column_start":5,"column_end":74}},{"value":"/ towards completion.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80771,"byte_end":80794,"line_start":43,"line_end":43,"column_start":5,"column_end":28}},{"value":"inline","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80799,"byte_end":80808,"line_start":44,"line_end":44,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":4452},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\option.rs","byte_start":82943,"byte_end":82955,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"OptionFuture","qualname":"::future::option::OptionFuture","value":"","parent":null,"children":[],"decl_id":null,"docs":" A future representing a value which may or may not be present.","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\option.rs","byte_start":82864,"byte_end":82931,"line_start":27,"line_end":27,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\option.rs","byte_start":82825,"byte_end":82839,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":4473},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\option.rs","byte_start":82943,"byte_end":82955,"line_start":28,"line_end":28,"column_start":12,"column_end":24},"name":"__OptionFuture","qualname":"::future::option::_::__OptionFuture","value":"__OptionFuture {  }","parent":null,"children":[{"krate":0,"index":4476},{"krate":0,"index":4477}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":83925,"byte_end":83931,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::future::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":439}],"decl_id":null,"docs":" Future for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":83805,"byte_end":83845,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":83846,"byte_end":83913,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":442},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84518,"byte_end":84525,"line_start":35,"line_end":35,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::future::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) -> Poll<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new future wrapping around a function returning [`Poll`].","sig":null,"attributes":[{"value":"/ Creates a new future wrapping around a function returning [`Poll`].","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":83982,"byte_end":84053,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84054,"byte_end":84057,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Polling the returned future delegates to the wrapped function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84058,"byte_end":84124,"line_start":18,"line_end":18,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84125,"byte_end":84128,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84129,"byte_end":84143,"line_start":20,"line_end":20,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84144,"byte_end":84147,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84148,"byte_end":84155,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84156,"byte_end":84197,"line_start":23,"line_end":23,"column_start":1,"column_end":42}},{"value":"/ use futures::future::poll_fn;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84198,"byte_end":84231,"line_start":24,"line_end":24,"column_start":1,"column_end":34}},{"value":"/ use futures::task::{Context, Poll};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84232,"byte_end":84271,"line_start":25,"line_end":25,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84272,"byte_end":84275,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ fn read_line(_cx: &mut Context<'_>) -> Poll<String> {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84276,"byte_end":84333,"line_start":27,"line_end":27,"column_start":1,"column_end":58}},{"value":"/     Poll::Ready(\"Hello, World!\".into())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84334,"byte_end":84377,"line_start":28,"line_end":28,"column_start":1,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84378,"byte_end":84383,"line_start":29,"line_end":29,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84384,"byte_end":84387,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ let read_future = poll_fn(read_line);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84388,"byte_end":84429,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ assert_eq!(read_future.await, \"Hello, World!\".to_owned());","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84430,"byte_end":84492,"line_start":32,"line_end":32,"column_start":1,"column_end":63}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84493,"byte_end":84502,"line_start":33,"line_end":33,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84503,"byte_end":84510,"line_start":34,"line_end":34,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4499},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85245,"byte_end":85250,"line_start":8,"line_end":8,"column_start":12,"column_end":17},"name":"Ready","qualname":"::future::ready::Ready","value":"","parent":null,"children":[],"decl_id":null,"docs":" Future for the [`ready`](ready()) function.\n","sig":null,"attributes":[{"value":"/ Future for the [`ready`](ready()) function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85094,"byte_end":85141,"line_start":5,"line_end":5,"column_start":1,"column_end":48}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85166,"byte_end":85233,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85373,"byte_end":85383,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Ready<T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Unwraps the value from this immediately ready future.\n","sig":null,"attributes":[{"value":"/ Unwraps the value from this immediately ready future.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85290,"byte_end":85347,"line_start":11,"line_end":11,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85352,"byte_end":85361,"line_start":12,"line_end":12,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":476},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86049,"byte_end":86054,"line_start":47,"line_end":47,"column_start":8,"column_end":13},"name":"ready","qualname":"::future::ready::ready","value":"pub fn ready<T>(T) -> Ready<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a future that is immediately ready with a value.","sig":null,"attributes":[{"value":"/ Creates a future that is immediately ready with a value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85803,"byte_end":85863,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85864,"byte_end":85867,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85868,"byte_end":85882,"line_start":37,"line_end":37,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85883,"byte_end":85886,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85887,"byte_end":85894,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85895,"byte_end":85936,"line_start":40,"line_end":40,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85937,"byte_end":85961,"line_start":41,"line_end":41,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85962,"byte_end":85965,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(1);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85966,"byte_end":85995,"line_start":43,"line_end":43,"column_start":1,"column_end":30}},{"value":"/ assert_eq!(a.await, 1);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85996,"byte_end":86023,"line_start":44,"line_end":44,"column_start":1,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86024,"byte_end":86033,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86034,"byte_end":86041,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":478},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86366,"byte_end":86368,"line_start":63,"line_end":63,"column_start":8,"column_end":10},"name":"ok","qualname":"::future::ready::ok","value":"pub fn ok<T, E>(T) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with a success value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with a success value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86100,"byte_end":86167,"line_start":51,"line_end":51,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86168,"byte_end":86171,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86172,"byte_end":86186,"line_start":53,"line_end":53,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86187,"byte_end":86190,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86191,"byte_end":86198,"line_start":55,"line_end":55,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86199,"byte_end":86240,"line_start":56,"line_end":56,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86241,"byte_end":86265,"line_start":57,"line_end":57,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86266,"byte_end":86269,"line_start":58,"line_end":58,"column_start":1,"column_end":4}},{"value":"/ let a = future::ok::<i32, i32>(1);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86270,"byte_end":86308,"line_start":59,"line_end":59,"column_start":1,"column_end":39}},{"value":"/ assert_eq!(a.await, Ok(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86309,"byte_end":86340,"line_start":60,"line_end":60,"column_start":1,"column_end":32}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86341,"byte_end":86350,"line_start":61,"line_end":61,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86351,"byte_end":86358,"line_start":62,"line_end":62,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86699,"byte_end":86702,"line_start":79,"line_end":79,"column_start":8,"column_end":11},"name":"err","qualname":"::future::ready::err","value":"pub fn err<T, E>(E) -> Ready<Result<T, E>>","parent":null,"children":[],"decl_id":null,"docs":" Create a future that is immediately ready with an error value.","sig":null,"attributes":[{"value":"/ Create a future that is immediately ready with an error value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86432,"byte_end":86498,"line_start":67,"line_end":67,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86499,"byte_end":86502,"line_start":68,"line_end":68,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86503,"byte_end":86517,"line_start":69,"line_end":69,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86518,"byte_end":86521,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86522,"byte_end":86529,"line_start":71,"line_end":71,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86530,"byte_end":86571,"line_start":72,"line_end":72,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86572,"byte_end":86596,"line_start":73,"line_end":73,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86597,"byte_end":86600,"line_start":74,"line_end":74,"column_start":1,"column_end":4}},{"value":"/ let a = future::err::<i32, i32>(1);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86601,"byte_end":86640,"line_start":75,"line_end":75,"column_start":1,"column_end":40}},{"value":"/ assert_eq!(a.await, Err(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86641,"byte_end":86673,"line_start":76,"line_end":76,"column_start":1,"column_end":33}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86674,"byte_end":86683,"line_start":77,"line_end":77,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":86684,"byte_end":86691,"line_start":78,"line_end":78,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4601},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":87167,"byte_end":87181,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join","qualname":"::future::join::Join","value":"Join {  }","parent":null,"children":[{"krate":0,"index":4604},{"krate":0,"index":4605}],"decl_id":null,"docs":" Future for the [`join`](join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":87167,"byte_end":87181,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4626},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":87167,"byte_end":87181,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join","qualname":"::future::join::_::__Join","value":"__Join {  }","parent":null,"children":[{"krate":0,"index":4630},{"krate":0,"index":4631},{"krate":0,"index":4632}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4653},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":87167,"byte_end":87181,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join3","qualname":"::future::join::Join3","value":"Join3 {  }","parent":null,"children":[{"krate":0,"index":4657},{"krate":0,"index":4658},{"krate":0,"index":4659}],"decl_id":null,"docs":" Future for the [`join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":87167,"byte_end":87181,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4685},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":87167,"byte_end":87181,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join3","qualname":"::future::join::_::__Join3","value":"__Join3 {  }","parent":null,"children":[{"krate":0,"index":4690},{"krate":0,"index":4691},{"krate":0,"index":4692},{"krate":0,"index":4693}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4719},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":87167,"byte_end":87181,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join4","qualname":"::future::join::Join4","value":"Join4 {  }","parent":null,"children":[{"krate":0,"index":4724},{"krate":0,"index":4725},{"krate":0,"index":4726},{"krate":0,"index":4727}],"decl_id":null,"docs":" Future for the [`join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":87167,"byte_end":87181,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4758},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":87167,"byte_end":87181,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join4","qualname":"::future::join::_::__Join4","value":"__Join4 {  }","parent":null,"children":[{"krate":0,"index":4764},{"krate":0,"index":4765},{"krate":0,"index":4766},{"krate":0,"index":4767},{"krate":0,"index":4768}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4799},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":87167,"byte_end":87181,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"Join5","qualname":"::future::join::Join5","value":"Join5 {  }","parent":null,"children":[{"krate":0,"index":4805},{"krate":0,"index":4806},{"krate":0,"index":4807},{"krate":0,"index":4808},{"krate":0,"index":4809}],"decl_id":null,"docs":" Future for the [`join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":87167,"byte_end":87181,"line_start":18,"line_end":18,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4845},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":87167,"byte_end":87181,"line_start":18,"line_end":18,"column_start":9,"column_end":23},"name":"__Join5","qualname":"::future::join::_::__Join5","value":"__Join5 {  }","parent":null,"children":[{"krate":0,"index":4852},{"krate":0,"index":4853},{"krate":0,"index":4854},{"krate":0,"index":4855},{"krate":0,"index":4856},{"krate":0,"index":4857}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":504},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89817,"byte_end":89821,"line_start":111,"line_end":111,"column_start":8,"column_end":12},"name":"join","qualname":"::future::join::join","value":"pub fn join<Fut1, Fut2>(Fut1, Fut2) -> Join<Fut1, Fut2> where Fut1: Future,\nFut2: Future","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89240,"byte_end":89311,"line_start":90,"line_end":90,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89312,"byte_end":89315,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89316,"byte_end":89387,"line_start":92,"line_end":92,"column_start":1,"column_end":72}},{"value":"/ complete. The returned future will finish with a tuple of both results.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89388,"byte_end":89463,"line_start":93,"line_end":93,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89464,"byte_end":89467,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89468,"byte_end":89537,"line_start":95,"line_end":95,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89538,"byte_end":89564,"line_start":96,"line_end":96,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89565,"byte_end":89568,"line_start":97,"line_end":97,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89569,"byte_end":89583,"line_start":98,"line_end":98,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89584,"byte_end":89587,"line_start":99,"line_end":99,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89588,"byte_end":89595,"line_start":100,"line_end":100,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89596,"byte_end":89637,"line_start":101,"line_end":101,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89638,"byte_end":89662,"line_start":102,"line_end":102,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89663,"byte_end":89666,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89667,"byte_end":89691,"line_start":104,"line_end":104,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89692,"byte_end":89716,"line_start":105,"line_end":105,"column_start":1,"column_end":25}},{"value":"/ let pair = future::join(a, b);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89717,"byte_end":89751,"line_start":106,"line_end":106,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89752,"byte_end":89755,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, (1, 2));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89756,"byte_end":89791,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89792,"byte_end":89801,"line_start":109,"line_end":109,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":89802,"byte_end":89809,"line_start":110,"line_end":110,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":507},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90367,"byte_end":90372,"line_start":136,"line_end":136,"column_start":8,"column_end":13},"name":"join3","qualname":"::future::join::join3","value":"pub fn join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3) -> Join3<Fut1, Fut2, Fut3>\nwhere Fut1: Future, Fut2: Future, Fut3: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90028,"byte_end":90080,"line_start":120,"line_end":120,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90081,"byte_end":90084,"line_start":121,"line_end":121,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90085,"byte_end":90099,"line_start":122,"line_end":122,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90100,"byte_end":90103,"line_start":123,"line_end":123,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90104,"byte_end":90111,"line_start":124,"line_end":124,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90112,"byte_end":90153,"line_start":125,"line_end":125,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90154,"byte_end":90178,"line_start":126,"line_end":126,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90179,"byte_end":90182,"line_start":127,"line_end":127,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90183,"byte_end":90207,"line_start":128,"line_end":128,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90208,"byte_end":90232,"line_start":129,"line_end":129,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90233,"byte_end":90257,"line_start":130,"line_end":130,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join3(a, b, c);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90258,"byte_end":90297,"line_start":131,"line_end":131,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90298,"byte_end":90301,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90302,"byte_end":90341,"line_start":133,"line_end":133,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90342,"byte_end":90351,"line_start":134,"line_end":134,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90352,"byte_end":90359,"line_start":135,"line_end":135,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":511},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90955,"byte_end":90960,"line_start":166,"line_end":166,"column_start":8,"column_end":13},"name":"join4","qualname":"::future::join::join4","value":"pub fn join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> Join4<Fut1, Fut2, Fut3, Fut4> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90585,"byte_end":90637,"line_start":149,"line_end":149,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90638,"byte_end":90641,"line_start":150,"line_end":150,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90642,"byte_end":90656,"line_start":151,"line_end":151,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90657,"byte_end":90660,"line_start":152,"line_end":152,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90661,"byte_end":90668,"line_start":153,"line_end":153,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90669,"byte_end":90710,"line_start":154,"line_end":154,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90711,"byte_end":90735,"line_start":155,"line_end":155,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90736,"byte_end":90739,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90740,"byte_end":90764,"line_start":157,"line_end":157,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90765,"byte_end":90789,"line_start":158,"line_end":158,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90790,"byte_end":90814,"line_start":159,"line_end":159,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90815,"byte_end":90839,"line_start":160,"line_end":160,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join4(a, b, c, d);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90840,"byte_end":90882,"line_start":161,"line_end":161,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90883,"byte_end":90886,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90887,"byte_end":90929,"line_start":163,"line_end":163,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90930,"byte_end":90939,"line_start":164,"line_end":164,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":90940,"byte_end":90947,"line_start":165,"line_end":165,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":516},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91632,"byte_end":91637,"line_start":199,"line_end":199,"column_start":8,"column_end":13},"name":"join5","qualname":"::future::join::join5","value":"pub fn join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> Join5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: Future, Fut2: Future,\nFut3: Future, Fut4: Future, Fut5: Future","parent":null,"children":[],"decl_id":null,"docs":" Same as [`join`](join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`join`](join()), but with more futures.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91231,"byte_end":91283,"line_start":181,"line_end":181,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91284,"byte_end":91287,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91288,"byte_end":91302,"line_start":183,"line_end":183,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91303,"byte_end":91306,"line_start":184,"line_end":184,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91307,"byte_end":91314,"line_start":185,"line_end":185,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91315,"byte_end":91356,"line_start":186,"line_end":186,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91357,"byte_end":91381,"line_start":187,"line_end":187,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91382,"byte_end":91385,"line_start":188,"line_end":188,"column_start":1,"column_end":4}},{"value":"/ let a = async { 1 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91386,"byte_end":91410,"line_start":189,"line_end":189,"column_start":1,"column_end":25}},{"value":"/ let b = async { 2 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91411,"byte_end":91435,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/ let c = async { 3 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91436,"byte_end":91460,"line_start":191,"line_end":191,"column_start":1,"column_end":25}},{"value":"/ let d = async { 4 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91461,"byte_end":91485,"line_start":192,"line_end":192,"column_start":1,"column_end":25}},{"value":"/ let e = async { 5 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91486,"byte_end":91510,"line_start":193,"line_end":193,"column_start":1,"column_end":25}},{"value":"/ let tuple = future::join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91511,"byte_end":91556,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91557,"byte_end":91560,"line_start":195,"line_end":195,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, (1, 2, 3, 4, 5));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91561,"byte_end":91606,"line_start":196,"line_end":196,"column_start":1,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91607,"byte_end":91616,"line_start":197,"line_end":197,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\join.rs","byte_start":91617,"byte_end":91624,"line_start":198,"line_end":198,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4893},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92255,"byte_end":92261,"line_start":9,"line_end":9,"column_start":12,"column_end":18},"name":"Select","qualname":"::future::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":4896}],"decl_id":null,"docs":" Future for the [`select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`select()`] function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92117,"byte_end":92158,"line_start":6,"line_end":6,"column_start":1,"column_end":42}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92159,"byte_end":92226,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":545},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94409,"byte_end":94415,"line_start":75,"line_end":75,"column_start":8,"column_end":14},"name":"select","qualname":"::future::select::select","value":"pub fn select<A, B>(A, B) -> Select<A, B> where A: Future + Unpin, B: Future +\nUnpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92352,"byte_end":92422,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92423,"byte_end":92426,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92427,"byte_end":92505,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92506,"byte_end":92582,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92583,"byte_end":92655,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92656,"byte_end":92659,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92660,"byte_end":92732,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92733,"byte_end":92761,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92762,"byte_end":92765,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92766,"byte_end":92833,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ output type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92834,"byte_end":92898,"line_start":25,"line_end":25,"column_start":1,"column_end":65}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92899,"byte_end":92949,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92950,"byte_end":92953,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92954,"byte_end":92968,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92969,"byte_end":92972,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ A simple example","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92973,"byte_end":92993,"line_start":30,"line_end":30,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92994,"byte_end":92997,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92998,"byte_end":93005,"line_start":32,"line_end":32,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93006,"byte_end":93047,"line_start":33,"line_end":33,"column_start":1,"column_end":42}},{"value":"/ use futures::future::{self, Either};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93048,"byte_end":93088,"line_start":34,"line_end":34,"column_start":1,"column_end":41}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93089,"byte_end":93114,"line_start":35,"line_end":35,"column_start":1,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93115,"byte_end":93118,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ // These two futures have different types even though their outputs have the same type","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93119,"byte_end":93209,"line_start":37,"line_end":37,"column_start":1,"column_end":91}},{"value":"/ let future1 = async { 1 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93210,"byte_end":93240,"line_start":38,"line_end":38,"column_start":1,"column_end":31}},{"value":"/ let future2 = async { 2 };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93241,"byte_end":93271,"line_start":39,"line_end":39,"column_start":1,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93272,"byte_end":93275,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ // 'select' requires Future + Unpin bounds","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93276,"byte_end":93322,"line_start":41,"line_end":41,"column_start":1,"column_end":47}},{"value":"/ pin_mut!(future1);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93323,"byte_end":93345,"line_start":42,"line_end":42,"column_start":1,"column_end":23}},{"value":"/ pin_mut!(future2);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93346,"byte_end":93368,"line_start":43,"line_end":43,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93369,"byte_end":93372,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let value = match future::select(future1, future2).await {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93373,"byte_end":93435,"line_start":45,"line_end":45,"column_start":1,"column_end":63}},{"value":"/     Either::Left((value1, _)) => value1, // `value1` is resolved from `future1`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93436,"byte_end":93519,"line_start":46,"line_end":46,"column_start":1,"column_end":84}},{"value":"/                                          // `_` represents `future2`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93520,"byte_end":93592,"line_start":47,"line_end":47,"column_start":1,"column_end":73}},{"value":"/     Either::Right((value2, _)) => value2, // `value2` is resolved from `future2`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93593,"byte_end":93677,"line_start":48,"line_end":48,"column_start":1,"column_end":85}},{"value":"/                                           // `_` represents `future1`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93678,"byte_end":93751,"line_start":49,"line_end":49,"column_start":1,"column_end":74}},{"value":"/ };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93752,"byte_end":93758,"line_start":50,"line_end":50,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93759,"byte_end":93762,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ assert!(value == 1 || value == 2);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93763,"byte_end":93801,"line_start":52,"line_end":52,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93802,"byte_end":93811,"line_start":53,"line_end":53,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93812,"byte_end":93819,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93820,"byte_end":93823,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ A more complex example","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93824,"byte_end":93850,"line_start":56,"line_end":56,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93851,"byte_end":93854,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93855,"byte_end":93862,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93863,"byte_end":93922,"line_start":59,"line_end":59,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93923,"byte_end":93926,"line_start":60,"line_end":60,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's join implemented on top of select","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93927,"byte_end":93980,"line_start":61,"line_end":61,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93981,"byte_end":93984,"line_start":62,"line_end":62,"column_start":1,"column_end":4}},{"value":"/ fn join<A, B>(a: A, b: B) -> impl Future<Output=(A::Output, B::Output)>","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":93985,"byte_end":94060,"line_start":63,"line_end":63,"column_start":1,"column_end":76}},{"value":"/     where A: Future + Unpin,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94061,"byte_end":94093,"line_start":64,"line_end":64,"column_start":1,"column_end":33}},{"value":"/           B: Future + Unpin,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94094,"byte_end":94126,"line_start":65,"line_end":65,"column_start":1,"column_end":33}},{"value":"/ {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94127,"byte_end":94132,"line_start":66,"line_end":66,"column_start":1,"column_end":6}},{"value":"/     future::select(a, b).then(|either| {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94133,"byte_end":94177,"line_start":67,"line_end":67,"column_start":1,"column_end":45}},{"value":"/         match either {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94178,"byte_end":94204,"line_start":68,"line_end":68,"column_start":1,"column_end":27}},{"value":"/             Either::Left((x, b)) => b.map(move |y| (x, y)).left_future(),","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94205,"byte_end":94282,"line_start":69,"line_end":69,"column_start":1,"column_end":78}},{"value":"/             Either::Right((y, a)) => a.map(move |x| (x, y)).right_future(),","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94283,"byte_end":94362,"line_start":70,"line_end":70,"column_start":1,"column_end":80}},{"value":"/         }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94363,"byte_end":94376,"line_start":71,"line_end":71,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94377,"byte_end":94387,"line_start":72,"line_end":72,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94388,"byte_end":94393,"line_start":73,"line_end":73,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94394,"byte_end":94401,"line_start":74,"line_end":74,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":4971},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":95815,"byte_end":95829,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin","qualname":"::future::try_join::TryJoin","value":"TryJoin {  }","parent":null,"children":[{"krate":0,"index":4974},{"krate":0,"index":4975}],"decl_id":null,"docs":" Future for the [`try_join`](try_join()) function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":95815,"byte_end":95829,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4996},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":95815,"byte_end":95829,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin","qualname":"::future::try_join::_::__TryJoin","value":"__TryJoin {  }","parent":null,"children":[{"krate":0,"index":5000},{"krate":0,"index":5001},{"krate":0,"index":5002}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5023},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":95815,"byte_end":95829,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin3","qualname":"::future::try_join::TryJoin3","value":"TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":5027},{"krate":0,"index":5028},{"krate":0,"index":5029}],"decl_id":null,"docs":" Future for the [`try_join3`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":95815,"byte_end":95829,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5055},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":95815,"byte_end":95829,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin3","qualname":"::future::try_join::_::__TryJoin3","value":"__TryJoin3 {  }","parent":null,"children":[{"krate":0,"index":5060},{"krate":0,"index":5061},{"krate":0,"index":5062},{"krate":0,"index":5063}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5089},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":95815,"byte_end":95829,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin4","qualname":"::future::try_join::TryJoin4","value":"TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":5094},{"krate":0,"index":5095},{"krate":0,"index":5096},{"krate":0,"index":5097}],"decl_id":null,"docs":" Future for the [`try_join4`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":95815,"byte_end":95829,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5128},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":95815,"byte_end":95829,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin4","qualname":"::future::try_join::_::__TryJoin4","value":"__TryJoin4 {  }","parent":null,"children":[{"krate":0,"index":5134},{"krate":0,"index":5135},{"krate":0,"index":5136},{"krate":0,"index":5137},{"krate":0,"index":5138}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5169},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":95815,"byte_end":95829,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"TryJoin5","qualname":"::future::try_join::TryJoin5","value":"TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":5175},{"krate":0,"index":5176},{"krate":0,"index":5177},{"krate":0,"index":5178},{"krate":0,"index":5179}],"decl_id":null,"docs":" Future for the [`try_join5`] function.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":95815,"byte_end":95829,"line_start":16,"line_end":16,"column_start":9,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":5215},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":95815,"byte_end":95829,"line_start":16,"line_end":16,"column_start":9,"column_end":23},"name":"__TryJoin5","qualname":"::future::try_join::_::__TryJoin5","value":"__TryJoin5 {  }","parent":null,"children":[{"krate":0,"index":5222},{"krate":0,"index":5223},{"krate":0,"index":5224},{"krate":0,"index":5225},{"krate":0,"index":5226},{"krate":0,"index":5227}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99811,"byte_end":99819,"line_start":147,"line_end":147,"column_start":8,"column_end":16},"name":"try_join","qualname":"::future::try_join::try_join","value":"pub fn try_join<Fut1, Fut2>(Fut1, Fut2) -> TryJoin<Fut1, Fut2> where\nFut1: TryFuture, Fut2: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Joins the result of two futures, waiting for them both to complete or\n for one to produce an error.","sig":null,"attributes":[{"value":"/ Joins the result of two futures, waiting for them both to complete or","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":98577,"byte_end":98650,"line_start":105,"line_end":105,"column_start":1,"column_end":74}},{"value":"/ for one to produce an error.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":98651,"byte_end":98683,"line_start":106,"line_end":106,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":98684,"byte_end":98687,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits both futures to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":98688,"byte_end":98759,"line_start":108,"line_end":108,"column_start":1,"column_end":72}},{"value":"/ complete. If successful, the returned future will finish with a tuple of","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":98760,"byte_end":98836,"line_start":109,"line_end":109,"column_start":1,"column_end":77}},{"value":"/ both results. If unsuccesful, it will complete with the first error","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":98837,"byte_end":98908,"line_start":110,"line_end":110,"column_start":1,"column_end":72}},{"value":"/ encountered.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":98909,"byte_end":98925,"line_start":111,"line_end":111,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":98926,"byte_end":98929,"line_start":112,"line_end":112,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the passed futures and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":98930,"byte_end":98999,"line_start":113,"line_end":113,"column_start":1,"column_end":70}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99000,"byte_end":99026,"line_start":114,"line_end":114,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99027,"byte_end":99030,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99031,"byte_end":99045,"line_start":116,"line_end":116,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99046,"byte_end":99049,"line_start":117,"line_end":117,"column_start":1,"column_end":4}},{"value":"/ When used on multiple futures that return [`Ok`], `try_join` will return","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99050,"byte_end":99126,"line_start":118,"line_end":118,"column_start":1,"column_end":77}},{"value":"/ [`Ok`] of a tuple of the values:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99127,"byte_end":99163,"line_start":119,"line_end":119,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99164,"byte_end":99167,"line_start":120,"line_end":120,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99168,"byte_end":99175,"line_start":121,"line_end":121,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99176,"byte_end":99217,"line_start":122,"line_end":122,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99218,"byte_end":99242,"line_start":123,"line_end":123,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99243,"byte_end":99246,"line_start":124,"line_end":124,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99247,"byte_end":99292,"line_start":125,"line_end":125,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99293,"byte_end":99338,"line_start":126,"line_end":126,"column_start":1,"column_end":46}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99339,"byte_end":99377,"line_start":127,"line_end":127,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99378,"byte_end":99381,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Ok((1, 2)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99382,"byte_end":99421,"line_start":129,"line_end":129,"column_start":1,"column_end":40}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99422,"byte_end":99431,"line_start":130,"line_end":130,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99432,"byte_end":99439,"line_start":131,"line_end":131,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99440,"byte_end":99443,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ If one of the futures resolves to an error, `try_join` will return","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99444,"byte_end":99514,"line_start":133,"line_end":133,"column_start":1,"column_end":71}},{"value":"/ that error:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99515,"byte_end":99530,"line_start":134,"line_end":134,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99531,"byte_end":99534,"line_start":135,"line_end":135,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99535,"byte_end":99542,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99543,"byte_end":99584,"line_start":137,"line_end":137,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99585,"byte_end":99609,"line_start":138,"line_end":138,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99610,"byte_end":99613,"line_start":139,"line_end":139,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99614,"byte_end":99659,"line_start":140,"line_end":140,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Err::<i32, i32>(2));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99660,"byte_end":99706,"line_start":141,"line_end":141,"column_start":1,"column_end":47}},{"value":"/ let pair = future::try_join(a, b);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99707,"byte_end":99745,"line_start":142,"line_end":142,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99746,"byte_end":99749,"line_start":143,"line_end":143,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(pair.await, Err(2));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99750,"byte_end":99785,"line_start":144,"line_end":144,"column_start":1,"column_end":36}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99786,"byte_end":99795,"line_start":145,"line_end":145,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99796,"byte_end":99803,"line_start":146,"line_end":146,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100412,"byte_end":100421,"line_start":171,"line_end":171,"column_start":8,"column_end":17},"name":"try_join3","qualname":"::future::try_join::try_join3","value":"pub fn try_join3<Fut1, Fut2, Fut3>(Fut1, Fut2, Fut3)\n-> TryJoin3<Fut1, Fut2, Fut3> where Fut1: TryFuture, Fut2: TryFuture<Error =\nFut1::Error>, Fut3: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":99994,"byte_end":100054,"line_start":155,"line_end":155,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100055,"byte_end":100058,"line_start":156,"line_end":156,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100059,"byte_end":100073,"line_start":157,"line_end":157,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100074,"byte_end":100077,"line_start":158,"line_end":158,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100078,"byte_end":100085,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100086,"byte_end":100127,"line_start":160,"line_end":160,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100128,"byte_end":100152,"line_start":161,"line_end":161,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100153,"byte_end":100156,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100157,"byte_end":100202,"line_start":163,"line_end":163,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100203,"byte_end":100248,"line_start":164,"line_end":164,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100249,"byte_end":100294,"line_start":165,"line_end":165,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join3(a, b, c);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100295,"byte_end":100338,"line_start":166,"line_end":166,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100339,"byte_end":100342,"line_start":167,"line_end":167,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100343,"byte_end":100386,"line_start":168,"line_end":168,"column_start":1,"column_end":44}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100387,"byte_end":100396,"line_start":169,"line_end":169,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100397,"byte_end":100404,"line_start":170,"line_end":170,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101161,"byte_end":101170,"line_start":201,"line_end":201,"column_start":8,"column_end":17},"name":"try_join4","qualname":"::future::try_join::try_join4","value":"pub fn try_join4<Fut1, Fut2, Fut3, Fut4>(Fut1, Fut2, Fut3, Fut4)\n-> TryJoin4<Fut1, Fut2, Fut3, Fut4> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100691,"byte_end":100751,"line_start":184,"line_end":184,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100752,"byte_end":100755,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100756,"byte_end":100770,"line_start":186,"line_end":186,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100771,"byte_end":100774,"line_start":187,"line_end":187,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100775,"byte_end":100782,"line_start":188,"line_end":188,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100783,"byte_end":100824,"line_start":189,"line_end":189,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100825,"byte_end":100849,"line_start":190,"line_end":190,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100850,"byte_end":100853,"line_start":191,"line_end":191,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100854,"byte_end":100899,"line_start":192,"line_end":192,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100900,"byte_end":100945,"line_start":193,"line_end":193,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100946,"byte_end":100991,"line_start":194,"line_end":194,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":100992,"byte_end":101037,"line_start":195,"line_end":195,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join4(a, b, c, d);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101038,"byte_end":101084,"line_start":196,"line_end":196,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101085,"byte_end":101088,"line_start":197,"line_end":197,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101089,"byte_end":101135,"line_start":198,"line_end":198,"column_start":1,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101136,"byte_end":101145,"line_start":199,"line_end":199,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101146,"byte_end":101153,"line_start":200,"line_end":200,"column_start":1,"column_end":8}}]},{"kind":"Function","id":{"krate":0,"index":586},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":102044,"byte_end":102053,"line_start":234,"line_end":234,"column_start":8,"column_end":17},"name":"try_join5","qualname":"::future::try_join::try_join5","value":"pub fn try_join5<Fut1, Fut2, Fut3, Fut4, Fut5>(Fut1, Fut2, Fut3, Fut4, Fut5)\n-> TryJoin5<Fut1, Fut2, Fut3, Fut4, Fut5> where Fut1: TryFuture,\nFut2: TryFuture<Error = Fut1::Error>, Fut3: TryFuture<Error = Fut1::Error>,\nFut4: TryFuture<Error = Fut1::Error>, Fut5: TryFuture<Error = Fut1::Error>","parent":null,"children":[],"decl_id":null,"docs":" Same as [`try_join`](try_join()), but with more futures.","sig":null,"attributes":[{"value":"/ Same as [`try_join`](try_join()), but with more futures.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101522,"byte_end":101582,"line_start":216,"line_end":216,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101583,"byte_end":101586,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101587,"byte_end":101601,"line_start":218,"line_end":218,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101602,"byte_end":101605,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101606,"byte_end":101613,"line_start":220,"line_end":220,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101614,"byte_end":101655,"line_start":221,"line_end":221,"column_start":1,"column_end":42}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101656,"byte_end":101680,"line_start":222,"line_end":222,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101681,"byte_end":101684,"line_start":223,"line_end":223,"column_start":1,"column_end":4}},{"value":"/ let a = future::ready(Ok::<i32, i32>(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101685,"byte_end":101730,"line_start":224,"line_end":224,"column_start":1,"column_end":46}},{"value":"/ let b = future::ready(Ok::<i32, i32>(2));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101731,"byte_end":101776,"line_start":225,"line_end":225,"column_start":1,"column_end":46}},{"value":"/ let c = future::ready(Ok::<i32, i32>(3));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101777,"byte_end":101822,"line_start":226,"line_end":226,"column_start":1,"column_end":46}},{"value":"/ let d = future::ready(Ok::<i32, i32>(4));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101823,"byte_end":101868,"line_start":227,"line_end":227,"column_start":1,"column_end":46}},{"value":"/ let e = future::ready(Ok::<i32, i32>(5));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101869,"byte_end":101914,"line_start":228,"line_end":228,"column_start":1,"column_end":46}},{"value":"/ let tuple = future::try_join5(a, b, c, d, e);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101915,"byte_end":101964,"line_start":229,"line_end":229,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101965,"byte_end":101968,"line_start":230,"line_end":230,"column_start":1,"column_end":4}},{"value":"/ assert_eq!(tuple.await, Ok((1, 2, 3, 4, 5)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":101969,"byte_end":102018,"line_start":231,"line_end":231,"column_start":1,"column_end":50}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":102019,"byte_end":102028,"line_start":232,"line_end":232,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_join.rs","byte_start":102029,"byte_end":102036,"line_start":233,"line_end":233,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":5263},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":102781,"byte_end":102790,"line_start":9,"line_end":9,"column_start":12,"column_end":21},"name":"TrySelect","qualname":"::future::try_select::TrySelect","value":"TrySelect {  }","parent":null,"children":[{"krate":0,"index":5266}],"decl_id":null,"docs":" Future for the [`try_select()`] function.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_select()`] function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":102639,"byte_end":102684,"line_start":6,"line_end":6,"column_start":1,"column_end":46}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":102685,"byte_end":102752,"line_start":7,"line_end":7,"column_start":1,"column_end":68}}]},{"kind":"Function","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":104375,"byte_end":104385,"line_start":50,"line_end":50,"column_start":8,"column_end":18},"name":"try_select","qualname":"::future::try_select::try_select","value":"pub fn try_select<A, B>(A, B) -> TrySelect<A, B> where A: TryFuture + Unpin,\nB: TryFuture + Unpin","parent":null,"children":[],"decl_id":null,"docs":" Waits for either one of two differently-typed futures to complete.","sig":null,"attributes":[{"value":"/ Waits for either one of two differently-typed futures to complete.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":102884,"byte_end":102954,"line_start":15,"line_end":15,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":102955,"byte_end":102958,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ This function will return a new future which awaits for either one of both","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":102959,"byte_end":103037,"line_start":17,"line_end":17,"column_start":1,"column_end":79}},{"value":"/ futures to complete. The returned future will finish with both the value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103038,"byte_end":103114,"line_start":18,"line_end":18,"column_start":1,"column_end":77}},{"value":"/ resolved and a future representing the completion of the other work.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103115,"byte_end":103187,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103188,"byte_end":103191,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes the receiving futures and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103192,"byte_end":103264,"line_start":21,"line_end":21,"column_start":1,"column_end":73}},{"value":"/ wrapped version of them.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103265,"byte_end":103293,"line_start":22,"line_end":22,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103294,"byte_end":103297,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Also note that if both this and the second future have the same","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103298,"byte_end":103365,"line_start":24,"line_end":24,"column_start":1,"column_end":68}},{"value":"/ success/error type you can use the `Either::factor_first` method to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103366,"byte_end":103437,"line_start":25,"line_end":25,"column_start":1,"column_end":72}},{"value":"/ conveniently extract out the value at the end.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103438,"byte_end":103488,"line_start":26,"line_end":26,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103489,"byte_end":103492,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103493,"byte_end":103507,"line_start":28,"line_end":28,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103508,"byte_end":103511,"line_start":29,"line_end":29,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103512,"byte_end":103519,"line_start":30,"line_end":30,"column_start":1,"column_end":8}},{"value":"/ use futures::future::{self, Either, Future, FutureExt, TryFuture, TryFutureExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103520,"byte_end":103604,"line_start":31,"line_end":31,"column_start":1,"column_end":85}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103605,"byte_end":103608,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ // A poor-man's try_join implemented on top of select","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103609,"byte_end":103666,"line_start":33,"line_end":33,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103667,"byte_end":103670,"line_start":34,"line_end":34,"column_start":1,"column_end":4}},{"value":"/ fn try_join<A, B, E>(a: A, b: B) -> impl TryFuture<Ok=(A::Ok, B::Ok), Error=E>","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103671,"byte_end":103753,"line_start":35,"line_end":35,"column_start":1,"column_end":83}},{"value":"/      where A: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103754,"byte_end":103811,"line_start":36,"line_end":36,"column_start":1,"column_end":58}},{"value":"/            B: TryFuture<Error = E> + Unpin + 'static,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103812,"byte_end":103869,"line_start":37,"line_end":37,"column_start":1,"column_end":58}},{"value":"/            E: 'static,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103870,"byte_end":103896,"line_start":38,"line_end":38,"column_start":1,"column_end":27}},{"value":"/ {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103897,"byte_end":103902,"line_start":39,"line_end":39,"column_start":1,"column_end":6}},{"value":"/     future::try_select(a, b).then(|res| -> Box<dyn Future<Output = Result<_, _>> + Unpin> {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103903,"byte_end":103998,"line_start":40,"line_end":40,"column_start":1,"column_end":96}},{"value":"/         match res {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":103999,"byte_end":104022,"line_start":41,"line_end":41,"column_start":1,"column_end":24}},{"value":"/             Ok(Either::Left((x, b))) => Box::new(b.map_ok(move |y| (x, y))),","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":104023,"byte_end":104103,"line_start":42,"line_end":42,"column_start":1,"column_end":81}},{"value":"/             Ok(Either::Right((y, a))) => Box::new(a.map_ok(move |x| (x, y))),","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":104104,"byte_end":104185,"line_start":43,"line_end":43,"column_start":1,"column_end":82}},{"value":"/             Err(Either::Left((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":104186,"byte_end":104256,"line_start":44,"line_end":44,"column_start":1,"column_end":71}},{"value":"/             Err(Either::Right((e, _))) => Box::new(future::err(e)),","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":104257,"byte_end":104328,"line_start":45,"line_end":45,"column_start":1,"column_end":72}},{"value":"/         }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":104329,"byte_end":104342,"line_start":46,"line_end":46,"column_start":1,"column_end":14}},{"value":"/     })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":104343,"byte_end":104353,"line_start":47,"line_end":47,"column_start":1,"column_end":11}},{"value":"/ }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":104354,"byte_end":104359,"line_start":48,"line_end":48,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":104360,"byte_end":104367,"line_start":49,"line_end":49,"column_start":1,"column_end":8}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5274},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":105991,"byte_end":105995,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Left","qualname":"::future::either::Either::Left","value":"Either::Left(A)","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" First branch of the type\n","sig":null,"attributes":[{"value":"/ First branch of the type","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":105958,"byte_end":105986,"line_start":14,"line_end":14,"column_start":5,"column_end":33}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5276},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106045,"byte_end":106050,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Right","qualname":"::future::either::Either::Right","value":"Either::Right(B)","parent":{"krate":0,"index":5271},"children":[],"decl_id":null,"docs":" Second branch of the type\n","sig":null,"attributes":[{"value":"/ Second branch of the type","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106011,"byte_end":106040,"line_start":16,"line_end":16,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":5271},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":105939,"byte_end":105945,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"Either","qualname":"::future::either::Either","value":"pub enum Either<A, B> {\n\n    /// First branch of the type\n    Left(\n         #[pin]\n         A),\n\n    /// Second branch of the type\n    Right(\n          #[pin]\n          B),\n}","parent":null,"children":[{"krate":0,"index":5274},{"krate":0,"index":5276}],"decl_id":null,"docs":" Combines two different futures, streams, or sinks having the same associated types into a single\n type.\n","sig":null,"attributes":[{"value":"pin(__private(project = EitherProj))","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":105869,"byte_end":105905,"line_start":11,"line_end":11,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":5308},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":105939,"byte_end":105945,"line_start":13,"line_end":13,"column_start":10,"column_end":16},"name":"__Either","qualname":"::future::either::_::__Either","value":"__Either {  }","parent":null,"children":[{"krate":0,"index":5312},{"krate":0,"index":5313},{"krate":0,"index":5314}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":642},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106256,"byte_end":106268,"line_start":24,"line_end":24,"column_start":12,"column_end":24},"name":"factor_first","qualname":"<Either<(T, A), (T, B)>>::factor_first","value":"pub fn factor_first(Self) -> (T, Either<A, B>)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106108,"byte_end":106166,"line_start":21,"line_end":21,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106171,"byte_end":106174,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the first element of the pairs.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106179,"byte_end":106244,"line_start":23,"line_end":23,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":647},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106648,"byte_end":106661,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"factor_second","qualname":"<Either<(A, T), (B, T)>>::factor_second","value":"pub fn factor_second(Self) -> (Either<A, B>, T)","parent":null,"children":[],"decl_id":null,"docs":" Factor out a homogeneous type from an either of pairs.","sig":null,"attributes":[{"value":"/ Factor out a homogeneous type from an either of pairs.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106499,"byte_end":106557,"line_start":33,"line_end":33,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106562,"byte_end":106565,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ Here, the homogeneous type is the second element of the pairs.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106570,"byte_end":106636,"line_start":35,"line_end":35,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":650},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106949,"byte_end":106959,"line_start":46,"line_end":46,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Either<T, T>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Extract the value of an either over two equivalent types.\n","sig":null,"attributes":[{"value":"/ Extract the value of an either over two equivalent types.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106876,"byte_end":106937,"line_start":45,"line_end":45,"column_start":5,"column_end":66}}]},{"kind":"Mod","id":{"krate":0,"index":676},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"stream","qualname":"::stream","value":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","parent":null,"children":[{"krate":0,"index":677},{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":681},{"krate":0,"index":1455},{"krate":0,"index":1456},{"krate":0,"index":1457},{"krate":0,"index":1458},{"krate":0,"index":1459},{"krate":0,"index":1460},{"krate":0,"index":1461},{"krate":0,"index":1462},{"krate":0,"index":1463},{"krate":0,"index":1464},{"krate":0,"index":1465},{"krate":0,"index":1466},{"krate":0,"index":1467},{"krate":0,"index":1468},{"krate":0,"index":1469},{"krate":0,"index":1470},{"krate":0,"index":1471},{"krate":0,"index":1472},{"krate":0,"index":1473},{"krate":0,"index":1474},{"krate":0,"index":1475},{"krate":0,"index":1476},{"krate":0,"index":1477},{"krate":0,"index":1478},{"krate":0,"index":1479},{"krate":0,"index":1480},{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1483},{"krate":0,"index":1977},{"krate":0,"index":1978},{"krate":0,"index":1979},{"krate":0,"index":1980},{"krate":0,"index":1981},{"krate":0,"index":1982},{"krate":0,"index":1983},{"krate":0,"index":1984},{"krate":0,"index":1985},{"krate":0,"index":1986},{"krate":0,"index":1987},{"krate":0,"index":1988},{"krate":0,"index":1989},{"krate":0,"index":1990},{"krate":0,"index":1991},{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1997},{"krate":0,"index":1998},{"krate":0,"index":1999},{"krate":0,"index":2014},{"krate":0,"index":2015},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2037},{"krate":0,"index":2038},{"krate":0,"index":2039},{"krate":0,"index":2040},{"krate":0,"index":2061},{"krate":0,"index":2062},{"krate":0,"index":2063},{"krate":0,"index":2064},{"krate":0,"index":2087},{"krate":0,"index":2088},{"krate":0,"index":2089},{"krate":0,"index":2090},{"krate":0,"index":2111},{"krate":0,"index":2112},{"krate":0,"index":2113},{"krate":0,"index":2114},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2139},{"krate":0,"index":2140},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176},{"krate":0,"index":2177},{"krate":0,"index":2211},{"krate":0,"index":2212},{"krate":0,"index":2213},{"krate":0,"index":2214}],"decl_id":null,"docs":" Streams","sig":null,"attributes":[{"value":"! Streams","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113343,"byte_end":113354,"line_start":1,"line_end":1,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113355,"byte_end":113358,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! This module contains a number of functions for working with `Stream`s,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113359,"byte_end":113433,"line_start":3,"line_end":3,"column_start":1,"column_end":75}},{"value":"! including the [`StreamExt`] trait and the [`TryStreamExt`] trait which add","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113434,"byte_end":113512,"line_start":4,"line_end":4,"column_start":1,"column_end":79}},{"value":"! methods to `Stream` types","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\mod.rs","byte_start":113513,"byte_end":113542,"line_start":5,"line_end":5,"column_start":1,"column_end":30}}]},{"kind":"Struct","id":{"krate":0,"index":5340},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\chain.rs","byte_start":164409,"byte_end":164414,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"Chain","qualname":"::stream::stream::chain::Chain","value":"Chain {  }","parent":null,"children":[{"krate":0,"index":5343},{"krate":0,"index":5344}],"decl_id":null,"docs":" Stream for the [`chain`](super::StreamExt::chain) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\chain.rs","byte_start":164349,"byte_end":164397,"line_start":9,"line_end":9,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\chain.rs","byte_start":164317,"byte_end":164331,"line_start":7,"line_end":7,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5365},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\chain.rs","byte_start":164409,"byte_end":164414,"line_start":10,"line_end":10,"column_start":12,"column_end":17},"name":"__Chain","qualname":"::stream::stream::chain::_::__Chain","value":"__Chain {  }","parent":null,"children":[{"krate":0,"index":5369},{"krate":0,"index":5370},{"krate":0,"index":5371}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5396},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\collect.rs","byte_start":166527,"byte_end":166534,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Collect","qualname":"::stream::stream::collect::Collect","value":"Collect {  }","parent":null,"children":[{"krate":0,"index":5400},{"krate":0,"index":5399}],"decl_id":null,"docs":" Future for the [`collect`](super::StreamExt::collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\collect.rs","byte_start":166448,"byte_end":166515,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\collect.rs","byte_start":166416,"byte_end":166430,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5421},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\collect.rs","byte_start":166527,"byte_end":166534,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Collect","qualname":"::stream::stream::collect::_::__Collect","value":"__Collect {  }","parent":null,"children":[{"krate":0,"index":5425},{"krate":0,"index":5426}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5451},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\concat.rs","byte_start":167933,"byte_end":167939,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Concat","qualname":"::stream::stream::concat::Concat","value":"Concat {  }","parent":null,"children":[{"krate":0,"index":5454},{"krate":0,"index":5453}],"decl_id":null,"docs":" Future for the [`concat`](super::StreamExt::concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\concat.rs","byte_start":167854,"byte_end":167921,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\concat.rs","byte_start":167822,"byte_end":167836,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5472},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\concat.rs","byte_start":167933,"byte_end":167939,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Concat","qualname":"::stream::stream::concat::_::__Concat","value":"__Concat {  }","parent":null,"children":[{"krate":0,"index":5475},{"krate":0,"index":5476}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5495},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\enumerate.rs","byte_start":169678,"byte_end":169687,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"Enumerate","qualname":"::stream::stream::enumerate::Enumerate","value":"Enumerate {  }","parent":null,"children":[{"krate":0,"index":5498},{"krate":0,"index":5497}],"decl_id":null,"docs":" Stream for the [`enumerate`](super::StreamExt::enumerate) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\enumerate.rs","byte_start":169618,"byte_end":169666,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\enumerate.rs","byte_start":169586,"byte_end":169600,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5516},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\enumerate.rs","byte_start":169678,"byte_end":169687,"line_start":12,"line_end":12,"column_start":12,"column_end":21},"name":"__Enumerate","qualname":"::stream::stream::enumerate::_::__Enumerate","value":"__Enumerate {  }","parent":null,"children":[{"krate":0,"index":5519},{"krate":0,"index":5520}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5543},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter.rs","byte_start":171329,"byte_end":171335,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"Filter","qualname":"::stream::stream::filter::Filter","value":"Filter {  }","parent":null,"children":[{"krate":0,"index":5549},{"krate":0,"index":5547},{"krate":0,"index":5550},{"krate":0,"index":5548}],"decl_id":null,"docs":" Stream for the [`filter`](super::StreamExt::filter) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter.rs","byte_start":171269,"byte_end":171317,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter.rs","byte_start":171254,"byte_end":171268,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5578},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter.rs","byte_start":171329,"byte_end":171335,"line_start":14,"line_end":14,"column_start":12,"column_end":18},"name":"__Filter","qualname":"::stream::stream::filter::_::__Filter","value":"__Filter {  }","parent":null,"children":[{"krate":0,"index":5583},{"krate":0,"index":5584},{"krate":0,"index":5585}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5615},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter_map.rs","byte_start":174777,"byte_end":174786,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"FilterMap","qualname":"::stream::stream::filter_map::FilterMap","value":"FilterMap {  }","parent":null,"children":[{"krate":0,"index":5620},{"krate":0,"index":5619},{"krate":0,"index":5621}],"decl_id":null,"docs":" Stream for the [`filter_map`](super::StreamExt::filter_map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter_map.rs","byte_start":174717,"byte_end":174765,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter_map.rs","byte_start":174702,"byte_end":174716,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5647},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter_map.rs","byte_start":174777,"byte_end":174786,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__FilterMap","qualname":"::stream::stream::filter_map::_::__FilterMap","value":"__FilterMap {  }","parent":null,"children":[{"krate":0,"index":5652},{"krate":0,"index":5653},{"krate":0,"index":5654}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5684},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\flatten.rs","byte_start":177807,"byte_end":177814,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"Flatten","qualname":"::stream::stream::flatten::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5687},{"krate":0,"index":5688}],"decl_id":null,"docs":" Stream for the [`flatten`](super::StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\flatten.rs","byte_start":177747,"byte_end":177795,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\flatten.rs","byte_start":177715,"byte_end":177729,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5709},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\flatten.rs","byte_start":177807,"byte_end":177814,"line_start":12,"line_end":12,"column_start":12,"column_end":19},"name":"__Flatten","qualname":"::stream::stream::flatten::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":5713},{"krate":0,"index":5714},{"krate":0,"index":5715}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5746},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"Flatten","qualname":"::stream::stream::Flatten","value":"Flatten {  }","parent":null,"children":[{"krate":0,"index":5748}],"decl_id":null,"docs":" Stream for the [`flatten`](StreamExt::flatten) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":5764},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__Flatten","qualname":"::stream::stream::_::__Flatten","value":"__Flatten {  }","parent":null,"children":[{"krate":0,"index":5767},{"krate":0,"index":5768}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5804},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fold.rs","byte_start":179567,"byte_end":179571,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"Fold","qualname":"::stream::stream::fold::Fold","value":"Fold {  }","parent":null,"children":[{"krate":0,"index":5811},{"krate":0,"index":5809},{"krate":0,"index":5810},{"krate":0,"index":5812}],"decl_id":null,"docs":" Future for the [`fold`](super::StreamExt::fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fold.rs","byte_start":179488,"byte_end":179555,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fold.rs","byte_start":179473,"byte_end":179487,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5843},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fold.rs","byte_start":179567,"byte_end":179571,"line_start":11,"line_end":11,"column_start":12,"column_end":16},"name":"__Fold","qualname":"::stream::stream::fold::_::__Fold","value":"__Fold {  }","parent":null,"children":[{"krate":0,"index":5849},{"krate":0,"index":5850},{"krate":0,"index":5851}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5882},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\for_each.rs","byte_start":182077,"byte_end":182084,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"ForEach","qualname":"::stream::stream::for_each::ForEach","value":"ForEach {  }","parent":null,"children":[{"krate":0,"index":5887},{"krate":0,"index":5886},{"krate":0,"index":5888}],"decl_id":null,"docs":" Future for the [`for_each`](super::StreamExt::for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\for_each.rs","byte_start":181998,"byte_end":182065,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\for_each.rs","byte_start":181983,"byte_end":181997,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5914},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\for_each.rs","byte_start":182077,"byte_end":182084,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__ForEach","qualname":"::stream::stream::for_each::_::__ForEach","value":"__ForEach {  }","parent":null,"children":[{"krate":0,"index":5919},{"krate":0,"index":5920},{"krate":0,"index":5921}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5947},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184056,"byte_end":184060,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Fuse","qualname":"::stream::stream::fuse::Fuse","value":"Fuse {  }","parent":null,"children":[{"krate":0,"index":5950},{"krate":0,"index":5949}],"decl_id":null,"docs":" Stream for the [`fuse`](super::StreamExt::fuse) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":183996,"byte_end":184044,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":183964,"byte_end":183978,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":5968},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184056,"byte_end":184060,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Fuse","qualname":"::stream::stream::fuse::_::__Fuse","value":"__Fuse {  }","parent":null,"children":[{"krate":0,"index":5971},{"krate":0,"index":5972}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184498,"byte_end":184505,"line_start":28,"line_end":28,"column_start":12,"column_end":19},"name":"is_done","qualname":"<Fuse<St>>::is_done","value":"pub fn is_done(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns whether the underlying stream has finished or not.","sig":null,"attributes":[{"value":"/ Returns whether the underlying stream has finished or not.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184229,"byte_end":184291,"line_start":23,"line_end":23,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184296,"byte_end":184299,"line_start":24,"line_end":24,"column_start":5,"column_end":8}},{"value":"/ If this method returns `true`, then all future calls to poll are","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184304,"byte_end":184372,"line_start":25,"line_end":25,"column_start":5,"column_end":73}},{"value":"/ guaranteed to return `None`. If this returns `false`, then the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184377,"byte_end":184443,"line_start":26,"line_end":26,"column_start":5,"column_end":71}},{"value":"/ underlying stream is still in use.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184448,"byte_end":184486,"line_start":27,"line_end":27,"column_start":5,"column_end":43}}]},{"kind":"Struct","id":{"krate":0,"index":5995},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":185862,"byte_end":185874,"line_start":10,"line_end":10,"column_start":12,"column_end":24},"name":"StreamFuture","qualname":"::stream::stream::into_future::StreamFuture","value":"StreamFuture {  }","parent":null,"children":[{"krate":0,"index":5997}],"decl_id":null,"docs":" Future for the [`into_future`](super::StreamExt::into_future) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`into_future`](super::StreamExt::into_future) method.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":185692,"byte_end":185765,"line_start":7,"line_end":7,"column_start":1,"column_end":74}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":185783,"byte_end":185850,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":994},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186457,"byte_end":186464,"line_start":26,"line_end":26,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<StreamFuture<St>>::get_ref","value":"pub fn get_ref(&Self) -> Option<&St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying stream that this combinator is\n pulling from.","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying stream that this combinator is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186065,"byte_end":186138,"line_start":19,"line_end":19,"column_start":5,"column_end":78}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186143,"byte_end":186160,"line_start":20,"line_end":20,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186165,"byte_end":186168,"line_start":21,"line_end":21,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186173,"byte_end":186254,"line_start":22,"line_end":22,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186259,"byte_end":186341,"line_start":23,"line_end":23,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186346,"byte_end":186425,"line_start":24,"line_end":24,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186430,"byte_end":186445,"line_start":25,"line_end":25,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":995},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187075,"byte_end":187082,"line_start":40,"line_end":40,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<StreamFuture<St>>::get_mut","value":"pub fn get_mut(&mut Self) -> Option<&mut St>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186529,"byte_end":186596,"line_start":30,"line_end":30,"column_start":5,"column_end":72}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186601,"byte_end":186632,"line_start":31,"line_end":31,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186637,"byte_end":186640,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186645,"byte_end":186718,"line_start":33,"line_end":33,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186723,"byte_end":186778,"line_start":34,"line_end":34,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186783,"byte_end":186786,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186791,"byte_end":186872,"line_start":36,"line_end":36,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186877,"byte_end":186959,"line_start":37,"line_end":37,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":186964,"byte_end":187043,"line_start":38,"line_end":38,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187048,"byte_end":187063,"line_start":39,"line_end":39,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":996},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187708,"byte_end":187719,"line_start":54,"line_end":54,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<StreamFuture<St>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> Option<Pin<&mut St>>","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying stream that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying stream that this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187155,"byte_end":187229,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187234,"byte_end":187265,"line_start":45,"line_end":45,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187270,"byte_end":187273,"line_start":46,"line_end":46,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187278,"byte_end":187351,"line_start":47,"line_end":47,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187356,"byte_end":187411,"line_start":48,"line_end":48,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187416,"byte_end":187419,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187424,"byte_end":187505,"line_start":50,"line_end":50,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187510,"byte_end":187592,"line_start":51,"line_end":51,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187597,"byte_end":187676,"line_start":52,"line_end":52,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187681,"byte_end":187696,"line_start":53,"line_end":53,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":188352,"byte_end":188362,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<StreamFuture<St>>::into_inner","value":"pub fn into_inner(Self) -> Option<St>","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying stream.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187832,"byte_end":187894,"line_start":58,"line_end":58,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187899,"byte_end":187902,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187907,"byte_end":187979,"line_start":60,"line_end":60,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":187984,"byte_end":188055,"line_start":61,"line_end":61,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":188060,"byte_end":188063,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ This method returns an `Option` to account for the fact that `StreamFuture`'s","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":188068,"byte_end":188149,"line_start":63,"line_end":63,"column_start":5,"column_end":86}},{"value":"/ implementation of `Future::poll` consumes the underlying stream during polling","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":188154,"byte_end":188236,"line_start":64,"line_end":64,"column_start":5,"column_end":87}},{"value":"/ in order to return it to the caller of `Future::poll` if the stream yielded","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":188241,"byte_end":188320,"line_start":65,"line_end":65,"column_start":5,"column_end":84}},{"value":"/ an element.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":188325,"byte_end":188340,"line_start":66,"line_end":66,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":6004},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"Inspect","qualname":"::stream::stream::Inspect","value":"Inspect {  }","parent":null,"children":[{"krate":0,"index":6007}],"decl_id":null,"docs":" Stream for the [`inspect`](StreamExt::inspect) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6026},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__Inspect","qualname":"::stream::stream::_::__Inspect","value":"__Inspect {  }","parent":null,"children":[{"krate":0,"index":6030},{"krate":0,"index":6031}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6077},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\map.rs","byte_start":189367,"byte_end":189370,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"Map","qualname":"::stream::stream::map::Map","value":"Map {  }","parent":null,"children":[{"krate":0,"index":6081},{"krate":0,"index":6080}],"decl_id":null,"docs":" Stream for the [`map`](super::StreamExt::map) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\map.rs","byte_start":189307,"byte_end":189355,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\map.rs","byte_start":189292,"byte_end":189306,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6102},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\map.rs","byte_start":189367,"byte_end":189370,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"__Map","qualname":"::stream::stream::map::_::__Map","value":"__Map {  }","parent":null,"children":[{"krate":0,"index":6106},{"krate":0,"index":6107}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6136},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"FlatMap","qualname":"::stream::stream::FlatMap","value":"FlatMap {  }","parent":null,"children":[{"krate":0,"index":6140}],"decl_id":null,"docs":" Stream for the [`flat_map`](StreamExt::flat_map) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6162},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__FlatMap","qualname":"::stream::stream::_::__FlatMap","value":"__FlatMap {  }","parent":null,"children":[{"krate":0,"index":6167},{"krate":0,"index":6168}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6224},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\next.rs","byte_start":191084,"byte_end":191088,"line_start":10,"line_end":10,"column_start":12,"column_end":16},"name":"Next","qualname":"::stream::stream::next::Next","value":"Next {  }","parent":null,"children":[{"krate":0,"index":6227}],"decl_id":null,"docs":" Future for the [`next`](super::StreamExt::next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`next`](super::StreamExt::next) method.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\next.rs","byte_start":190928,"byte_end":190987,"line_start":7,"line_end":7,"column_start":1,"column_end":60}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\next.rs","byte_start":191005,"byte_end":191072,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6232},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\select_next_some.rs","byte_start":192094,"byte_end":192108,"line_start":11,"line_end":11,"column_start":12,"column_end":26},"name":"SelectNextSome","qualname":"::stream::stream::select_next_some::SelectNextSome","value":"SelectNextSome {  }","parent":null,"children":[{"krate":0,"index":6235}],"decl_id":null,"docs":" Future for the [`select_next_some`](super::StreamExt::select_next_some)\n method.\n","sig":null,"attributes":[{"value":"/ Future for the [`select_next_some`](super::StreamExt::select_next_some)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\select_next_some.rs","byte_start":191910,"byte_end":191985,"line_start":7,"line_end":7,"column_start":1,"column_end":76}},{"value":"/ method.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\select_next_some.rs","byte_start":191986,"byte_end":191997,"line_start":8,"line_end":8,"column_start":1,"column_end":12}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\select_next_some.rs","byte_start":192015,"byte_end":192082,"line_start":10,"line_end":10,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":6240},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":193591,"byte_end":193599,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"Peekable","qualname":"::stream::stream::peek::Peekable","value":"Peekable {  }","parent":null,"children":[{"krate":0,"index":6243},{"krate":0,"index":6242}],"decl_id":null,"docs":" A `Stream` that implements a `peek` method.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":193531,"byte_end":193579,"line_start":18,"line_end":18,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":193499,"byte_end":193513,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6261},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":193591,"byte_end":193599,"line_start":19,"line_end":19,"column_start":12,"column_end":20},"name":"__Peekable","qualname":"::stream::stream::peek::_::__Peekable","value":"__Peekable {  }","parent":null,"children":[{"krate":0,"index":6264},{"krate":0,"index":6265}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1104},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":194066,"byte_end":194070,"line_start":37,"line_end":37,"column_start":12,"column_end":16},"name":"peek","qualname":"<Peekable<St>>::peek","value":"pub fn peek(Pin<&mut Self>) -> Peek<, St>","parent":null,"children":[],"decl_id":null,"docs":" Produces a `Peek` future which retrieves a reference to the next item\n in the stream, or `None` if the underlying stream terminates.\n","sig":null,"attributes":[{"value":"/ Produces a `Peek` future which retrieves a reference to the next item","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":193911,"byte_end":193984,"line_start":35,"line_end":35,"column_start":5,"column_end":78}},{"value":"/ in the stream, or `None` if the underlying stream terminates.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":193989,"byte_end":194054,"line_start":36,"line_end":36,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":194395,"byte_end":194404,"line_start":45,"line_end":45,"column_start":12,"column_end":21},"name":"poll_peek","qualname":"<Peekable<St>>::poll_peek","value":"pub fn poll_peek(Pin<&mut Self>, &mut Context) -> Poll<Option<&St::Item>>","parent":null,"children":[],"decl_id":null,"docs":" Peek retrieves a reference to the next item in the stream.","sig":null,"attributes":[{"value":"/ Peek retrieves a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":194157,"byte_end":194219,"line_start":41,"line_end":41,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":194224,"byte_end":194227,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This method polls the underlying stream and return either a reference","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":194232,"byte_end":194305,"line_start":43,"line_end":43,"column_start":5,"column_end":78}},{"value":"/ to the next item if the stream is ready or passes through any errors.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":194310,"byte_end":194383,"line_start":44,"line_end":44,"column_start":5,"column_end":78}}]},{"kind":"Struct","id":{"krate":0,"index":6288},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":196114,"byte_end":196118,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"Peek","qualname":"::stream::stream::peek::Peek","value":"Peek {  }","parent":null,"children":[{"krate":0,"index":6291}],"decl_id":null,"docs":" Future for the [`Peekable::peek()`](self::Peekable::peek) function from [`Peekable`]\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":196054,"byte_end":196102,"line_start":105,"line_end":105,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":196039,"byte_end":196053,"line_start":104,"line_end":104,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6310},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":196114,"byte_end":196118,"line_start":106,"line_end":106,"column_start":12,"column_end":16},"name":"__Peek","qualname":"::stream::stream::peek::_::__Peek","value":"__Peek {  }","parent":null,"children":[{"krate":0,"index":6314},{"krate":0,"index":6315}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6336},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip.rs","byte_start":197370,"byte_end":197374,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"Skip","qualname":"::stream::stream::skip::Skip","value":"Skip {  }","parent":null,"children":[{"krate":0,"index":6339},{"krate":0,"index":6338}],"decl_id":null,"docs":" Stream for the [`skip`](super::StreamExt::skip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip.rs","byte_start":197310,"byte_end":197358,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip.rs","byte_start":197278,"byte_end":197292,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6357},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip.rs","byte_start":197370,"byte_end":197374,"line_start":12,"line_end":12,"column_start":12,"column_end":16},"name":"__Skip","qualname":"::stream::stream::skip::_::__Skip","value":"__Skip {  }","parent":null,"children":[{"krate":0,"index":6360},{"krate":0,"index":6361}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6384},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip_while.rs","byte_start":199220,"byte_end":199229,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"SkipWhile","qualname":"::stream::stream::skip_while::SkipWhile","value":"SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6391},{"krate":0,"index":6388},{"krate":0,"index":6392},{"krate":0,"index":6389},{"krate":0,"index":6390}],"decl_id":null,"docs":" Stream for the [`skip_while`](super::StreamExt::skip_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip_while.rs","byte_start":199160,"byte_end":199208,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip_while.rs","byte_start":199145,"byte_end":199159,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6422},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip_while.rs","byte_start":199220,"byte_end":199229,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__SkipWhile","qualname":"::stream::stream::skip_while::_::__SkipWhile","value":"__SkipWhile {  }","parent":null,"children":[{"krate":0,"index":6427},{"krate":0,"index":6428},{"krate":0,"index":6429}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6459},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take.rs","byte_start":202815,"byte_end":202819,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Take","qualname":"::stream::stream::take::Take","value":"Take {  }","parent":null,"children":[{"krate":0,"index":6462},{"krate":0,"index":6461}],"decl_id":null,"docs":" Stream for the [`take`](super::StreamExt::take) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take.rs","byte_start":202755,"byte_end":202803,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take.rs","byte_start":202723,"byte_end":202737,"line_start":10,"line_end":10,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6480},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take.rs","byte_start":202815,"byte_end":202819,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Take","qualname":"::stream::stream::take::_::__Take","value":"__Take {  }","parent":null,"children":[{"krate":0,"index":6483},{"krate":0,"index":6484}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6507},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_while.rs","byte_start":204854,"byte_end":204863,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"TakeWhile","qualname":"::stream::stream::take_while::TakeWhile","value":"TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6514},{"krate":0,"index":6511},{"krate":0,"index":6515},{"krate":0,"index":6512},{"krate":0,"index":6513}],"decl_id":null,"docs":" Stream for the [`take_while`](super::StreamExt::take_while) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_while.rs","byte_start":204794,"byte_end":204842,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_while.rs","byte_start":204779,"byte_end":204793,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6545},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_while.rs","byte_start":204854,"byte_end":204863,"line_start":13,"line_end":13,"column_start":12,"column_end":21},"name":"__TakeWhile","qualname":"::stream::stream::take_while::_::__TakeWhile","value":"__TakeWhile {  }","parent":null,"children":[{"krate":0,"index":6550},{"krate":0,"index":6551},{"krate":0,"index":6552}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6582},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":208417,"byte_end":208426,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"TakeUntil","qualname":"::stream::stream::take_until::TakeUntil","value":"TakeUntil {  }","parent":null,"children":[{"krate":0,"index":6587},{"krate":0,"index":6588},{"krate":0,"index":6585},{"krate":0,"index":6586}],"decl_id":null,"docs":" Stream for the [`take_until`](super::StreamExt::take_until) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":208357,"byte_end":208405,"line_start":14,"line_end":14,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":208342,"byte_end":208356,"line_start":13,"line_end":13,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6613},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":208417,"byte_end":208426,"line_start":15,"line_end":15,"column_start":12,"column_end":21},"name":"__TakeUntil","qualname":"::stream::stream::take_until::_::__TakeUntil","value":"__TakeUntil {  }","parent":null,"children":[{"krate":0,"index":6617},{"krate":0,"index":6618},{"krate":0,"index":6619}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1258},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":209783,"byte_end":209794,"line_start":62,"line_end":62,"column_start":12,"column_end":23},"name":"take_future","qualname":"<TakeUntil<St, Fut>>::take_future","value":"pub fn take_future(&mut Self) -> Option<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Extract the stopping future out of the combinator.\n The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.\n Taking out the future means the combinator will be yielding\n elements from the wrapped stream without ever stopping it.\n","sig":null,"attributes":[{"value":"/ Extract the stopping future out of the combinator.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":209483,"byte_end":209537,"line_start":58,"line_end":58,"column_start":5,"column_end":59}},{"value":"/ The future is returned only if it isn't resolved yet, ie. if the stream isn't stopped yet.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":209542,"byte_end":209636,"line_start":59,"line_end":59,"column_start":5,"column_end":99}},{"value":"/ Taking out the future means the combinator will be yielding","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":209641,"byte_end":209704,"line_start":60,"line_end":60,"column_start":5,"column_end":68}},{"value":"/ elements from the wrapped stream without ever stopping it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":209709,"byte_end":209771,"line_start":61,"line_end":61,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1259},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":211078,"byte_end":211089,"line_start":106,"line_end":106,"column_start":12,"column_end":23},"name":"take_result","qualname":"<TakeUntil<St, Fut>>::take_result","value":"pub fn take_result(&mut Self) -> Option<Fut::Output>","parent":null,"children":[],"decl_id":null,"docs":" Once the stopping future is resolved, this method can be used\n to extract the value returned by the stopping future.","sig":null,"attributes":[{"value":"/ Once the stopping future is resolved, this method can be used","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":209931,"byte_end":209996,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ to extract the value returned by the stopping future.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210001,"byte_end":210058,"line_start":71,"line_end":71,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210063,"byte_end":210066,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ This may be used to retrieve arbitrary data from the stopping","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210071,"byte_end":210136,"line_start":73,"line_end":73,"column_start":5,"column_end":70}},{"value":"/ future, for example a reason why the stream was stopped.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210141,"byte_end":210201,"line_start":74,"line_end":74,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210206,"byte_end":210209,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ This method will return `None` if the future isn't resovled yet,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210214,"byte_end":210282,"line_start":76,"line_end":76,"column_start":5,"column_end":73}},{"value":"/ or if the result was already taken out.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210287,"byte_end":210330,"line_start":77,"line_end":77,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210335,"byte_end":210338,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210343,"byte_end":210357,"line_start":79,"line_end":79,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210362,"byte_end":210365,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210370,"byte_end":210377,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210382,"byte_end":210423,"line_start":82,"line_end":82,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210428,"byte_end":210452,"line_start":83,"line_end":83,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210457,"byte_end":210500,"line_start":84,"line_end":84,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210505,"byte_end":210533,"line_start":85,"line_end":85,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210538,"byte_end":210541,"line_start":86,"line_end":86,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210546,"byte_end":210584,"line_start":87,"line_end":87,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210589,"byte_end":210592,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210597,"byte_end":210615,"line_start":89,"line_end":89,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210620,"byte_end":210662,"line_start":90,"line_end":90,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210667,"byte_end":210682,"line_start":91,"line_end":91,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210687,"byte_end":210706,"line_start":92,"line_end":92,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210711,"byte_end":210736,"line_start":93,"line_end":93,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210741,"byte_end":210757,"line_start":94,"line_end":94,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(\"reason\")","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210762,"byte_end":210795,"line_start":95,"line_end":95,"column_start":5,"column_end":38}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210800,"byte_end":210809,"line_start":96,"line_end":96,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210814,"byte_end":210821,"line_start":97,"line_end":97,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210826,"byte_end":210829,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210834,"byte_end":210883,"line_start":99,"line_end":99,"column_start":5,"column_end":54}},{"value":"/ let _ = stream.by_ref().collect::<Vec<_>>().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210888,"byte_end":210942,"line_start":100,"line_end":100,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210947,"byte_end":210950,"line_start":101,"line_end":101,"column_start":5,"column_end":8}},{"value":"/ let result = stream.take_result().unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":210955,"byte_end":211002,"line_start":102,"line_end":102,"column_start":5,"column_end":52}},{"value":"/ assert_eq!(result, \"reason\");","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":211007,"byte_end":211040,"line_start":103,"line_end":103,"column_start":5,"column_end":38}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":211045,"byte_end":211054,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":211059,"byte_end":211066,"line_start":105,"line_end":105,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1260},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":211265,"byte_end":211275,"line_start":112,"line_end":112,"column_start":12,"column_end":22},"name":"is_stopped","qualname":"<TakeUntil<St, Fut>>::is_stopped","value":"pub fn is_stopped(&Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the stream was stopped yet by the stopping future\n being resolved.\n","sig":null,"attributes":[{"value":"/ Whether the stream was stopped yet by the stopping future","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":211168,"byte_end":211229,"line_start":110,"line_end":110,"column_start":5,"column_end":66}},{"value":"/ being resolved.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":211234,"byte_end":211253,"line_start":111,"line_end":111,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":6644},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\then.rs","byte_start":213165,"byte_end":213169,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"Then","qualname":"::stream::stream::then::Then","value":"Then {  }","parent":null,"children":[{"krate":0,"index":6649},{"krate":0,"index":6650},{"krate":0,"index":6648}],"decl_id":null,"docs":" Stream for the [`then`](super::StreamExt::then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\then.rs","byte_start":213105,"byte_end":213153,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\then.rs","byte_start":213090,"byte_end":213104,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6676},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\then.rs","byte_start":213165,"byte_end":213169,"line_start":13,"line_end":13,"column_start":12,"column_end":16},"name":"__Then","qualname":"::stream::stream::then::_::__Then","value":"__Then {  }","parent":null,"children":[{"krate":0,"index":6681},{"krate":0,"index":6682},{"krate":0,"index":6683}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6713},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":215811,"byte_end":215814,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"Zip","qualname":"::stream::stream::zip::Zip","value":"Zip {  }","parent":null,"children":[{"krate":0,"index":6718},{"krate":0,"index":6719},{"krate":0,"index":6716},{"krate":0,"index":6717}],"decl_id":null,"docs":" Stream for the [`zip`](super::StreamExt::zip) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":215751,"byte_end":215799,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":215719,"byte_end":215733,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6744},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":215811,"byte_end":215814,"line_start":12,"line_end":12,"column_start":12,"column_end":15},"name":"__Zip","qualname":"::stream::stream::zip::_::__Zip","value":"__Zip {  }","parent":null,"children":[{"krate":0,"index":6748},{"krate":0,"index":6749},{"krate":0,"index":6750}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1323},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216367,"byte_end":216374,"line_start":33,"line_end":33,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Zip<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216259,"byte_end":216333,"line_start":31,"line_end":31,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216338,"byte_end":216355,"line_start":32,"line_end":32,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1324},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216730,"byte_end":216737,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Zip<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216468,"byte_end":216536,"line_start":37,"line_end":37,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216541,"byte_end":216572,"line_start":38,"line_end":38,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216577,"byte_end":216580,"line_start":39,"line_end":39,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216585,"byte_end":216658,"line_start":40,"line_end":40,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216663,"byte_end":216718,"line_start":41,"line_end":41,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1325},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":217112,"byte_end":217123,"line_start":51,"line_end":51,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Zip<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216843,"byte_end":216918,"line_start":46,"line_end":46,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216923,"byte_end":216954,"line_start":47,"line_end":47,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216959,"byte_end":216962,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216967,"byte_end":217040,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":217045,"byte_end":217100,"line_start":50,"line_end":50,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":1326},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":217529,"byte_end":217539,"line_start":60,"line_end":60,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Zip<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":217293,"byte_end":217356,"line_start":56,"line_end":56,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":217361,"byte_end":217364,"line_start":57,"line_end":57,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":217369,"byte_end":217441,"line_start":58,"line_end":58,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":217446,"byte_end":217517,"line_start":59,"line_end":59,"column_start":5,"column_end":76}}]},{"kind":"Struct","id":{"krate":0,"index":6775},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":220352,"byte_end":220356,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"Scan","qualname":"::stream::stream::scan::Scan","value":"Scan {  }","parent":null,"children":[{"krate":0,"index":6781},{"krate":0,"index":6780},{"krate":0,"index":6782}],"decl_id":null,"docs":" Stream for the [`scan`](super::StreamExt::scan) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":220292,"byte_end":220340,"line_start":17,"line_end":17,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":220277,"byte_end":220291,"line_start":16,"line_end":16,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6811},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":220352,"byte_end":220356,"line_start":18,"line_end":18,"column_start":12,"column_end":16},"name":"__Scan","qualname":"::stream::stream::scan::_::__Scan","value":"__Scan {  }","parent":null,"children":[{"krate":0,"index":6817},{"krate":0,"index":6818},{"krate":0,"index":6819}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1394},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":122726,"byte_end":122735,"line_start":202,"line_end":202,"column_start":11,"column_end":20},"name":"StreamExt","qualname":"::stream::stream::StreamExt","value":"StreamExt: Stream","parent":null,"children":[{"krate":0,"index":1395},{"krate":0,"index":1396},{"krate":0,"index":1397},{"krate":0,"index":1400},{"krate":0,"index":1401},{"krate":0,"index":1404},{"krate":0,"index":1408},{"krate":0,"index":1411},{"krate":0,"index":1413},{"krate":0,"index":1414},{"krate":0,"index":1418},{"krate":0,"index":1419},{"krate":0,"index":1422},{"krate":0,"index":1427},{"krate":0,"index":1430},{"krate":0,"index":1433},{"krate":0,"index":1435},{"krate":0,"index":1438},{"krate":0,"index":1439},{"krate":0,"index":1440},{"krate":0,"index":1441},{"krate":0,"index":1442},{"krate":0,"index":1444},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1449},{"krate":0,"index":1451},{"krate":0,"index":1453},{"krate":0,"index":1454}],"decl_id":null,"docs":" An extension trait for `Stream`s that provides a variety of convenient\n combinator functions.\n","sig":null,"attributes":[{"value":"/ An extension trait for `Stream`s that provides a variety of convenient","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":122615,"byte_end":122689,"line_start":200,"line_end":200,"column_start":1,"column_end":75}},{"value":"/ combinator functions.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":122690,"byte_end":122715,"line_start":201,"line_end":201,"column_start":1,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":1395},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123645,"byte_end":123649,"line_start":226,"line_end":226,"column_start":8,"column_end":12},"name":"next","qualname":"::stream::stream::StreamExt::next","value":"pub fn next(&mut Self) -> Next<, Self> where Self: Unpin","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Creates a future that resolves to the next item in the stream.","sig":null,"attributes":[{"value":"/ Creates a future that resolves to the next item in the stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":122750,"byte_end":122816,"line_start":203,"line_end":203,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":122821,"byte_end":122824,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ Note that because `next` doesn't take ownership over the stream,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":122829,"byte_end":122897,"line_start":205,"line_end":205,"column_start":5,"column_end":73}},{"value":"/ the [`Stream`] type must be [`Unpin`]. If you want to use `next` with a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":122902,"byte_end":122977,"line_start":206,"line_end":206,"column_start":5,"column_end":80}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":122982,"byte_end":123057,"line_start":207,"line_end":207,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123062,"byte_end":123116,"line_start":208,"line_end":208,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123121,"byte_end":123196,"line_start":209,"line_end":209,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123201,"byte_end":123211,"line_start":210,"line_end":210,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123216,"byte_end":123219,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123224,"byte_end":123238,"line_start":212,"line_end":212,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123243,"byte_end":123246,"line_start":213,"line_end":213,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123251,"byte_end":123258,"line_start":214,"line_end":214,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123263,"byte_end":123304,"line_start":215,"line_end":215,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123309,"byte_end":123352,"line_start":216,"line_end":216,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123357,"byte_end":123360,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123365,"byte_end":123406,"line_start":218,"line_end":218,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123411,"byte_end":123414,"line_start":219,"line_end":219,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some(1));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123419,"byte_end":123464,"line_start":220,"line_end":220,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(2));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123469,"byte_end":123514,"line_start":221,"line_end":221,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, Some(3));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123519,"byte_end":123564,"line_start":222,"line_end":222,"column_start":5,"column_end":50}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123569,"byte_end":123611,"line_start":223,"line_end":223,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123616,"byte_end":123625,"line_start":224,"line_end":224,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123630,"byte_end":123637,"line_start":225,"line_end":225,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1396},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124888,"byte_end":124899,"line_start":261,"line_end":261,"column_start":8,"column_end":19},"name":"into_future","qualname":"::stream::stream::StreamExt::into_future","value":"pub fn into_future(Self) -> StreamFuture<Self> where Self: Sized + Unpin","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Converts this stream into a future of `(next_item, tail_of_stream)`.\n If the stream terminates, then the next item is [`None`].","sig":null,"attributes":[{"value":"/ Converts this stream into a future of `(next_item, tail_of_stream)`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123791,"byte_end":123863,"line_start":233,"line_end":233,"column_start":5,"column_end":77}},{"value":"/ If the stream terminates, then the next item is [`None`].","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123868,"byte_end":123929,"line_start":234,"line_end":234,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123934,"byte_end":123937,"line_start":235,"line_end":235,"column_start":5,"column_end":8}},{"value":"/ The returned future can be used to compose streams and futures together","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":123942,"byte_end":124017,"line_start":236,"line_end":236,"column_start":5,"column_end":80}},{"value":"/ by placing everything into the \"world of futures\".","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124022,"byte_end":124076,"line_start":237,"line_end":237,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124081,"byte_end":124084,"line_start":238,"line_end":238,"column_start":5,"column_end":8}},{"value":"/ Note that because `into_future` moves the stream, the [`Stream`] type","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124089,"byte_end":124162,"line_start":239,"line_end":239,"column_start":5,"column_end":78}},{"value":"/ must be [`Unpin`]. If you want to use `into_future` with a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124167,"byte_end":124229,"line_start":240,"line_end":240,"column_start":5,"column_end":67}},{"value":"/ [`!Unpin`](Unpin) stream, you'll first have to pin the stream. This can","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124234,"byte_end":124309,"line_start":241,"line_end":241,"column_start":5,"column_end":80}},{"value":"/ be done by boxing the stream using [`Box::pin`] or","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124314,"byte_end":124368,"line_start":242,"line_end":242,"column_start":5,"column_end":59}},{"value":"/ pinning it to the stack using the `pin_mut!` macro from the `pin_utils`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124373,"byte_end":124448,"line_start":243,"line_end":243,"column_start":5,"column_end":80}},{"value":"/ crate.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124453,"byte_end":124463,"line_start":244,"line_end":244,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124468,"byte_end":124471,"line_start":245,"line_end":245,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124476,"byte_end":124490,"line_start":246,"line_end":246,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124495,"byte_end":124498,"line_start":247,"line_end":247,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124503,"byte_end":124510,"line_start":248,"line_end":248,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124515,"byte_end":124556,"line_start":249,"line_end":249,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124561,"byte_end":124604,"line_start":250,"line_end":250,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124609,"byte_end":124612,"line_start":251,"line_end":251,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124617,"byte_end":124654,"line_start":252,"line_end":252,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124659,"byte_end":124662,"line_start":253,"line_end":253,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124667,"byte_end":124719,"line_start":254,"line_end":254,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(1), item);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124724,"byte_end":124754,"line_start":255,"line_end":255,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124759,"byte_end":124762,"line_start":256,"line_end":256,"column_start":5,"column_end":8}},{"value":"/ let (item, stream) = stream.into_future().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124767,"byte_end":124819,"line_start":257,"line_end":257,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(Some(2), item);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124824,"byte_end":124854,"line_start":258,"line_end":258,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124859,"byte_end":124868,"line_start":259,"line_end":259,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":124873,"byte_end":124880,"line_start":260,"line_end":260,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1397},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125900,"byte_end":125903,"line_start":291,"line_end":291,"column_start":8,"column_end":11},"name":"map","qualname":"::stream::stream::StreamExt::map","value":"pub fn map<T, F>(Self, F) -> Map<Self, F> where F: FnMut(Self::Item) -> T,\nSelf: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Maps this stream's items to a different type, returning a new stream of\n the resulting type.","sig":null,"attributes":[{"value":"/ Maps this stream's items to a different type, returning a new stream of","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125064,"byte_end":125139,"line_start":268,"line_end":268,"column_start":5,"column_end":80}},{"value":"/ the resulting type.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125144,"byte_end":125167,"line_start":269,"line_end":269,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125172,"byte_end":125175,"line_start":270,"line_end":270,"column_start":5,"column_end":8}},{"value":"/ The provided closure is executed over all elements of this stream as","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125180,"byte_end":125252,"line_start":271,"line_end":271,"column_start":5,"column_end":77}},{"value":"/ they are made available. It is executed inline with calls to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125257,"byte_end":125321,"line_start":272,"line_end":272,"column_start":5,"column_end":69}},{"value":"/ [`poll_next`](Stream::poll_next).","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125326,"byte_end":125363,"line_start":273,"line_end":273,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125368,"byte_end":125371,"line_start":274,"line_end":274,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125376,"byte_end":125452,"line_start":275,"line_end":275,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `map` methods in the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125457,"byte_end":125528,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125533,"byte_end":125554,"line_start":277,"line_end":277,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125559,"byte_end":125562,"line_start":278,"line_end":278,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125567,"byte_end":125581,"line_start":279,"line_end":279,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125586,"byte_end":125589,"line_start":280,"line_end":280,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125594,"byte_end":125601,"line_start":281,"line_end":281,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125606,"byte_end":125647,"line_start":282,"line_end":282,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125652,"byte_end":125695,"line_start":283,"line_end":283,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125700,"byte_end":125703,"line_start":284,"line_end":284,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125708,"byte_end":125745,"line_start":285,"line_end":285,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.map(|x| x + 3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125750,"byte_end":125789,"line_start":286,"line_end":286,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125794,"byte_end":125797,"line_start":287,"line_end":287,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125802,"byte_end":125866,"line_start":288,"line_end":288,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125871,"byte_end":125880,"line_start":289,"line_end":289,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":125885,"byte_end":125892,"line_start":290,"line_end":290,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1400},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127463,"byte_end":127472,"line_start":337,"line_end":337,"column_start":8,"column_end":17},"name":"enumerate","qualname":"::stream::stream::StreamExt::enumerate","value":"pub fn enumerate(Self) -> Enumerate<Self> where Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Creates a stream which gives the current iteration count as well as\n the next value.","sig":null,"attributes":[{"value":"/ Creates a stream which gives the current iteration count as well as","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126070,"byte_end":126141,"line_start":299,"line_end":299,"column_start":5,"column_end":76}},{"value":"/ the next value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126146,"byte_end":126165,"line_start":300,"line_end":300,"column_start":5,"column_end":24}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126170,"byte_end":126173,"line_start":301,"line_end":301,"column_start":5,"column_end":8}},{"value":"/ The stream returned yields pairs `(i, val)`, where `i` is the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126178,"byte_end":126243,"line_start":302,"line_end":302,"column_start":5,"column_end":70}},{"value":"/ current index of iteration and `val` is the value returned by the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126248,"byte_end":126317,"line_start":303,"line_end":303,"column_start":5,"column_end":74}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126322,"byte_end":126333,"line_start":304,"line_end":304,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126338,"byte_end":126341,"line_start":305,"line_end":305,"column_start":5,"column_end":8}},{"value":"/ `enumerate()` keeps its count as a [`usize`]. If you want to count by a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126346,"byte_end":126421,"line_start":306,"line_end":306,"column_start":5,"column_end":80}},{"value":"/ different sized integer, the [`zip`](StreamExt::zip) function provides similar","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126426,"byte_end":126508,"line_start":307,"line_end":307,"column_start":5,"column_end":87}},{"value":"/ functionality.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126513,"byte_end":126531,"line_start":308,"line_end":308,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126536,"byte_end":126539,"line_start":309,"line_end":309,"column_start":5,"column_end":8}},{"value":"/ # Overflow Behavior","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126544,"byte_end":126567,"line_start":310,"line_end":310,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126572,"byte_end":126575,"line_start":311,"line_end":311,"column_start":5,"column_end":8}},{"value":"/ The method does no guarding against overflows, so enumerating more than","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126580,"byte_end":126655,"line_start":312,"line_end":312,"column_start":5,"column_end":80}},{"value":"/ [`prim@usize::max_value()`] elements either produces the wrong result or panics. If","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126660,"byte_end":126747,"line_start":313,"line_end":313,"column_start":5,"column_end":92}},{"value":"/ debug assertions are enabled, a panic is guaranteed.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126752,"byte_end":126808,"line_start":314,"line_end":314,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126813,"byte_end":126816,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126821,"byte_end":126833,"line_start":316,"line_end":316,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126838,"byte_end":126841,"line_start":317,"line_end":317,"column_start":5,"column_end":8}},{"value":"/ The returned stream might panic if the to-be-returned index would","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126846,"byte_end":126915,"line_start":318,"line_end":318,"column_start":5,"column_end":74}},{"value":"/ overflow a [`usize`].","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126920,"byte_end":126945,"line_start":319,"line_end":319,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126950,"byte_end":126953,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126958,"byte_end":126972,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126977,"byte_end":126980,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126985,"byte_end":126992,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":126997,"byte_end":127038,"line_start":324,"line_end":324,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127043,"byte_end":127086,"line_start":325,"line_end":325,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127091,"byte_end":127094,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec!['a', 'b', 'c']);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127099,"byte_end":127150,"line_start":327,"line_end":327,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127155,"byte_end":127158,"line_start":328,"line_end":328,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream.enumerate();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127163,"byte_end":127203,"line_start":329,"line_end":329,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127208,"byte_end":127211,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.next().await, Some((0, 'a')));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127216,"byte_end":127268,"line_start":331,"line_end":331,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((1, 'b')));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127273,"byte_end":127325,"line_start":332,"line_end":332,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, Some((2, 'c')));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127330,"byte_end":127382,"line_start":333,"line_end":333,"column_start":5,"column_end":57}},{"value":"/ assert_eq!(stream.next().await, None);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127387,"byte_end":127429,"line_start":334,"line_end":334,"column_start":5,"column_end":47}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127434,"byte_end":127443,"line_start":335,"line_end":335,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127448,"byte_end":127455,"line_start":336,"line_end":336,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128701,"byte_end":128707,"line_start":370,"line_end":370,"column_start":8,"column_end":14},"name":"filter","qualname":"::stream::stream::StreamExt::filter","value":"pub fn filter<Fut, F>(Self, F) -> Filter<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream according to the provided\n asynchronous predicate.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream according to the provided","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127616,"byte_end":127688,"line_start":344,"line_end":344,"column_start":5,"column_end":77}},{"value":"/ asynchronous predicate.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127693,"byte_end":127720,"line_start":345,"line_end":345,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127725,"byte_end":127728,"line_start":346,"line_end":346,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127733,"byte_end":127808,"line_start":347,"line_end":347,"column_start":5,"column_end":80}},{"value":"/ will be run against them. If the predicate returns a `Future` which","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127813,"byte_end":127884,"line_start":348,"line_end":348,"column_start":5,"column_end":76}},{"value":"/ resolves to `true`, then the stream will yield the value, but if the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127889,"byte_end":127961,"line_start":349,"line_end":349,"column_start":5,"column_end":77}},{"value":"/ predicate returns a `Future` which resolves to `false`, then the value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":127966,"byte_end":128040,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ will be discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128045,"byte_end":128103,"line_start":351,"line_end":351,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128108,"byte_end":128111,"line_start":352,"line_end":352,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128116,"byte_end":128192,"line_start":353,"line_end":353,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128197,"byte_end":128271,"line_start":354,"line_end":354,"column_start":5,"column_end":79}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128276,"byte_end":128297,"line_start":355,"line_end":355,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128302,"byte_end":128305,"line_start":356,"line_end":356,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128310,"byte_end":128324,"line_start":357,"line_end":357,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128329,"byte_end":128332,"line_start":358,"line_end":358,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128337,"byte_end":128344,"line_start":359,"line_end":359,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128349,"byte_end":128390,"line_start":360,"line_end":360,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128395,"byte_end":128419,"line_start":361,"line_end":361,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128424,"byte_end":128467,"line_start":362,"line_end":362,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128472,"byte_end":128475,"line_start":363,"line_end":363,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128480,"byte_end":128518,"line_start":364,"line_end":364,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter(|x| future::ready(x % 2 == 0));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128523,"byte_end":128584,"line_start":365,"line_end":365,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128589,"byte_end":128592,"line_start":366,"line_end":366,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![2, 4, 6, 8, 10], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128597,"byte_end":128667,"line_start":367,"line_end":367,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128672,"byte_end":128681,"line_start":368,"line_end":368,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128686,"byte_end":128693,"line_start":369,"line_end":369,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1404},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130032,"byte_end":130042,"line_start":404,"line_end":404,"column_start":8,"column_end":18},"name":"filter_map","qualname":"::stream::stream::StreamExt::filter_map","value":"pub fn filter_map<Fut, T, F>(Self, F) -> FilterMap<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = Option<T>>, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Filters the values produced by this stream while simultaneously mapping\n them to a different type according to the provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Filters the values produced by this stream while simultaneously mapping","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":128935,"byte_end":129010,"line_start":379,"line_end":379,"column_start":5,"column_end":80}},{"value":"/ them to a different type according to the provided asynchronous closure.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129015,"byte_end":129091,"line_start":380,"line_end":380,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129096,"byte_end":129099,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129104,"byte_end":129179,"line_start":382,"line_end":382,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129184,"byte_end":129259,"line_start":383,"line_end":383,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129264,"byte_end":129340,"line_start":384,"line_end":384,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129345,"byte_end":129410,"line_start":385,"line_end":385,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129415,"byte_end":129418,"line_start":386,"line_end":386,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129423,"byte_end":129499,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129504,"byte_end":129578,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129583,"byte_end":129608,"line_start":389,"line_end":389,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129613,"byte_end":129616,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129621,"byte_end":129635,"line_start":391,"line_end":391,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129640,"byte_end":129647,"line_start":392,"line_end":392,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129652,"byte_end":129693,"line_start":393,"line_end":393,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129698,"byte_end":129741,"line_start":394,"line_end":394,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129746,"byte_end":129749,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129754,"byte_end":129792,"line_start":396,"line_end":396,"column_start":5,"column_end":43}},{"value":"/ let evens = stream.filter_map(|x| async move {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129797,"byte_end":129847,"line_start":397,"line_end":397,"column_start":5,"column_end":55}},{"value":"/     if x % 2 == 0 { Some(x + 1) } else { None }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129852,"byte_end":129903,"line_start":398,"line_end":398,"column_start":5,"column_end":56}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129908,"byte_end":129915,"line_start":399,"line_end":399,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129920,"byte_end":129923,"line_start":400,"line_end":400,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![3, 5, 7, 9, 11], evens.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":129928,"byte_end":129998,"line_start":401,"line_end":401,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130003,"byte_end":130012,"line_start":402,"line_end":402,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130017,"byte_end":130024,"line_start":403,"line_end":403,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1408},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131071,"byte_end":131075,"line_start":435,"line_end":435,"column_start":8,"column_end":12},"name":"then","qualname":"::stream::stream::StreamExt::then","value":"pub fn then<Fut, F>(Self, F) -> Then<Self, Fut, F> where F: FnMut(Self::Item)\n-> Fut, Fut: Future, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Computes from this stream's items new items of a different type using\n an asynchronous closure.","sig":null,"attributes":[{"value":"/ Computes from this stream's items new items of a different type using","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130274,"byte_end":130347,"line_start":413,"line_end":413,"column_start":5,"column_end":78}},{"value":"/ an asynchronous closure.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130352,"byte_end":130380,"line_start":414,"line_end":414,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130385,"byte_end":130388,"line_start":415,"line_end":415,"column_start":5,"column_end":8}},{"value":"/ The provided closure `f` will be called with an `Item` once a value is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130393,"byte_end":130467,"line_start":416,"line_end":416,"column_start":5,"column_end":79}},{"value":"/ ready, it returns a future which will then be run to completion","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130472,"byte_end":130539,"line_start":417,"line_end":417,"column_start":5,"column_end":72}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130544,"byte_end":130589,"line_start":418,"line_end":418,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130594,"byte_end":130597,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130602,"byte_end":130678,"line_start":420,"line_end":420,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130683,"byte_end":130709,"line_start":421,"line_end":421,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130714,"byte_end":130717,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130722,"byte_end":130736,"line_start":423,"line_end":423,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130741,"byte_end":130744,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130749,"byte_end":130756,"line_start":425,"line_end":425,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130761,"byte_end":130802,"line_start":426,"line_end":426,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130807,"byte_end":130850,"line_start":427,"line_end":427,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130855,"byte_end":130858,"line_start":428,"line_end":428,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130863,"byte_end":130900,"line_start":429,"line_end":429,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.then(|x| async move { x + 3 });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130905,"byte_end":130960,"line_start":430,"line_end":430,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130965,"byte_end":130968,"line_start":431,"line_end":431,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":130973,"byte_end":131037,"line_start":432,"line_end":432,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131042,"byte_end":131051,"line_start":433,"line_end":433,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131056,"byte_end":131063,"line_start":434,"line_end":434,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1411},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132009,"byte_end":132016,"line_start":469,"line_end":469,"column_start":8,"column_end":15},"name":"collect","qualname":"::stream::stream::StreamExt::collect","value":"pub fn collect<C: Default + Extend<Self::Item>>(Self) -> Collect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Transforms a stream into a collection, returning a\n future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Transforms a stream into a collection, returning a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131284,"byte_end":131338,"line_start":444,"line_end":444,"column_start":5,"column_end":59}},{"value":"/ future representing the result of that computation.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131343,"byte_end":131398,"line_start":445,"line_end":445,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131403,"byte_end":131406,"line_start":446,"line_end":446,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131411,"byte_end":131479,"line_start":447,"line_end":447,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131484,"byte_end":131487,"line_start":448,"line_end":448,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131492,"byte_end":131506,"line_start":449,"line_end":449,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131511,"byte_end":131514,"line_start":450,"line_end":450,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131519,"byte_end":131526,"line_start":451,"line_end":451,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131531,"byte_end":131572,"line_start":452,"line_end":452,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131577,"byte_end":131608,"line_start":453,"line_end":453,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131613,"byte_end":131648,"line_start":454,"line_end":454,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131653,"byte_end":131673,"line_start":455,"line_end":455,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131678,"byte_end":131681,"line_start":456,"line_end":456,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131686,"byte_end":131723,"line_start":457,"line_end":457,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131728,"byte_end":131731,"line_start":458,"line_end":458,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131736,"byte_end":131763,"line_start":459,"line_end":459,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131768,"byte_end":131792,"line_start":460,"line_end":460,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(i).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131797,"byte_end":131839,"line_start":461,"line_end":461,"column_start":5,"column_end":47}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131844,"byte_end":131853,"line_start":462,"line_end":462,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131858,"byte_end":131865,"line_start":463,"line_end":463,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131870,"byte_end":131873,"line_start":464,"line_end":464,"column_start":5,"column_end":8}},{"value":"/ let output = rx.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131878,"byte_end":131926,"line_start":465,"line_end":465,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4, 5]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131931,"byte_end":131975,"line_start":466,"line_end":466,"column_start":5,"column_end":49}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131980,"byte_end":131989,"line_start":467,"line_end":467,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":131994,"byte_end":132001,"line_start":468,"line_end":468,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1413},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133209,"byte_end":133215,"line_start":508,"line_end":508,"column_start":8,"column_end":14},"name":"concat","qualname":"::stream::stream::StreamExt::concat","value":"pub fn concat(Self) -> Concat<Self> where Self: Sized,\nSelf::Item: Extend<<<Self as Stream>::Item as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Concatenate all items of a stream into a single extendable\n destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Concatenate all items of a stream into a single extendable","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132174,"byte_end":132236,"line_start":476,"line_end":476,"column_start":5,"column_end":67}},{"value":"/ destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132241,"byte_end":132305,"line_start":477,"line_end":477,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132310,"byte_end":132313,"line_start":478,"line_end":478,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132318,"byte_end":132382,"line_start":479,"line_end":479,"column_start":5,"column_end":69}},{"value":"/ of all the subsequent results of the stream. If the stream is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132387,"byte_end":132452,"line_start":480,"line_end":480,"column_start":5,"column_end":70}},{"value":"/ empty, the default value will be returned.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132457,"byte_end":132503,"line_start":481,"line_end":481,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132508,"byte_end":132511,"line_start":482,"line_end":482,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132516,"byte_end":132565,"line_start":483,"line_end":483,"column_start":5,"column_end":54}},{"value":"/ [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132570,"byte_end":132610,"line_start":484,"line_end":484,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132615,"byte_end":132618,"line_start":485,"line_end":485,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132623,"byte_end":132637,"line_start":486,"line_end":486,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132642,"byte_end":132645,"line_start":487,"line_end":487,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132650,"byte_end":132657,"line_start":488,"line_end":488,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132662,"byte_end":132703,"line_start":489,"line_end":489,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132708,"byte_end":132739,"line_start":490,"line_end":490,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132744,"byte_end":132779,"line_start":491,"line_end":491,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132784,"byte_end":132804,"line_start":492,"line_end":492,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132809,"byte_end":132812,"line_start":493,"line_end":493,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132817,"byte_end":132854,"line_start":494,"line_end":494,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132859,"byte_end":132862,"line_start":495,"line_end":495,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132867,"byte_end":132894,"line_start":496,"line_end":496,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132899,"byte_end":132930,"line_start":497,"line_end":497,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132935,"byte_end":132961,"line_start":498,"line_end":498,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(vec![n + 1, n + 2, n + 3]).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":132966,"byte_end":133032,"line_start":499,"line_end":499,"column_start":5,"column_end":71}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133037,"byte_end":133046,"line_start":500,"line_end":500,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133051,"byte_end":133058,"line_start":501,"line_end":501,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133063,"byte_end":133066,"line_start":502,"line_end":502,"column_start":5,"column_end":8}},{"value":"/ let result = rx.concat().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133071,"byte_end":133106,"line_start":503,"line_end":503,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133111,"byte_end":133114,"line_start":504,"line_end":504,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, vec![7, 8, 9, 4, 5, 6, 1, 2, 3]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133119,"byte_end":133175,"line_start":505,"line_end":505,"column_start":5,"column_end":61}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133180,"byte_end":133189,"line_start":506,"line_end":506,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133194,"byte_end":133201,"line_start":507,"line_end":507,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1414},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134260,"byte_end":134264,"line_start":536,"line_end":536,"column_start":8,"column_end":12},"name":"fold","qualname":"::stream::stream::StreamExt::fold","value":"pub fn fold<T, Fut, F>(Self, T, F) -> Fold<Self, Fut, T, F> where\nF: FnMut(T, Self::Item) -> Fut, Fut: Future<Output = T>, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Execute an accumulating asynchronous computation over a stream,\n collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Execute an accumulating asynchronous computation over a stream,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133445,"byte_end":133512,"line_start":516,"line_end":516,"column_start":5,"column_end":72}},{"value":"/ collecting all the values into one final result.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133517,"byte_end":133569,"line_start":517,"line_end":517,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133574,"byte_end":133577,"line_start":518,"line_end":518,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133582,"byte_end":133652,"line_start":519,"line_end":519,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133657,"byte_end":133733,"line_start":520,"line_end":520,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133738,"byte_end":133814,"line_start":521,"line_end":521,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133819,"byte_end":133889,"line_start":522,"line_end":522,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133894,"byte_end":133920,"line_start":523,"line_end":523,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133925,"byte_end":133928,"line_start":524,"line_end":524,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133933,"byte_end":133947,"line_start":525,"line_end":525,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133952,"byte_end":133955,"line_start":526,"line_end":526,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133960,"byte_end":133967,"line_start":527,"line_end":527,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":133972,"byte_end":134013,"line_start":528,"line_end":528,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134018,"byte_end":134061,"line_start":529,"line_end":529,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134066,"byte_end":134069,"line_start":530,"line_end":530,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(0..6);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134074,"byte_end":134117,"line_start":531,"line_end":531,"column_start":5,"column_end":48}},{"value":"/ let sum = number_stream.fold(0, |acc, x| async move { acc + x });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134122,"byte_end":134191,"line_start":532,"line_end":532,"column_start":5,"column_end":74}},{"value":"/ assert_eq!(sum.await, 15);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134196,"byte_end":134226,"line_start":533,"line_end":533,"column_start":5,"column_end":35}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134231,"byte_end":134240,"line_start":534,"line_end":534,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134245,"byte_end":134252,"line_start":535,"line_end":535,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1418},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135458,"byte_end":135465,"line_start":576,"line_end":576,"column_start":8,"column_end":15},"name":"flatten","qualname":"::stream::stream::StreamExt::flatten","value":"pub fn flatten(Self) -> Flatten<Self> where Self::Item: Stream, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134499,"byte_end":134564,"line_start":545,"line_end":545,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134569,"byte_end":134572,"line_start":546,"line_end":546,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134577,"byte_end":134591,"line_start":547,"line_end":547,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134596,"byte_end":134599,"line_start":548,"line_end":548,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134604,"byte_end":134611,"line_start":549,"line_end":549,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134616,"byte_end":134657,"line_start":550,"line_end":550,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134662,"byte_end":134693,"line_start":551,"line_end":551,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::StreamExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134698,"byte_end":134733,"line_start":552,"line_end":552,"column_start":5,"column_end":40}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134738,"byte_end":134758,"line_start":553,"line_end":553,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134763,"byte_end":134766,"line_start":554,"line_end":554,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134771,"byte_end":134810,"line_start":555,"line_end":555,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134815,"byte_end":134854,"line_start":556,"line_end":556,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134859,"byte_end":134898,"line_start":557,"line_end":557,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134903,"byte_end":134906,"line_start":558,"line_end":558,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134911,"byte_end":134938,"line_start":559,"line_end":559,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(1).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134943,"byte_end":134982,"line_start":560,"line_end":560,"column_start":5,"column_end":44}},{"value":"/     tx1.unbounded_send(2).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":134987,"byte_end":135026,"line_start":561,"line_end":561,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135031,"byte_end":135038,"line_start":562,"line_end":562,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135043,"byte_end":135070,"line_start":563,"line_end":563,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(3).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135075,"byte_end":135114,"line_start":564,"line_end":564,"column_start":5,"column_end":44}},{"value":"/     tx2.unbounded_send(4).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135119,"byte_end":135158,"line_start":565,"line_end":565,"column_start":5,"column_end":44}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135163,"byte_end":135170,"line_start":566,"line_end":566,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135175,"byte_end":135202,"line_start":567,"line_end":567,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(rx1).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135207,"byte_end":135248,"line_start":568,"line_end":568,"column_start":5,"column_end":46}},{"value":"/     tx3.unbounded_send(rx2).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135253,"byte_end":135294,"line_start":569,"line_end":569,"column_start":5,"column_end":46}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135299,"byte_end":135306,"line_start":570,"line_end":570,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135311,"byte_end":135314,"line_start":571,"line_end":571,"column_start":5,"column_end":8}},{"value":"/ let output = rx3.flatten().collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135319,"byte_end":135378,"line_start":572,"line_end":572,"column_start":5,"column_end":64}},{"value":"/ assert_eq!(output, vec![1, 2, 3, 4]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135383,"byte_end":135424,"line_start":573,"line_end":573,"column_start":5,"column_end":46}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135429,"byte_end":135438,"line_start":574,"line_end":574,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135443,"byte_end":135450,"line_start":575,"line_end":575,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1419},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136727,"byte_end":136735,"line_start":609,"line_end":609,"column_start":8,"column_end":16},"name":"flat_map","qualname":"::stream::stream::StreamExt::flat_map","value":"pub fn flat_map<U, F>(Self, F) -> FlatMap<Self, U, F> where\nF: FnMut(Self::Item) -> U, U: Stream, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","sig":null,"attributes":[{"value":"/ Maps a stream like [`StreamExt::map`] but flattens nested `Stream`s.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135642,"byte_end":135714,"line_start":584,"line_end":584,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135719,"byte_end":135722,"line_start":585,"line_end":585,"column_start":5,"column_end":8}},{"value":"/ [`StreamExt::map`] is very useful, but if it produces a `Stream` instead,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135727,"byte_end":135804,"line_start":586,"line_end":586,"column_start":5,"column_end":82}},{"value":"/ you would have to chain combinators like `.map(f).flatten()` while this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135809,"byte_end":135884,"line_start":587,"line_end":587,"column_start":5,"column_end":80}},{"value":"/ combinator provides ability to write `.flat_map(f)` instead of chaining.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135889,"byte_end":135965,"line_start":588,"line_end":588,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135970,"byte_end":135973,"line_start":589,"line_end":589,"column_start":5,"column_end":8}},{"value":"/ The provided closure which produce inner streams is executed over all elements","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":135978,"byte_end":136060,"line_start":590,"line_end":590,"column_start":5,"column_end":87}},{"value":"/ of stream as last inner stream is terminated and next stream item is available.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136065,"byte_end":136148,"line_start":591,"line_end":591,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136153,"byte_end":136156,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136161,"byte_end":136237,"line_start":593,"line_end":593,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `flat_map` methods in the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136242,"byte_end":136318,"line_start":594,"line_end":594,"column_start":5,"column_end":81}},{"value":"/ standard library.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136323,"byte_end":136344,"line_start":595,"line_end":595,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136349,"byte_end":136352,"line_start":596,"line_end":596,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136357,"byte_end":136371,"line_start":597,"line_end":597,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136376,"byte_end":136379,"line_start":598,"line_end":598,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136384,"byte_end":136391,"line_start":599,"line_end":599,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136396,"byte_end":136437,"line_start":600,"line_end":600,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136442,"byte_end":136485,"line_start":601,"line_end":601,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136490,"byte_end":136493,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136498,"byte_end":136535,"line_start":603,"line_end":603,"column_start":5,"column_end":42}},{"value":"/ let stream = stream.flat_map(|x| stream::iter(vec![x + 3; x]));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136540,"byte_end":136607,"line_start":604,"line_end":604,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136612,"byte_end":136615,"line_start":605,"line_end":605,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![4, 5, 5, 6, 6, 6], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136620,"byte_end":136693,"line_start":606,"line_end":606,"column_start":5,"column_end":78}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136698,"byte_end":136707,"line_start":607,"line_end":607,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136712,"byte_end":136719,"line_start":608,"line_end":608,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1422},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137718,"byte_end":137722,"line_start":642,"line_end":642,"column_start":8,"column_end":12},"name":"scan","qualname":"::stream::stream::StreamExt::scan","value":"pub fn scan<S, B, Fut, F>(Self, S, F) -> Scan<Self, S, Fut, F> where\nF: FnMut(&mut S, Self::Item) -> Fut, Fut: Future<Output = Option<B>>,\nSelf: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Combinator similar to [`StreamExt::fold`] that holds internal state\n and produces a new stream.","sig":null,"attributes":[{"value":"/ Combinator similar to [`StreamExt::fold`] that holds internal state","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136909,"byte_end":136980,"line_start":618,"line_end":618,"column_start":5,"column_end":76}},{"value":"/ and produces a new stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":136985,"byte_end":137015,"line_start":619,"line_end":619,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137020,"byte_end":137023,"line_start":620,"line_end":620,"column_start":5,"column_end":8}},{"value":"/ Accepts initial state and closure which will be applied to each element","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137028,"byte_end":137103,"line_start":621,"line_end":621,"column_start":5,"column_end":80}},{"value":"/ of the stream until provided closure returns `None`. Once `None` is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137108,"byte_end":137179,"line_start":622,"line_end":622,"column_start":5,"column_end":76}},{"value":"/ returned, stream will be terminated.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137184,"byte_end":137224,"line_start":623,"line_end":623,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137229,"byte_end":137232,"line_start":624,"line_end":624,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137237,"byte_end":137251,"line_start":625,"line_end":625,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137256,"byte_end":137259,"line_start":626,"line_end":626,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137264,"byte_end":137271,"line_start":627,"line_end":627,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137276,"byte_end":137317,"line_start":628,"line_end":628,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137322,"byte_end":137346,"line_start":629,"line_end":629,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137351,"byte_end":137394,"line_start":630,"line_end":630,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137399,"byte_end":137402,"line_start":631,"line_end":631,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137407,"byte_end":137445,"line_start":632,"line_end":632,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137450,"byte_end":137453,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.scan(0, |state, x| {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137458,"byte_end":137502,"line_start":634,"line_end":634,"column_start":5,"column_end":49}},{"value":"/     *state += x;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137507,"byte_end":137527,"line_start":635,"line_end":635,"column_start":5,"column_end":25}},{"value":"/     future::ready(if *state < 10 { Some(x) } else { None })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137532,"byte_end":137595,"line_start":636,"line_end":636,"column_start":5,"column_end":68}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137600,"byte_end":137607,"line_start":637,"line_end":637,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137612,"byte_end":137615,"line_start":638,"line_end":638,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137620,"byte_end":137684,"line_start":639,"line_end":639,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137689,"byte_end":137698,"line_start":640,"line_end":640,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137703,"byte_end":137710,"line_start":641,"line_end":641,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1427},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138746,"byte_end":138756,"line_start":673,"line_end":673,"column_start":8,"column_end":18},"name":"skip_while","qualname":"::stream::stream::StreamExt::skip_while","value":"pub fn skip_while<Fut, F>(Self, F) -> SkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":137968,"byte_end":138042,"line_start":651,"line_end":651,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138047,"byte_end":138070,"line_start":652,"line_end":652,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138075,"byte_end":138078,"line_start":653,"line_end":653,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::skip_while`, will skip elements on the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138083,"byte_end":138156,"line_start":654,"line_end":654,"column_start":5,"column_end":78}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138161,"byte_end":138233,"line_start":655,"line_end":655,"column_start":5,"column_end":77}},{"value":"/ returns `false`, all future elements will be returned from the underlying","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138238,"byte_end":138315,"line_start":656,"line_end":656,"column_start":5,"column_end":82}},{"value":"/ stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138320,"byte_end":138331,"line_start":657,"line_end":657,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138336,"byte_end":138339,"line_start":658,"line_end":658,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138344,"byte_end":138358,"line_start":659,"line_end":659,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138363,"byte_end":138366,"line_start":660,"line_end":660,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138371,"byte_end":138378,"line_start":661,"line_end":661,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138383,"byte_end":138424,"line_start":662,"line_end":662,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138429,"byte_end":138453,"line_start":663,"line_end":663,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138458,"byte_end":138501,"line_start":664,"line_end":664,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138506,"byte_end":138509,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138514,"byte_end":138552,"line_start":666,"line_end":666,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138557,"byte_end":138560,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.skip_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138565,"byte_end":138628,"line_start":668,"line_end":668,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138633,"byte_end":138636,"line_start":669,"line_end":669,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138641,"byte_end":138712,"line_start":670,"line_end":670,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138717,"byte_end":138726,"line_start":671,"line_end":671,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138731,"byte_end":138738,"line_start":672,"line_end":672,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1430},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139745,"byte_end":139755,"line_start":703,"line_end":703,"column_start":8,"column_end":18},"name":"take_while","qualname":"::stream::stream::StreamExt::take_while","value":"pub fn take_while<Fut, F>(Self, F) -> TakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Item) -> Fut, Fut: Future<Output = bool>, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Take elements from this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements from this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":138990,"byte_end":139066,"line_start":682,"line_end":682,"column_start":5,"column_end":81}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139071,"byte_end":139094,"line_start":683,"line_end":683,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139099,"byte_end":139102,"line_start":684,"line_end":684,"column_start":5,"column_end":8}},{"value":"/ This function, like `Iterator::take_while`, will take elements from the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139107,"byte_end":139182,"line_start":685,"line_end":685,"column_start":5,"column_end":80}},{"value":"/ stream until the predicate `f` resolves to `false`. Once one element","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139187,"byte_end":139259,"line_start":686,"line_end":686,"column_start":5,"column_end":77}},{"value":"/ returns `false`, it will always return that the stream is done.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139264,"byte_end":139331,"line_start":687,"line_end":687,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139336,"byte_end":139339,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139344,"byte_end":139358,"line_start":689,"line_end":689,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139363,"byte_end":139366,"line_start":690,"line_end":690,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139371,"byte_end":139378,"line_start":691,"line_end":691,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139383,"byte_end":139424,"line_start":692,"line_end":692,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139429,"byte_end":139453,"line_start":693,"line_end":693,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139458,"byte_end":139501,"line_start":694,"line_end":694,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139506,"byte_end":139509,"line_start":695,"line_end":695,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139514,"byte_end":139552,"line_start":696,"line_end":696,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139557,"byte_end":139560,"line_start":697,"line_end":697,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_while(|x| future::ready(*x <= 5));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139565,"byte_end":139628,"line_start":698,"line_end":698,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139633,"byte_end":139636,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139641,"byte_end":139711,"line_start":700,"line_end":700,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139716,"byte_end":139725,"line_start":701,"line_end":701,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139730,"byte_end":139737,"line_start":702,"line_end":702,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141271,"byte_end":141281,"line_start":748,"line_end":748,"column_start":8,"column_end":18},"name":"take_until","qualname":"::stream::stream::StreamExt::take_until","value":"pub fn take_until<Fut>(Self, Fut) -> TakeUntil<Self, Fut> where Fut: Future,\nSelf: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Take elements from this stream until the provided future resolves.","sig":null,"attributes":[{"value":"/ Take elements from this stream until the provided future resolves.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":139989,"byte_end":140059,"line_start":712,"line_end":712,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140064,"byte_end":140067,"line_start":713,"line_end":713,"column_start":5,"column_end":8}},{"value":"/ This function will take elements from the stream until the provided","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140072,"byte_end":140143,"line_start":714,"line_end":714,"column_start":5,"column_end":76}},{"value":"/ stopping future `fut` resolves. Once the `fut` future becomes ready,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140148,"byte_end":140220,"line_start":715,"line_end":715,"column_start":5,"column_end":77}},{"value":"/ this stream combinator will always return that the stream is done.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140225,"byte_end":140295,"line_start":716,"line_end":716,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140300,"byte_end":140303,"line_start":717,"line_end":717,"column_start":5,"column_end":8}},{"value":"/ The stopping future may return any type. Once the stream is stopped","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140308,"byte_end":140379,"line_start":718,"line_end":718,"column_start":5,"column_end":76}},{"value":"/ the result of the stopping future may be aceessed with `TakeUntil::take_result()`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140384,"byte_end":140470,"line_start":719,"line_end":719,"column_start":5,"column_end":91}},{"value":"/ The stream may also be resumed with `TakeUntil::take_future()`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140475,"byte_end":140542,"line_start":720,"line_end":720,"column_start":5,"column_end":72}},{"value":"/ See the documentation of [`TakeUntil`] for more information.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140547,"byte_end":140611,"line_start":721,"line_end":721,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140616,"byte_end":140619,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140624,"byte_end":140638,"line_start":723,"line_end":723,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140643,"byte_end":140646,"line_start":724,"line_end":724,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140651,"byte_end":140658,"line_start":725,"line_end":725,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140663,"byte_end":140704,"line_start":726,"line_end":726,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140709,"byte_end":140733,"line_start":727,"line_end":727,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140738,"byte_end":140781,"line_start":728,"line_end":728,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140786,"byte_end":140814,"line_start":729,"line_end":729,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140819,"byte_end":140822,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140827,"byte_end":140865,"line_start":731,"line_end":731,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140870,"byte_end":140873,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ let mut i = 0;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140878,"byte_end":140896,"line_start":733,"line_end":733,"column_start":5,"column_end":23}},{"value":"/ let stop_fut = future::poll_fn(|_cx| {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140901,"byte_end":140943,"line_start":734,"line_end":734,"column_start":5,"column_end":47}},{"value":"/     i += 1;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140948,"byte_end":140963,"line_start":735,"line_end":735,"column_start":5,"column_end":20}},{"value":"/     if i <= 5 {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140968,"byte_end":140987,"line_start":736,"line_end":736,"column_start":5,"column_end":24}},{"value":"/         Poll::Pending","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":140992,"byte_end":141017,"line_start":737,"line_end":737,"column_start":5,"column_end":30}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141022,"byte_end":141038,"line_start":738,"line_end":738,"column_start":5,"column_end":21}},{"value":"/         Poll::Ready(())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141043,"byte_end":141070,"line_start":739,"line_end":739,"column_start":5,"column_end":32}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141075,"byte_end":141084,"line_start":740,"line_end":740,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141089,"byte_end":141096,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141101,"byte_end":141104,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ let stream = stream.take_until(stop_fut);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141109,"byte_end":141154,"line_start":743,"line_end":743,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141159,"byte_end":141162,"line_start":744,"line_end":744,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3, 4, 5], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141167,"byte_end":141237,"line_start":745,"line_end":745,"column_start":5,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141242,"byte_end":141251,"line_start":746,"line_end":746,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141256,"byte_end":141263,"line_start":747,"line_end":747,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1435},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142488,"byte_end":142496,"line_start":789,"line_end":789,"column_start":8,"column_end":16},"name":"for_each","qualname":"::stream::stream::StreamExt::for_each","value":"pub fn for_each<Fut, F>(Self, F) -> ForEach<Self, Fut, F> where\nF: FnMut(Self::Item) -> Fut, Fut: Future<Output = ()>, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Runs this stream to completion, executing the provided asynchronous\n closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Runs this stream to completion, executing the provided asynchronous","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141430,"byte_end":141501,"line_start":756,"line_end":756,"column_start":5,"column_end":76}},{"value":"/ closure for each element on the stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141506,"byte_end":141549,"line_start":757,"line_end":757,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141554,"byte_end":141557,"line_start":758,"line_end":758,"column_start":5,"column_end":8}},{"value":"/ The closure provided will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141562,"byte_end":141637,"line_start":759,"line_end":759,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141642,"byte_end":141712,"line_start":760,"line_end":760,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141717,"byte_end":141755,"line_start":761,"line_end":761,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141760,"byte_end":141763,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ The returned value is a `Future` where the `Output` type is `()`; it is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141768,"byte_end":141843,"line_start":763,"line_end":763,"column_start":5,"column_end":80}},{"value":"/ executed entirely for its side effects.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141848,"byte_end":141891,"line_start":764,"line_end":764,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141896,"byte_end":141899,"line_start":765,"line_end":765,"column_start":5,"column_end":8}},{"value":"/ To process each item in the stream and produce another stream instead","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141904,"byte_end":141977,"line_start":766,"line_end":766,"column_start":5,"column_end":78}},{"value":"/ of a single future, use `then` instead.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":141982,"byte_end":142025,"line_start":767,"line_end":767,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142030,"byte_end":142033,"line_start":768,"line_end":768,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142038,"byte_end":142052,"line_start":769,"line_end":769,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142057,"byte_end":142060,"line_start":770,"line_end":770,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142065,"byte_end":142072,"line_start":771,"line_end":771,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142077,"byte_end":142118,"line_start":772,"line_end":772,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142123,"byte_end":142147,"line_start":773,"line_end":773,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142152,"byte_end":142195,"line_start":774,"line_end":774,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142200,"byte_end":142203,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142208,"byte_end":142226,"line_start":776,"line_end":776,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142231,"byte_end":142234,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142239,"byte_end":142244,"line_start":778,"line_end":778,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(1).take(3).for_each(|item| {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142249,"byte_end":142310,"line_start":779,"line_end":779,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142315,"byte_end":142337,"line_start":780,"line_end":780,"column_start":5,"column_end":27}},{"value":"/         future::ready(())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142342,"byte_end":142371,"line_start":781,"line_end":781,"column_start":5,"column_end":34}},{"value":"/     });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142376,"byte_end":142387,"line_start":782,"line_end":782,"column_start":5,"column_end":16}},{"value":"/     fut.await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142392,"byte_end":142410,"line_start":783,"line_end":783,"column_start":5,"column_end":23}},{"value":"/ }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142415,"byte_end":142420,"line_start":784,"line_end":784,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142425,"byte_end":142428,"line_start":785,"line_end":785,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142433,"byte_end":142454,"line_start":786,"line_end":786,"column_start":5,"column_end":26}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142459,"byte_end":142468,"line_start":787,"line_end":787,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":142473,"byte_end":142480,"line_start":788,"line_end":788,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1438},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145546,"byte_end":145550,"line_start":874,"line_end":874,"column_start":8,"column_end":12},"name":"take","qualname":"::stream::stream::StreamExt::take","value":"pub fn take(Self, usize) -> Take<Self> where Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Creates a new stream of at most `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream of at most `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145038,"byte_end":145109,"line_start":858,"line_end":858,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145114,"byte_end":145117,"line_start":859,"line_end":859,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been yielded from this stream then it will always","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145122,"byte_end":145195,"line_start":860,"line_end":860,"column_start":5,"column_end":78}},{"value":"/ return that the stream is done.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145200,"byte_end":145235,"line_start":861,"line_end":861,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145240,"byte_end":145243,"line_start":862,"line_end":862,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145248,"byte_end":145262,"line_start":863,"line_end":863,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145267,"byte_end":145270,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145275,"byte_end":145282,"line_start":865,"line_end":865,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145287,"byte_end":145328,"line_start":866,"line_end":866,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145333,"byte_end":145376,"line_start":867,"line_end":867,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145381,"byte_end":145384,"line_start":868,"line_end":868,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).take(3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145389,"byte_end":145435,"line_start":869,"line_end":869,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145440,"byte_end":145443,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![1, 2, 3], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145448,"byte_end":145512,"line_start":871,"line_end":871,"column_start":5,"column_end":69}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145517,"byte_end":145526,"line_start":872,"line_end":872,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145531,"byte_end":145538,"line_start":873,"line_end":873,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1439},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146215,"byte_end":146219,"line_start":897,"line_end":897,"column_start":8,"column_end":12},"name":"skip","qualname":"::stream::stream::StreamExt::skip","value":"pub fn skip(Self, usize) -> Skip<Self> where Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Creates a new stream which skips `n` items of the underlying stream.","sig":null,"attributes":[{"value":"/ Creates a new stream which skips `n` items of the underlying stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145688,"byte_end":145760,"line_start":881,"line_end":881,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145765,"byte_end":145768,"line_start":882,"line_end":882,"column_start":5,"column_end":8}},{"value":"/ Once `n` items have been skipped from this stream then it will always","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145773,"byte_end":145846,"line_start":883,"line_end":883,"column_start":5,"column_end":78}},{"value":"/ return the remaining items on this stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145851,"byte_end":145897,"line_start":884,"line_end":884,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145902,"byte_end":145905,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145910,"byte_end":145924,"line_start":886,"line_end":886,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145929,"byte_end":145932,"line_start":887,"line_end":887,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145937,"byte_end":145944,"line_start":888,"line_end":888,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145949,"byte_end":145990,"line_start":889,"line_end":889,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":145995,"byte_end":146038,"line_start":890,"line_end":890,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146043,"byte_end":146046,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(1..=10).skip(5);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146051,"byte_end":146097,"line_start":892,"line_end":892,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146102,"byte_end":146105,"line_start":893,"line_end":893,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(vec![6, 7, 8, 9, 10], stream.collect::<Vec<_>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146110,"byte_end":146181,"line_start":894,"line_end":894,"column_start":5,"column_end":76}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146186,"byte_end":146195,"line_start":895,"line_end":895,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146200,"byte_end":146207,"line_start":896,"line_end":896,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1440},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147840,"byte_end":147844,"line_start":943,"line_end":943,"column_start":8,"column_end":12},"name":"fuse","qualname":"::stream::stream::StreamExt::fuse","value":"pub fn fuse(Self) -> Fuse<Self> where Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Fuse a stream such that [`poll_next`](Stream::poll_next) will never\n again be called once it has finished. This method can be used to turn\n any `Stream` into a `FusedStream`.","sig":null,"attributes":[{"value":"/ Fuse a stream such that [`poll_next`](Stream::poll_next) will never","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146357,"byte_end":146428,"line_start":904,"line_end":904,"column_start":5,"column_end":76}},{"value":"/ again be called once it has finished. This method can be used to turn","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146433,"byte_end":146506,"line_start":905,"line_end":905,"column_start":5,"column_end":78}},{"value":"/ any `Stream` into a `FusedStream`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146511,"byte_end":146549,"line_start":906,"line_end":906,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146554,"byte_end":146557,"line_start":907,"line_end":907,"column_start":5,"column_end":8}},{"value":"/ Normally, once a stream has returned [`None`] from","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146562,"byte_end":146616,"line_start":908,"line_end":908,"column_start":5,"column_end":59}},{"value":"/ [`poll_next`](Stream::poll_next) any further calls could exhibit bad","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146621,"byte_end":146693,"line_start":909,"line_end":909,"column_start":5,"column_end":77}},{"value":"/ behavior such as block forever, panic, never return, etc. If it is known","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146698,"byte_end":146774,"line_start":910,"line_end":910,"column_start":5,"column_end":81}},{"value":"/ that [`poll_next`](Stream::poll_next) may be called after stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146779,"byte_end":146847,"line_start":911,"line_end":911,"column_start":5,"column_end":73}},{"value":"/ has already finished, then this method can be used to ensure that it has","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146852,"byte_end":146928,"line_start":912,"line_end":912,"column_start":5,"column_end":81}},{"value":"/ defined semantics.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146933,"byte_end":146955,"line_start":913,"line_end":913,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146960,"byte_end":146963,"line_start":914,"line_end":914,"column_start":5,"column_end":8}},{"value":"/ The [`poll_next`](Stream::poll_next) method of a `fuse`d stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":146968,"byte_end":147035,"line_start":915,"line_end":915,"column_start":5,"column_end":72}},{"value":"/ is guaranteed to return [`None`] after the underlying stream has","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147040,"byte_end":147108,"line_start":916,"line_end":916,"column_start":5,"column_end":73}},{"value":"/ finished.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147113,"byte_end":147126,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147131,"byte_end":147134,"line_start":918,"line_end":918,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147139,"byte_end":147153,"line_start":919,"line_end":919,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147158,"byte_end":147161,"line_start":920,"line_end":920,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147166,"byte_end":147173,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ use futures::executor::block_on_stream;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147178,"byte_end":147221,"line_start":922,"line_end":922,"column_start":5,"column_end":48}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147226,"byte_end":147269,"line_start":923,"line_end":923,"column_start":5,"column_end":48}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147274,"byte_end":147302,"line_start":924,"line_end":924,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147307,"byte_end":147310,"line_start":925,"line_end":925,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147315,"byte_end":147333,"line_start":926,"line_end":926,"column_start":5,"column_end":23}},{"value":"/ let stream = stream::poll_fn(|_| {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147338,"byte_end":147376,"line_start":927,"line_end":927,"column_start":5,"column_end":43}},{"value":"/     x += 1;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147381,"byte_end":147396,"line_start":928,"line_end":928,"column_start":5,"column_end":20}},{"value":"/     match x {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147401,"byte_end":147418,"line_start":929,"line_end":929,"column_start":5,"column_end":22}},{"value":"/         0..=2 => Poll::Ready(Some(x)),","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147423,"byte_end":147465,"line_start":930,"line_end":930,"column_start":5,"column_end":47}},{"value":"/         3 => Poll::Ready(None),","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147470,"byte_end":147505,"line_start":931,"line_end":931,"column_start":5,"column_end":40}},{"value":"/         _ => panic!(\"should not happen\")","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147510,"byte_end":147554,"line_start":932,"line_end":932,"column_start":5,"column_end":49}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147559,"byte_end":147568,"line_start":933,"line_end":933,"column_start":5,"column_end":14}},{"value":"/ }).fuse();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147573,"byte_end":147587,"line_start":934,"line_end":934,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147592,"byte_end":147595,"line_start":935,"line_end":935,"column_start":5,"column_end":8}},{"value":"/ let mut iter = block_on_stream(stream);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147600,"byte_end":147643,"line_start":936,"line_end":936,"column_start":5,"column_end":48}},{"value":"/ assert_eq!(Some(1), iter.next());","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147648,"byte_end":147685,"line_start":937,"line_end":937,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(Some(2), iter.next());","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147690,"byte_end":147727,"line_start":938,"line_end":938,"column_start":5,"column_end":42}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147732,"byte_end":147766,"line_start":939,"line_end":939,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(None, iter.next());","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147771,"byte_end":147805,"line_start":940,"line_end":940,"column_start":5,"column_end":39}},{"value":"/ // ...","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147810,"byte_end":147820,"line_start":941,"line_end":941,"column_start":5,"column_end":15}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147825,"byte_end":147832,"line_start":942,"line_end":942,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1441},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148773,"byte_end":148779,"line_start":976,"line_end":976,"column_start":8,"column_end":14},"name":"by_ref","qualname":"::stream::stream::StreamExt::by_ref","value":"pub fn by_ref(&mut Self) -> &mut Self","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Borrows a stream, rather than consuming it.","sig":null,"attributes":[{"value":"/ Borrows a stream, rather than consuming it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":147969,"byte_end":148016,"line_start":950,"line_end":950,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148021,"byte_end":148024,"line_start":951,"line_end":951,"column_start":5,"column_end":8}},{"value":"/ This is useful to allow applying stream adaptors while still retaining","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148029,"byte_end":148103,"line_start":952,"line_end":952,"column_start":5,"column_end":79}},{"value":"/ ownership of the original stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148108,"byte_end":148145,"line_start":953,"line_end":953,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148150,"byte_end":148153,"line_start":954,"line_end":954,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148158,"byte_end":148172,"line_start":955,"line_end":955,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148177,"byte_end":148180,"line_start":956,"line_end":956,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148185,"byte_end":148192,"line_start":957,"line_end":957,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148197,"byte_end":148238,"line_start":958,"line_end":958,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148243,"byte_end":148286,"line_start":959,"line_end":959,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148291,"byte_end":148294,"line_start":960,"line_end":960,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(1..5);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148299,"byte_end":148339,"line_start":961,"line_end":961,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148344,"byte_end":148347,"line_start":962,"line_end":962,"column_start":5,"column_end":8}},{"value":"/ let sum = stream.by_ref()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148352,"byte_end":148381,"line_start":963,"line_end":963,"column_start":5,"column_end":34}},{"value":"/                 .take(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148386,"byte_end":148414,"line_start":964,"line_end":964,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148419,"byte_end":148476,"line_start":965,"line_end":965,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148481,"byte_end":148508,"line_start":966,"line_end":966,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148513,"byte_end":148536,"line_start":967,"line_end":967,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148541,"byte_end":148544,"line_start":968,"line_end":968,"column_start":5,"column_end":8}},{"value":"/ // You can use the stream again","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148549,"byte_end":148584,"line_start":969,"line_end":969,"column_start":5,"column_end":40}},{"value":"/ let sum = stream.take(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148589,"byte_end":148617,"line_start":970,"line_end":970,"column_start":5,"column_end":33}},{"value":"/                 .fold(0, |a, b| async move { a + b })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148622,"byte_end":148679,"line_start":971,"line_end":971,"column_start":5,"column_end":62}},{"value":"/                 .await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148684,"byte_end":148711,"line_start":972,"line_end":972,"column_start":5,"column_end":32}},{"value":"/ assert_eq!(sum, 7);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148716,"byte_end":148739,"line_start":973,"line_end":973,"column_start":5,"column_end":28}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148744,"byte_end":148753,"line_start":974,"line_end":974,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":148758,"byte_end":148765,"line_start":975,"line_end":975,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1442},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154979,"byte_end":154982,"line_start":1143,"line_end":1143,"column_start":8,"column_end":11},"name":"zip","qualname":"::stream::stream::StreamExt::zip","value":"pub fn zip<St>(Self, St) -> Zip<Self, St> where St: Stream, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" An adapter for zipping two streams together.","sig":null,"attributes":[{"value":"/ An adapter for zipping two streams together.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154291,"byte_end":154339,"line_start":1121,"line_end":1121,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154344,"byte_end":154347,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ The zipped stream waits for both streams to produce an item, and then","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154352,"byte_end":154425,"line_start":1123,"line_end":1123,"column_start":5,"column_end":78}},{"value":"/ returns that pair. If either stream ends then the zipped stream will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154430,"byte_end":154502,"line_start":1124,"line_end":1124,"column_start":5,"column_end":77}},{"value":"/ also end.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154507,"byte_end":154520,"line_start":1125,"line_end":1125,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154525,"byte_end":154528,"line_start":1126,"line_end":1126,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154533,"byte_end":154547,"line_start":1127,"line_end":1127,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154552,"byte_end":154555,"line_start":1128,"line_end":1128,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154560,"byte_end":154567,"line_start":1129,"line_end":1129,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154572,"byte_end":154613,"line_start":1130,"line_end":1130,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154618,"byte_end":154661,"line_start":1131,"line_end":1131,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154666,"byte_end":154669,"line_start":1132,"line_end":1132,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(1..=3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154674,"byte_end":154712,"line_start":1133,"line_end":1133,"column_start":5,"column_end":43}},{"value":"/ let stream2 = stream::iter(5..=10);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154717,"byte_end":154756,"line_start":1134,"line_end":1134,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154761,"byte_end":154764,"line_start":1135,"line_end":1135,"column_start":5,"column_end":8}},{"value":"/ let vec = stream1.zip(stream2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154769,"byte_end":154803,"line_start":1136,"line_end":1136,"column_start":5,"column_end":39}},{"value":"/                  .collect::<Vec<_>>()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154808,"byte_end":154849,"line_start":1137,"line_end":1137,"column_start":5,"column_end":46}},{"value":"/                  .await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154854,"byte_end":154882,"line_start":1138,"line_end":1138,"column_start":5,"column_end":33}},{"value":"/ assert_eq!(vec![(1, 5), (2, 6), (3, 7)], vec);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154887,"byte_end":154937,"line_start":1139,"line_end":1139,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154942,"byte_end":154951,"line_start":1140,"line_end":1140,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154956,"byte_end":154963,"line_start":1141,"line_end":1141,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":154968,"byte_end":154971,"line_start":1142,"line_end":1142,"column_start":5,"column_end":8}}]},{"kind":"Method","id":{"krate":0,"index":1444},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155890,"byte_end":155895,"line_start":1174,"line_end":1174,"column_start":8,"column_end":13},"name":"chain","qualname":"::stream::stream::StreamExt::chain","value":"pub fn chain<St>(Self, St) -> Chain<Self, St> where St: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Adapter for chaining two streams.","sig":null,"attributes":[{"value":"/ Adapter for chaining two streams.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155163,"byte_end":155200,"line_start":1151,"line_end":1151,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155205,"byte_end":155208,"line_start":1152,"line_end":1152,"column_start":5,"column_end":8}},{"value":"/ The resulting stream emits elements from the first stream, and when","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155213,"byte_end":155284,"line_start":1153,"line_end":1153,"column_start":5,"column_end":76}},{"value":"/ first stream reaches the end, emits the elements from the second stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155289,"byte_end":155365,"line_start":1154,"line_end":1154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155370,"byte_end":155373,"line_start":1155,"line_end":1155,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155378,"byte_end":155385,"line_start":1156,"line_end":1156,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155390,"byte_end":155431,"line_start":1157,"line_end":1157,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155436,"byte_end":155479,"line_start":1158,"line_end":1158,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155484,"byte_end":155487,"line_start":1159,"line_end":1159,"column_start":5,"column_end":8}},{"value":"/ let stream1 = stream::iter(vec![Ok(10), Err(false)]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155492,"byte_end":155549,"line_start":1160,"line_end":1160,"column_start":5,"column_end":62}},{"value":"/ let stream2 = stream::iter(vec![Err(true), Ok(20)]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155554,"byte_end":155610,"line_start":1161,"line_end":1161,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155615,"byte_end":155618,"line_start":1162,"line_end":1162,"column_start":5,"column_end":8}},{"value":"/ let stream = stream1.chain(stream2);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155623,"byte_end":155663,"line_start":1163,"line_end":1163,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155668,"byte_end":155671,"line_start":1164,"line_end":1164,"column_start":5,"column_end":8}},{"value":"/ let result: Vec<_> = stream.collect().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155676,"byte_end":155724,"line_start":1165,"line_end":1165,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(result, vec![","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155729,"byte_end":155757,"line_start":1166,"line_end":1166,"column_start":5,"column_end":33}},{"value":"/     Ok(10),","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155762,"byte_end":155777,"line_start":1167,"line_end":1167,"column_start":5,"column_end":20}},{"value":"/     Err(false),","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155782,"byte_end":155801,"line_start":1168,"line_end":1168,"column_start":5,"column_end":24}},{"value":"/     Err(true),","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155806,"byte_end":155824,"line_start":1169,"line_end":1169,"column_start":5,"column_end":23}},{"value":"/     Ok(20),","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155829,"byte_end":155844,"line_start":1170,"line_end":1170,"column_start":5,"column_end":20}},{"value":"/ ]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155849,"byte_end":155856,"line_start":1171,"line_end":1171,"column_start":5,"column_end":12}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155861,"byte_end":155870,"line_start":1172,"line_end":1172,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":155875,"byte_end":155882,"line_start":1173,"line_end":1173,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1446},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":156233,"byte_end":156241,"line_start":1185,"line_end":1185,"column_start":8,"column_end":16},"name":"peekable","qualname":"::stream::stream::StreamExt::peekable","value":"pub fn peekable(Self) -> Peekable<Self> where Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Creates a new stream which exposes a `peek` method.","sig":null,"attributes":[{"value":"/ Creates a new stream which exposes a `peek` method.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":156087,"byte_end":156142,"line_start":1182,"line_end":1182,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":156147,"byte_end":156150,"line_start":1183,"line_end":1183,"column_start":5,"column_end":8}},{"value":"/ Calling `peek` returns a reference to the next item in the stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":156155,"byte_end":156225,"line_start":1184,"line_end":1184,"column_start":5,"column_end":75}}]},{"kind":"Method","id":{"krate":0,"index":1447},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":160633,"byte_end":160640,"line_start":1290,"line_end":1290,"column_start":8,"column_end":15},"name":"inspect","qualname":"::stream::stream::StreamExt::inspect","value":"pub fn inspect<F>(Self, F) -> Inspect<Self, F> where F: FnMut(&Self::Item) ->\n(), Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Do something with each item of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with each item of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":160330,"byte_end":160403,"line_start":1285,"line_end":1285,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":160408,"byte_end":160411,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Iterator::inspect` method in the standard","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":160416,"byte_end":160485,"line_start":1287,"line_end":1287,"column_start":5,"column_end":74}},{"value":"/ library where it allows easily inspecting each value as it passes","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":160490,"byte_end":160559,"line_start":1288,"line_end":1288,"column_start":5,"column_end":74}},{"value":"/ through the stream, for example to debug what's going on.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":160564,"byte_end":160625,"line_start":1289,"line_end":1289,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1449},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":161096,"byte_end":161107,"line_start":1303,"line_end":1303,"column_start":8,"column_end":19},"name":"left_stream","qualname":"::stream::stream::StreamExt::left_stream","value":"pub fn left_stream<B>(Self) -> Either<Self, B> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the left-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the left-hand variant","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":160817,"byte_end":160892,"line_start":1298,"line_end":1298,"column_start":5,"column_end":80}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":160897,"byte_end":160918,"line_start":1299,"line_end":1299,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":160923,"byte_end":160926,"line_start":1300,"line_end":1300,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `right_stream` method to write `if`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":160931,"byte_end":161011,"line_start":1301,"line_end":1301,"column_start":5,"column_end":85}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":161016,"byte_end":161088,"line_start":1302,"line_end":1302,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1451},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":161560,"byte_end":161572,"line_start":1316,"line_end":1316,"column_start":8,"column_end":20},"name":"right_stream","qualname":"::stream::stream::StreamExt::right_stream","value":"pub fn right_stream<B>(Self) -> Either<B, Self> where B: Stream<Item =\nSelf::Item>, Self: Sized","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Wrap this stream in an `Either` stream, making it the right-hand variant\n of that `Either`.","sig":null,"attributes":[{"value":"/ Wrap this stream in an `Either` stream, making it the right-hand variant","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":161281,"byte_end":161357,"line_start":1311,"line_end":1311,"column_start":5,"column_end":81}},{"value":"/ of that `Either`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":161362,"byte_end":161383,"line_start":1312,"line_end":1312,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":161388,"byte_end":161391,"line_start":1313,"line_end":1313,"column_start":5,"column_end":8}},{"value":"/ This can be used in combination with the `left_stream` method to write `if`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":161396,"byte_end":161475,"line_start":1314,"line_end":1314,"column_start":5,"column_end":84}},{"value":"/ statements that evaluate to different streams in different branches.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":161480,"byte_end":161552,"line_start":1315,"line_end":1315,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1453},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":161848,"byte_end":161863,"line_start":1326,"line_end":1326,"column_start":8,"column_end":23},"name":"poll_next_unpin","qualname":"::stream::stream::StreamExt::poll_next_unpin","value":"pub fn poll_next_unpin(&mut Self, &mut Context) -> Poll<Option<Self::Item>>\nwhere Self: Unpin","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" A convenience method for calling [`Stream::poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`Stream::poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":161747,"byte_end":161818,"line_start":1324,"line_end":1324,"column_start":5,"column_end":76}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":161823,"byte_end":161840,"line_start":1325,"line_end":1325,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":1454},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163964,"byte_end":163980,"line_start":1381,"line_end":1381,"column_start":8,"column_end":24},"name":"select_next_some","qualname":"::stream::stream::StreamExt::select_next_some","value":"pub fn select_next_some(&mut Self) -> SelectNextSome<, Self> where\nSelf: Unpin + FusedStream","parent":{"krate":0,"index":1394},"children":[],"decl_id":null,"docs":" Returns a [`Future`] that resolves when the next item in this stream is\n ready.","sig":null,"attributes":[{"value":"/ Returns a [`Future`] that resolves when the next item in this stream is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162010,"byte_end":162085,"line_start":1333,"line_end":1333,"column_start":5,"column_end":80}},{"value":"/ ready.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162090,"byte_end":162100,"line_start":1334,"line_end":1334,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162105,"byte_end":162108,"line_start":1335,"line_end":1335,"column_start":5,"column_end":8}},{"value":"/ This is similar to the [`next`][StreamExt::next] method, but it won't","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162113,"byte_end":162186,"line_start":1336,"line_end":1336,"column_start":5,"column_end":78}},{"value":"/ resolve to [`None`] if used on an empty [`Stream`]. Instead, the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162191,"byte_end":162259,"line_start":1337,"line_end":1337,"column_start":5,"column_end":73}},{"value":"/ returned future type will return `true` from","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162264,"byte_end":162312,"line_start":1338,"line_end":1338,"column_start":5,"column_end":53}},{"value":"/ [`FusedFuture::is_terminated`][] when the [`Stream`] is empty, allowing","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162317,"byte_end":162392,"line_start":1339,"line_end":1339,"column_start":5,"column_end":80}},{"value":"/ [`select_next_some`][StreamExt::select_next_some] to be easily used with","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162397,"byte_end":162473,"line_start":1340,"line_end":1340,"column_start":5,"column_end":81}},{"value":"/ the [`select!`] macro.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162478,"byte_end":162504,"line_start":1341,"line_end":1341,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162509,"byte_end":162512,"line_start":1342,"line_end":1342,"column_start":5,"column_end":8}},{"value":"/ If the future is polled after this [`Stream`] is empty it will panic.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162517,"byte_end":162590,"line_start":1343,"line_end":1343,"column_start":5,"column_end":78}},{"value":"/ Using the future with a [`FusedFuture`][]-aware primitive like the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162595,"byte_end":162665,"line_start":1344,"line_end":1344,"column_start":5,"column_end":75}},{"value":"/ [`select!`] macro will prevent this.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162670,"byte_end":162710,"line_start":1345,"line_end":1345,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162715,"byte_end":162718,"line_start":1346,"line_end":1346,"column_start":5,"column_end":8}},{"value":"/ [`FusedFuture`]: futures_core::future::FusedFuture","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162723,"byte_end":162777,"line_start":1347,"line_end":1347,"column_start":5,"column_end":59}},{"value":"/ [`FusedFuture::is_terminated`]: futures_core::future::FusedFuture::is_terminated","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162782,"byte_end":162866,"line_start":1348,"line_end":1348,"column_start":5,"column_end":89}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162871,"byte_end":162874,"line_start":1349,"line_end":1349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162879,"byte_end":162893,"line_start":1350,"line_end":1350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162898,"byte_end":162901,"line_start":1351,"line_end":1351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162906,"byte_end":162913,"line_start":1352,"line_end":1352,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162918,"byte_end":162959,"line_start":1353,"line_end":1353,"column_start":5,"column_end":46}},{"value":"/ use futures::{future, select};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":162964,"byte_end":162998,"line_start":1354,"line_end":1354,"column_start":5,"column_end":39}},{"value":"/ use futures::stream::{StreamExt, FuturesUnordered};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163003,"byte_end":163058,"line_start":1355,"line_end":1355,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163063,"byte_end":163066,"line_start":1356,"line_end":1356,"column_start":5,"column_end":8}},{"value":"/ let mut fut = future::ready(1);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163071,"byte_end":163106,"line_start":1357,"line_end":1357,"column_start":5,"column_end":40}},{"value":"/ let mut async_tasks = FuturesUnordered::new();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163111,"byte_end":163161,"line_start":1358,"line_end":1358,"column_start":5,"column_end":55}},{"value":"/ let mut total = 0;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163166,"byte_end":163188,"line_start":1359,"line_end":1359,"column_start":5,"column_end":27}},{"value":"/ loop {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163193,"byte_end":163203,"line_start":1360,"line_end":1360,"column_start":5,"column_end":15}},{"value":"/     select! {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163208,"byte_end":163225,"line_start":1361,"line_end":1361,"column_start":5,"column_end":22}},{"value":"/         num = fut => {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163230,"byte_end":163256,"line_start":1362,"line_end":1362,"column_start":5,"column_end":31}},{"value":"/             // First, the `ready` future completes.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163261,"byte_end":163316,"line_start":1363,"line_end":1363,"column_start":5,"column_end":60}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163321,"byte_end":163350,"line_start":1364,"line_end":1364,"column_start":5,"column_end":34}},{"value":"/             // Then we spawn a new task onto `async_tasks`,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163355,"byte_end":163418,"line_start":1365,"line_end":1365,"column_start":5,"column_end":68}},{"value":"/             async_tasks.push(async { 5 });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163423,"byte_end":163469,"line_start":1366,"line_end":1366,"column_start":5,"column_end":51}},{"value":"/         },","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163474,"byte_end":163488,"line_start":1367,"line_end":1367,"column_start":5,"column_end":19}},{"value":"/         // On the next iteration of the loop, the task we spawned","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163493,"byte_end":163562,"line_start":1368,"line_end":1368,"column_start":5,"column_end":74}},{"value":"/         // completes.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163567,"byte_end":163592,"line_start":1369,"line_end":1369,"column_start":5,"column_end":30}},{"value":"/         num = async_tasks.select_next_some() => {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163597,"byte_end":163650,"line_start":1370,"line_end":1370,"column_start":5,"column_end":58}},{"value":"/             total += num;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163655,"byte_end":163684,"line_start":1371,"line_end":1371,"column_start":5,"column_end":34}},{"value":"/         }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163689,"byte_end":163702,"line_start":1372,"line_end":1372,"column_start":5,"column_end":18}},{"value":"/         // Finally, both the `ready` future and `async_tasks` have","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163707,"byte_end":163777,"line_start":1373,"line_end":1373,"column_start":5,"column_end":75}},{"value":"/         // finished, so we enter the `complete` branch.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163782,"byte_end":163841,"line_start":1374,"line_end":1374,"column_start":5,"column_end":64}},{"value":"/         complete => break,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163846,"byte_end":163876,"line_start":1375,"line_end":1375,"column_start":5,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163881,"byte_end":163890,"line_start":1376,"line_end":1376,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163895,"byte_end":163900,"line_start":1377,"line_end":1377,"column_start":5,"column_end":10}},{"value":"/ assert_eq!(total, 6);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163905,"byte_end":163930,"line_start":1378,"line_end":1378,"column_start":5,"column_end":30}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163935,"byte_end":163944,"line_start":1379,"line_end":1379,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":163949,"byte_end":163956,"line_start":1380,"line_end":1380,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":6854},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\and_then.rs","byte_start":256743,"byte_end":256750,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"AndThen","qualname":"::stream::try_stream::and_then::AndThen","value":"AndThen {  }","parent":null,"children":[{"krate":0,"index":6859},{"krate":0,"index":6860},{"krate":0,"index":6858}],"decl_id":null,"docs":" Stream for the [`and_then`](super::TryStreamExt::and_then) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\and_then.rs","byte_start":256683,"byte_end":256731,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\and_then.rs","byte_start":256668,"byte_end":256682,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":6886},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\and_then.rs","byte_start":256743,"byte_end":256750,"line_start":13,"line_end":13,"column_start":12,"column_end":19},"name":"__AndThen","qualname":"::stream::try_stream::and_then::_::__AndThen","value":"__AndThen {  }","parent":null,"children":[{"krate":0,"index":6891},{"krate":0,"index":6892},{"krate":0,"index":6893}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":6926},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"ErrInto","qualname":"::stream::try_stream::ErrInto","value":"ErrInto {  }","parent":null,"children":[{"krate":0,"index":6929}],"decl_id":null,"docs":" Stream for the [`err_into`](super::TryStreamExt::err_into) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":6948},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__ErrInto","qualname":"::stream::try_stream::_::__ErrInto","value":"__ErrInto {  }","parent":null,"children":[{"krate":0,"index":6952},{"krate":0,"index":6953}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7002},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"InspectOk","qualname":"::stream::try_stream::InspectOk","value":"InspectOk {  }","parent":null,"children":[{"krate":0,"index":7005}],"decl_id":null,"docs":" Stream for the [`inspect_ok`](super::TryStreamExt::inspect_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7024},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__InspectOk","qualname":"::stream::try_stream::_::__InspectOk","value":"__InspectOk {  }","parent":null,"children":[{"krate":0,"index":7028},{"krate":0,"index":7029}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7078},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"InspectErr","qualname":"::stream::try_stream::InspectErr","value":"InspectErr {  }","parent":null,"children":[{"krate":0,"index":7081}],"decl_id":null,"docs":" Stream for the [`inspect_err`](super::TryStreamExt::inspect_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7100},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__InspectErr","qualname":"::stream::try_stream::_::__InspectErr","value":"__InspectErr {  }","parent":null,"children":[{"krate":0,"index":7104},{"krate":0,"index":7105}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7151},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\into_stream.rs","byte_start":259504,"byte_end":259514,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"IntoStream","qualname":"::stream::try_stream::into_stream::IntoStream","value":"IntoStream {  }","parent":null,"children":[{"krate":0,"index":7153}],"decl_id":null,"docs":" Stream for the [`into_stream`](super::TryStreamExt::into_stream) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\into_stream.rs","byte_start":259444,"byte_end":259492,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\into_stream.rs","byte_start":259412,"byte_end":259426,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7169},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\into_stream.rs","byte_start":259504,"byte_end":259514,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__IntoStream","qualname":"::stream::try_stream::into_stream::_::__IntoStream","value":"__IntoStream {  }","parent":null,"children":[{"krate":0,"index":7172},{"krate":0,"index":7173}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7199},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"MapOk","qualname":"::stream::try_stream::MapOk","value":"MapOk {  }","parent":null,"children":[{"krate":0,"index":7202}],"decl_id":null,"docs":" Stream for the [`map_ok`](super::TryStreamExt::map_ok) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7221},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__MapOk","qualname":"::stream::try_stream::_::__MapOk","value":"__MapOk {  }","parent":null,"children":[{"krate":0,"index":7225},{"krate":0,"index":7226}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7275},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"MapErr","qualname":"::stream::try_stream::MapErr","value":"MapErr {  }","parent":null,"children":[{"krate":0,"index":7278}],"decl_id":null,"docs":" Stream for the [`map_err`](super::TryStreamExt::map_err) method.\n","sig":null,"attributes":[{"value":"must_use =\n  \"futures/streams/sinks do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36}}]},{"kind":"Struct","id":{"krate":0,"index":7297},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11011,"byte_end":11038,"line_start":290,"line_end":290,"column_start":9,"column_end":36},"name":"__MapErr","qualname":"::stream::try_stream::_::__MapErr","value":"__MapErr {  }","parent":null,"children":[{"krate":0,"index":7301},{"krate":0,"index":7302}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7348},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\or_else.rs","byte_start":260835,"byte_end":260841,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"OrElse","qualname":"::stream::try_stream::or_else::OrElse","value":"OrElse {  }","parent":null,"children":[{"krate":0,"index":7353},{"krate":0,"index":7354},{"krate":0,"index":7352}],"decl_id":null,"docs":" Stream for the [`or_else`](super::TryStreamExt::or_else) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\or_else.rs","byte_start":260775,"byte_end":260823,"line_start":12,"line_end":12,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\or_else.rs","byte_start":260760,"byte_end":260774,"line_start":11,"line_end":11,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7380},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\or_else.rs","byte_start":260835,"byte_end":260841,"line_start":13,"line_end":13,"column_start":12,"column_end":18},"name":"__OrElse","qualname":"::stream::try_stream::or_else::_::__OrElse","value":"__OrElse {  }","parent":null,"children":[{"krate":0,"index":7385},{"krate":0,"index":7386},{"krate":0,"index":7387}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7417},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_next.rs","byte_start":263711,"byte_end":263718,"line_start":10,"line_end":10,"column_start":12,"column_end":19},"name":"TryNext","qualname":"::stream::try_stream::try_next::TryNext","value":"TryNext {  }","parent":null,"children":[{"krate":0,"index":7420}],"decl_id":null,"docs":" Future for the [`try_next`](super::TryStreamExt::try_next) method.\n","sig":null,"attributes":[{"value":"/ Future for the [`try_next`](super::TryStreamExt::try_next) method.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_next.rs","byte_start":263544,"byte_end":263614,"line_start":7,"line_end":7,"column_start":1,"column_end":71}},{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_next.rs","byte_start":263632,"byte_end":263699,"line_start":9,"line_end":9,"column_start":1,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":7425},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_for_each.rs","byte_start":264787,"byte_end":264797,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"TryForEach","qualname":"::stream::try_stream::try_for_each::TryForEach","value":"TryForEach {  }","parent":null,"children":[{"krate":0,"index":7430},{"krate":0,"index":7429},{"krate":0,"index":7431}],"decl_id":null,"docs":" Future for the [`try_for_each`](super::TryStreamExt::try_for_each) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_for_each.rs","byte_start":264708,"byte_end":264775,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_for_each.rs","byte_start":264693,"byte_end":264707,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7457},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_for_each.rs","byte_start":264787,"byte_end":264797,"line_start":11,"line_end":11,"column_start":12,"column_end":22},"name":"__TryForEach","qualname":"::stream::try_stream::try_for_each::_::__TryForEach","value":"__TryForEach {  }","parent":null,"children":[{"krate":0,"index":7462},{"krate":0,"index":7463},{"krate":0,"index":7464}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7490},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter.rs","byte_start":266692,"byte_end":266701,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"TryFilter","qualname":"::stream::try_stream::try_filter::TryFilter","value":"TryFilter {  }","parent":null,"children":[{"krate":0,"index":7496},{"krate":0,"index":7494},{"krate":0,"index":7497},{"krate":0,"index":7495}],"decl_id":null,"docs":" Stream for the [`try_filter`](super::TryStreamExt::try_filter)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter.rs","byte_start":266632,"byte_end":266680,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter.rs","byte_start":266617,"byte_end":266631,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7525},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter.rs","byte_start":266692,"byte_end":266701,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"__TryFilter","qualname":"::stream::try_stream::try_filter::_::__TryFilter","value":"__TryFilter {  }","parent":null,"children":[{"krate":0,"index":7530},{"krate":0,"index":7531},{"krate":0,"index":7532}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7562},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":269862,"byte_end":269874,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryFilterMap","qualname":"::stream::try_stream::try_filter_map::TryFilterMap","value":"TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":7567},{"krate":0,"index":7566},{"krate":0,"index":7568}],"decl_id":null,"docs":" Stream for the [`try_filter_map`](super::TryStreamExt::try_filter_map)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":269802,"byte_end":269850,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":269787,"byte_end":269801,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7594},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":269862,"byte_end":269874,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryFilterMap","qualname":"::stream::try_stream::try_filter_map::_::__TryFilterMap","value":"__TryFilterMap {  }","parent":null,"children":[{"krate":0,"index":7599},{"krate":0,"index":7600},{"krate":0,"index":7601}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7631},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_flatten.rs","byte_start":272831,"byte_end":272841,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryFlatten","qualname":"::stream::try_stream::try_flatten::TryFlatten","value":"TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7633},{"krate":0,"index":7634}],"decl_id":null,"docs":" Stream for the [`try_flatten`](super::TryStreamExt::try_flatten) method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_flatten.rs","byte_start":272771,"byte_end":272819,"line_start":11,"line_end":11,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_flatten.rs","byte_start":272739,"byte_end":272753,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7652},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_flatten.rs","byte_start":272831,"byte_end":272841,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryFlatten","qualname":"::stream::try_stream::try_flatten::_::__TryFlatten","value":"__TryFlatten {  }","parent":null,"children":[{"krate":0,"index":7655},{"krate":0,"index":7656},{"krate":0,"index":7657}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7680},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_collect.rs","byte_start":274939,"byte_end":274949,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"TryCollect","qualname":"::stream::try_stream::try_collect::TryCollect","value":"TryCollect {  }","parent":null,"children":[{"krate":0,"index":7684},{"krate":0,"index":7683}],"decl_id":null,"docs":" Future for the [`try_collect`](super::TryStreamExt::try_collect) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_collect.rs","byte_start":274860,"byte_end":274927,"line_start":11,"line_end":11,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_collect.rs","byte_start":274828,"byte_end":274842,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7705},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_collect.rs","byte_start":274939,"byte_end":274949,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"__TryCollect","qualname":"::stream::try_stream::try_collect::_::__TryCollect","value":"__TryCollect {  }","parent":null,"children":[{"krate":0,"index":7709},{"krate":0,"index":7710}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7735},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_concat.rs","byte_start":276309,"byte_end":276318,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"TryConcat","qualname":"::stream::try_stream::try_concat::TryConcat","value":"TryConcat {  }","parent":null,"children":[{"krate":0,"index":7738},{"krate":0,"index":7737}],"decl_id":null,"docs":" Future for the [`try_concat`](super::TryStreamExt::try_concat) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_concat.rs","byte_start":276230,"byte_end":276297,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_concat.rs","byte_start":276198,"byte_end":276212,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7756},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_concat.rs","byte_start":276309,"byte_end":276318,"line_start":11,"line_end":11,"column_start":12,"column_end":21},"name":"__TryConcat","qualname":"::stream::try_stream::try_concat::_::__TryConcat","value":"__TryConcat {  }","parent":null,"children":[{"krate":0,"index":7759},{"krate":0,"index":7760}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7779},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_fold.rs","byte_start":277719,"byte_end":277726,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"TryFold","qualname":"::stream::try_stream::try_fold::TryFold","value":"TryFold {  }","parent":null,"children":[{"krate":0,"index":7786},{"krate":0,"index":7784},{"krate":0,"index":7785},{"krate":0,"index":7787}],"decl_id":null,"docs":" Future for the [`try_fold`](super::TryStreamExt::try_fold) method.\n","sig":null,"attributes":[{"value":"must_use = \"futures do nothing unless you `.await` or poll them\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_fold.rs","byte_start":277640,"byte_end":277707,"line_start":10,"line_end":10,"column_start":1,"column_end":68}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_fold.rs","byte_start":277625,"byte_end":277639,"line_start":9,"line_end":9,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7818},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_fold.rs","byte_start":277719,"byte_end":277726,"line_start":11,"line_end":11,"column_start":12,"column_end":19},"name":"__TryFold","qualname":"::stream::try_stream::try_fold::_::__TryFold","value":"__TryFold {  }","parent":null,"children":[{"krate":0,"index":7824},{"krate":0,"index":7825},{"krate":0,"index":7826}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1837},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282190,"byte_end":282200,"line_start":57,"line_end":57,"column_start":8,"column_end":18},"name":"try_unfold","qualname":"::stream::try_stream::try_unfold::try_unfold","value":"pub fn try_unfold<T, F, Fut, Item>(T, F) -> TryUnfold<T, F, Fut> where\nF: FnMut(T) -> Fut, Fut: TryFuture<Ok = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","sig":null,"attributes":[{"value":"/ Creates a `TryStream` from a seed and a closure returning a `TryFuture`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":280333,"byte_end":280409,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":280410,"byte_end":280413,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `TryStream::try_fold()` adapter: while","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":280414,"byte_end":280490,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ `TryStream::try_fold()` reduces a `TryStream` to one single value,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":280491,"byte_end":280561,"line_start":11,"line_end":11,"column_start":1,"column_end":71}},{"value":"/ `try_unfold()` creates a `TryStream` from a seed value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":280562,"byte_end":280621,"line_start":12,"line_end":12,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":280622,"byte_end":280625,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `try_unfold()` will call the provided closure with the provided seed, then","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":280626,"byte_end":280704,"line_start":14,"line_end":14,"column_start":1,"column_end":79}},{"value":"/ wait for the returned `TryFuture` to complete with `(a, b)`. It will then","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":280705,"byte_end":280782,"line_start":15,"line_end":15,"column_start":1,"column_end":78}},{"value":"/ yield the value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":280783,"byte_end":280847,"line_start":16,"line_end":16,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":280848,"byte_end":280851,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(TryFuture)`, then the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":280852,"byte_end":280924,"line_start":18,"line_end":18,"column_start":1,"column_end":73}},{"value":"/ `try_unfold()` will stop producing items and return `Poll::Ready(None)` in","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":280925,"byte_end":281003,"line_start":19,"line_end":19,"column_start":1,"column_end":79}},{"value":"/ future calls to `poll()`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281004,"byte_end":281033,"line_start":20,"line_end":20,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281034,"byte_end":281037,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ In case of error generated by the returned `TryFuture`, the error will be","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281038,"byte_end":281115,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ returned by the `TryStream`. The `TryStream` will then yield","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281116,"byte_end":281180,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Poll::Ready(None)` in future calls to `poll()`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281181,"byte_end":281233,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281234,"byte_end":281237,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281238,"byte_end":281315,"line_start":26,"line_end":26,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281316,"byte_end":281388,"line_start":27,"line_end":27,"column_start":1,"column_end":73}},{"value":"/ `TryFuture` using other library functions working on futures, and","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281389,"byte_end":281458,"line_start":28,"line_end":28,"column_start":1,"column_end":70}},{"value":"/ `try_unfold()` will turn it into a `TryStream` by repeating the operation.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281459,"byte_end":281537,"line_start":29,"line_end":29,"column_start":1,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281538,"byte_end":281541,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281542,"byte_end":281555,"line_start":31,"line_end":31,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281556,"byte_end":281559,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281560,"byte_end":281567,"line_start":33,"line_end":33,"column_start":1,"column_end":8}},{"value":"/ # #[derive(Debug, PartialEq)]","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281568,"byte_end":281601,"line_start":34,"line_end":34,"column_start":1,"column_end":34}},{"value":"/ # struct SomeError;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281602,"byte_end":281625,"line_start":35,"line_end":35,"column_start":1,"column_end":24}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281626,"byte_end":281667,"line_start":36,"line_end":36,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281668,"byte_end":281714,"line_start":37,"line_end":37,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281715,"byte_end":281718,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::try_unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281719,"byte_end":281778,"line_start":39,"line_end":39,"column_start":1,"column_end":60}},{"value":"/     if state < 0 {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281779,"byte_end":281801,"line_start":40,"line_end":40,"column_start":1,"column_end":23}},{"value":"/         return Err(SomeError);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281802,"byte_end":281836,"line_start":41,"line_end":41,"column_start":1,"column_end":35}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281837,"byte_end":281846,"line_start":42,"line_end":42,"column_start":1,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281847,"byte_end":281850,"line_start":43,"line_end":43,"column_start":1,"column_end":4}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281851,"byte_end":281874,"line_start":44,"line_end":44,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281875,"byte_end":281914,"line_start":45,"line_end":45,"column_start":1,"column_end":40}},{"value":"/         let yielded = state * 2;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281915,"byte_end":281951,"line_start":46,"line_end":46,"column_start":1,"column_end":37}},{"value":"/         Ok(Some((yielded, next_state)))","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281952,"byte_end":281995,"line_start":47,"line_end":47,"column_start":1,"column_end":44}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":281996,"byte_end":282012,"line_start":48,"line_end":48,"column_start":1,"column_end":17}},{"value":"/         Ok(None)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282013,"byte_end":282033,"line_start":49,"line_end":49,"column_start":1,"column_end":21}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282034,"byte_end":282043,"line_start":50,"line_end":50,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282044,"byte_end":282051,"line_start":51,"line_end":51,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282052,"byte_end":282055,"line_start":52,"line_end":52,"column_start":1,"column_end":4}},{"value":"/ let result: Result<Vec<i32>, _> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282056,"byte_end":282121,"line_start":53,"line_end":53,"column_start":1,"column_end":66}},{"value":"/ assert_eq!(result, Ok(vec![0, 2, 4]));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282122,"byte_end":282164,"line_start":54,"line_end":54,"column_start":1,"column_end":43}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282165,"byte_end":282174,"line_start":55,"line_end":55,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282175,"byte_end":282182,"line_start":56,"line_end":56,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":7857},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282534,"byte_end":282543,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"TryUnfold","qualname":"::stream::try_stream::try_unfold::TryUnfold","value":"TryUnfold {  }","parent":null,"children":[{"krate":0,"index":7861},{"krate":0,"index":7862},{"krate":0,"index":7863}],"decl_id":null,"docs":" Stream for the [`try_unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282474,"byte_end":282522,"line_start":71,"line_end":71,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282459,"byte_end":282473,"line_start":70,"line_end":70,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7889},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282534,"byte_end":282543,"line_start":72,"line_end":72,"column_start":12,"column_end":21},"name":"__TryUnfold","qualname":"::stream::try_stream::try_unfold::_::__TryUnfold","value":"__TryUnfold {  }","parent":null,"children":[{"krate":0,"index":7894},{"krate":0,"index":7895}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7921},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":284445,"byte_end":284457,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::TrySkipWhile","value":"TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":7928},{"krate":0,"index":7925},{"krate":0,"index":7929},{"krate":0,"index":7926},{"krate":0,"index":7927}],"decl_id":null,"docs":" Stream for the [`try_skip_while`](super::TryStreamExt::try_skip_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":284385,"byte_end":284433,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":284370,"byte_end":284384,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":7959},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":284445,"byte_end":284457,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TrySkipWhile","qualname":"::stream::try_stream::try_skip_while::_::__TrySkipWhile","value":"__TrySkipWhile {  }","parent":null,"children":[{"krate":0,"index":7964},{"krate":0,"index":7965},{"krate":0,"index":7966}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":7996},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_take_while.rs","byte_start":288046,"byte_end":288058,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"TryTakeWhile","qualname":"::stream::try_stream::try_take_while::TryTakeWhile","value":"TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":8003},{"krate":0,"index":8000},{"krate":0,"index":8004},{"krate":0,"index":8001},{"krate":0,"index":8002}],"decl_id":null,"docs":" Stream for the [`try_take_while`](super::TryStreamExt::try_take_while)\n method.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_take_while.rs","byte_start":287986,"byte_end":288034,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_take_while.rs","byte_start":287971,"byte_end":287985,"line_start":12,"line_end":12,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8034},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_take_while.rs","byte_start":288046,"byte_end":288058,"line_start":14,"line_end":14,"column_start":12,"column_end":24},"name":"__TryTakeWhile","qualname":"::stream::try_stream::try_take_while::_::__TryTakeWhile","value":"__TryTakeWhile {  }","parent":null,"children":[{"krate":0,"index":8039},{"krate":0,"index":8040},{"krate":0,"index":8041}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":1931},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228147,"byte_end":228159,"line_start":138,"line_end":138,"column_start":11,"column_end":23},"name":"TryStreamExt","qualname":"::stream::try_stream::TryStreamExt","value":"TryStreamExt: TryStream","parent":null,"children":[{"krate":0,"index":1932},{"krate":0,"index":1934},{"krate":0,"index":1937},{"krate":0,"index":1940},{"krate":0,"index":1943},{"krate":0,"index":1946},{"krate":0,"index":1948},{"krate":0,"index":1950},{"krate":0,"index":1951},{"krate":0,"index":1952},{"krate":0,"index":1955},{"krate":0,"index":1958},{"krate":0,"index":1961},{"krate":0,"index":1963},{"krate":0,"index":1966},{"krate":0,"index":1970},{"krate":0,"index":1971},{"krate":0,"index":1975},{"krate":0,"index":1976}],"decl_id":null,"docs":" Adapters specific to `Result`-returning streams\n","sig":null,"attributes":[{"value":"/ Adapters specific to `Result`-returning streams","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228085,"byte_end":228136,"line_start":137,"line_end":137,"column_start":1,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1932},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228701,"byte_end":228709,"line_start":156,"line_end":156,"column_start":8,"column_end":16},"name":"err_into","qualname":"::stream::try_stream::TryStreamExt::err_into","value":"pub fn err_into<E>(Self) -> ErrInto<Self, E> where Self: Sized,\nSelf::Error: Into<E>","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which converts the error type\n into the one provided.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which converts the error type","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228177,"byte_end":228251,"line_start":139,"line_end":139,"column_start":5,"column_end":79}},{"value":"/ into the one provided.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228256,"byte_end":228282,"line_start":140,"line_end":140,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228287,"byte_end":228290,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228295,"byte_end":228309,"line_start":142,"line_end":142,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228314,"byte_end":228317,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228322,"byte_end":228329,"line_start":144,"line_end":144,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228334,"byte_end":228375,"line_start":145,"line_end":145,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228380,"byte_end":228426,"line_start":146,"line_end":146,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228431,"byte_end":228434,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228439,"byte_end":228459,"line_start":148,"line_end":148,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(()), Err(5i32)])","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228464,"byte_end":228509,"line_start":149,"line_end":149,"column_start":5,"column_end":50}},{"value":"/         .err_into::<i64>();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228514,"byte_end":228545,"line_start":150,"line_end":150,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228550,"byte_end":228553,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228558,"byte_end":228612,"line_start":152,"line_end":152,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(5i64));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228617,"byte_end":228668,"line_start":153,"line_end":153,"column_start":5,"column_end":56}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228673,"byte_end":228681,"line_start":154,"line_end":154,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228686,"byte_end":228693,"line_start":155,"line_end":155,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1934},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229405,"byte_end":229411,"line_start":181,"line_end":181,"column_start":8,"column_end":14},"name":"map_ok","qualname":"::stream::try_stream::TryStreamExt::map_ok","value":"pub fn map_ok<T, F>(Self, F) -> MapOk<Self, F> where Self: Sized,\nF: FnMut(Self::Ok) -> T","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the success value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the success value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228885,"byte_end":228958,"line_start":164,"line_end":164,"column_start":5,"column_end":78}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228963,"byte_end":228994,"line_start":165,"line_end":165,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228999,"byte_end":229002,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229007,"byte_end":229021,"line_start":167,"line_end":167,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229026,"byte_end":229029,"line_start":168,"line_end":168,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229034,"byte_end":229041,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229046,"byte_end":229087,"line_start":170,"line_end":170,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229092,"byte_end":229138,"line_start":171,"line_end":171,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229143,"byte_end":229146,"line_start":172,"line_end":172,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229151,"byte_end":229171,"line_start":173,"line_end":173,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229176,"byte_end":229217,"line_start":174,"line_end":174,"column_start":5,"column_end":46}},{"value":"/         .map_ok(|x| x + 2);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229222,"byte_end":229253,"line_start":175,"line_end":175,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229258,"byte_end":229261,"line_start":176,"line_end":176,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(7)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229266,"byte_end":229319,"line_start":177,"line_end":177,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(0));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229324,"byte_end":229372,"line_start":178,"line_end":178,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229377,"byte_end":229385,"line_start":179,"line_end":179,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229390,"byte_end":229397,"line_start":180,"line_end":180,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1937},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230120,"byte_end":230127,"line_start":206,"line_end":206,"column_start":8,"column_end":15},"name":"map_err","qualname":"::stream::try_stream::TryStreamExt::map_err","value":"pub fn map_err<E, F>(Self, F) -> MapErr<Self, F> where Self: Sized,\nF: FnMut(Self::Error) -> E","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Wraps the current stream in a new stream which maps the error value\n using the provided closure.","sig":null,"attributes":[{"value":"/ Wraps the current stream in a new stream which maps the error value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229601,"byte_end":229672,"line_start":189,"line_end":189,"column_start":5,"column_end":76}},{"value":"/ using the provided closure.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229677,"byte_end":229708,"line_start":190,"line_end":190,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229713,"byte_end":229716,"line_start":191,"line_end":191,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229721,"byte_end":229735,"line_start":192,"line_end":192,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229740,"byte_end":229743,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229748,"byte_end":229755,"line_start":194,"line_end":194,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229760,"byte_end":229801,"line_start":195,"line_end":195,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229806,"byte_end":229852,"line_start":196,"line_end":196,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229857,"byte_end":229860,"line_start":197,"line_end":197,"column_start":5,"column_end":8}},{"value":"/ let mut stream =","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229865,"byte_end":229885,"line_start":198,"line_end":198,"column_start":5,"column_end":25}},{"value":"/     stream::iter(vec![Ok(5), Err(0)])","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229890,"byte_end":229931,"line_start":199,"line_end":199,"column_start":5,"column_end":46}},{"value":"/         .map_err(|x| x + 2);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229936,"byte_end":229968,"line_start":200,"line_end":200,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229973,"byte_end":229976,"line_start":201,"line_end":201,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(5)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":229981,"byte_end":230034,"line_start":202,"line_end":202,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(stream.try_next().await, Err(2));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230039,"byte_end":230087,"line_start":203,"line_end":203,"column_start":5,"column_end":53}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230092,"byte_end":230100,"line_start":204,"line_end":204,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230105,"byte_end":230112,"line_start":205,"line_end":205,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1940},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231732,"byte_end":231740,"line_start":252,"line_end":252,"column_start":8,"column_end":16},"name":"and_then","qualname":"::stream::try_stream::TryStreamExt::and_then","value":"pub fn and_then<Fut, F>(Self, F) -> AndThen<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Error = Self::Error>, Self: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Chain on a computation for when a value is ready, passing the successful\n results to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when a value is ready, passing the successful","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230319,"byte_end":230395,"line_start":214,"line_end":214,"column_start":5,"column_end":81}},{"value":"/ results to the provided closure `f`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230400,"byte_end":230440,"line_start":215,"line_end":215,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230445,"byte_end":230448,"line_start":216,"line_end":216,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work when the next successful","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230453,"byte_end":230529,"line_start":217,"line_end":217,"column_start":5,"column_end":81}},{"value":"/ value on a stream is ready. The closure provided will be yielded a value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230534,"byte_end":230610,"line_start":218,"line_end":218,"column_start":5,"column_end":81}},{"value":"/ when ready, and the returned future will then be run to completion to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230615,"byte_end":230688,"line_start":219,"line_end":219,"column_start":5,"column_end":78}},{"value":"/ produce the next value on this stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230693,"byte_end":230735,"line_start":220,"line_end":220,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230740,"byte_end":230743,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Any errors produced by this stream will not be passed to the closure,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230748,"byte_end":230821,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/ and will be passed through.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230826,"byte_end":230857,"line_start":223,"line_end":223,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230862,"byte_end":230865,"line_start":224,"line_end":224,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the `TryFuture` trait","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230870,"byte_end":230944,"line_start":225,"line_end":225,"column_start":5,"column_end":79}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":230949,"byte_end":231023,"line_start":226,"line_end":226,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231028,"byte_end":231044,"line_start":227,"line_end":227,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231049,"byte_end":231052,"line_start":228,"line_end":228,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231057,"byte_end":231128,"line_start":229,"line_end":229,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231133,"byte_end":231159,"line_start":230,"line_end":230,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231164,"byte_end":231167,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ To process the entire stream and return a single future representing","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231172,"byte_end":231244,"line_start":232,"line_end":232,"column_start":5,"column_end":77}},{"value":"/ success or error, use `try_for_each` instead.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231249,"byte_end":231298,"line_start":233,"line_end":233,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231303,"byte_end":231306,"line_start":234,"line_end":234,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231311,"byte_end":231325,"line_start":235,"line_end":235,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231330,"byte_end":231333,"line_start":236,"line_end":236,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231338,"byte_end":231345,"line_start":237,"line_end":237,"column_start":5,"column_end":12}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231350,"byte_end":231381,"line_start":238,"line_end":238,"column_start":5,"column_end":36}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231386,"byte_end":231410,"line_start":239,"line_end":239,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231415,"byte_end":231453,"line_start":240,"line_end":240,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231458,"byte_end":231461,"line_start":241,"line_end":241,"column_start":5,"column_end":8}},{"value":"/ let (_tx, rx) = mpsc::channel::<Result<i32, ()>>(1);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231466,"byte_end":231522,"line_start":242,"line_end":242,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231527,"byte_end":231530,"line_start":243,"line_end":243,"column_start":5,"column_end":8}},{"value":"/ let rx = rx.and_then(|result| {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231535,"byte_end":231570,"line_start":244,"line_end":244,"column_start":5,"column_end":40}},{"value":"/     future::ok(if result % 2 == 0 {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231575,"byte_end":231614,"line_start":245,"line_end":245,"column_start":5,"column_end":44}},{"value":"/         Some(result)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231619,"byte_end":231643,"line_start":246,"line_end":246,"column_start":5,"column_end":29}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231648,"byte_end":231664,"line_start":247,"line_end":247,"column_start":5,"column_end":21}},{"value":"/         None","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231669,"byte_end":231685,"line_start":248,"line_end":248,"column_start":5,"column_end":21}},{"value":"/     })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231690,"byte_end":231700,"line_start":249,"line_end":249,"column_start":5,"column_end":15}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231705,"byte_end":231712,"line_start":250,"line_end":250,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231717,"byte_end":231724,"line_start":251,"line_end":251,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1943},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232892,"byte_end":232899,"line_start":278,"line_end":278,"column_start":8,"column_end":15},"name":"or_else","qualname":"::stream::try_stream::TryStreamExt::or_else","value":"pub fn or_else<Fut, F>(Self, F) -> OrElse<Self, Fut, F> where\nF: FnMut(Self::Error) -> Fut, Fut: TryFuture<Ok = Self::Ok>, Self: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Chain on a computation for when an error happens, passing the\n erroneous result to the provided closure `f`.","sig":null,"attributes":[{"value":"/ Chain on a computation for when an error happens, passing the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":231993,"byte_end":232058,"line_start":261,"line_end":261,"column_start":5,"column_end":70}},{"value":"/ erroneous result to the provided closure `f`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232063,"byte_end":232112,"line_start":262,"line_end":262,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232117,"byte_end":232120,"line_start":263,"line_end":263,"column_start":5,"column_end":8}},{"value":"/ This function can be used to run a unit of work and attempt to recover from","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232125,"byte_end":232204,"line_start":264,"line_end":264,"column_start":5,"column_end":84}},{"value":"/ an error if one happens. The closure provided will be yielded an error","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232209,"byte_end":232283,"line_start":265,"line_end":265,"column_start":5,"column_end":79}},{"value":"/ when one appears, and the returned future will then be run to completion","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232288,"byte_end":232364,"line_start":266,"line_end":266,"column_start":5,"column_end":81}},{"value":"/ to produce the next value on this stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232369,"byte_end":232414,"line_start":267,"line_end":267,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232419,"byte_end":232422,"line_start":268,"line_end":268,"column_start":5,"column_end":8}},{"value":"/ Any successful values produced by this stream will not be passed to the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232427,"byte_end":232502,"line_start":269,"line_end":269,"column_start":5,"column_end":80}},{"value":"/ closure, and will be passed through.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232507,"byte_end":232547,"line_start":270,"line_end":270,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232552,"byte_end":232555,"line_start":271,"line_end":271,"column_start":5,"column_end":8}},{"value":"/ The returned value of the closure must implement the [`TryFuture`](futures_core::future::TryFuture) trait","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232560,"byte_end":232669,"line_start":272,"line_end":272,"column_start":5,"column_end":114}},{"value":"/ and can represent some more work to be done before the composed stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232674,"byte_end":232748,"line_start":273,"line_end":273,"column_start":5,"column_end":79}},{"value":"/ is finished.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232753,"byte_end":232769,"line_start":274,"line_end":274,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232774,"byte_end":232777,"line_start":275,"line_end":275,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the receiving stream and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232782,"byte_end":232853,"line_start":276,"line_end":276,"column_start":5,"column_end":76}},{"value":"/ wrapped version of it.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":232858,"byte_end":232884,"line_start":277,"line_end":277,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1946},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233451,"byte_end":233461,"line_start":293,"line_end":293,"column_start":8,"column_end":18},"name":"inspect_ok","qualname":"::stream::try_stream::TryStreamExt::inspect_ok","value":"pub fn inspect_ok<F>(Self, F) -> InspectOk<Self, F> where F: FnMut(&Self::Ok)\n-> (), Self: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Do something with the success value of this stream, afterwards passing\n it on.","sig":null,"attributes":[{"value":"/ Do something with the success value of this stream, afterwards passing","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233148,"byte_end":233222,"line_start":287,"line_end":287,"column_start":5,"column_end":79}},{"value":"/ it on.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233227,"byte_end":233237,"line_start":288,"line_end":288,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233242,"byte_end":233245,"line_start":289,"line_end":289,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233250,"byte_end":233320,"line_start":290,"line_end":290,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the success value as it passes through the stream, for","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233325,"byte_end":233401,"line_start":291,"line_end":291,"column_start":5,"column_end":81}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233406,"byte_end":233443,"line_start":292,"line_end":292,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1948},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233950,"byte_end":233961,"line_start":306,"line_end":306,"column_start":8,"column_end":19},"name":"inspect_err","qualname":"::stream::try_stream::TryStreamExt::inspect_err","value":"pub fn inspect_err<F>(Self, F) -> InspectErr<Self, F> where\nF: FnMut(&Self::Error) -> (), Self: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Do something with the error value of this stream, afterwards passing it on.","sig":null,"attributes":[{"value":"/ Do something with the error value of this stream, afterwards passing it on.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233659,"byte_end":233738,"line_start":301,"line_end":301,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233743,"byte_end":233746,"line_start":302,"line_end":302,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `StreamExt::inspect` method where it allows","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233751,"byte_end":233821,"line_start":303,"line_end":303,"column_start":5,"column_end":75}},{"value":"/ easily inspecting the error value as it passes through the stream, for","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233826,"byte_end":233900,"line_start":304,"line_end":304,"column_start":5,"column_end":79}},{"value":"/ example to debug what's going on.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":233905,"byte_end":233942,"line_start":305,"line_end":305,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":1950},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234882,"byte_end":234893,"line_start":335,"line_end":335,"column_start":8,"column_end":19},"name":"into_stream","qualname":"::stream::try_stream::TryStreamExt::into_stream","value":"pub fn into_stream(Self) -> IntoStream<Self> where Self: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Wraps a [`TryStream`] into a type that implements\n [`Stream`](futures_core::stream::Stream)","sig":null,"attributes":[{"value":"/ Wraps a [`TryStream`] into a type that implements","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234164,"byte_end":234217,"line_start":314,"line_end":314,"column_start":5,"column_end":58}},{"value":"/ [`Stream`](futures_core::stream::Stream)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234222,"byte_end":234266,"line_start":315,"line_end":315,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234271,"byte_end":234274,"line_start":316,"line_end":316,"column_start":5,"column_end":8}},{"value":"/ [`TryStream`]s currently do not implement the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234279,"byte_end":234328,"line_start":317,"line_end":317,"column_start":5,"column_end":54}},{"value":"/ [`Stream`](futures_core::stream::Stream) trait because of limitations","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234333,"byte_end":234406,"line_start":318,"line_end":318,"column_start":5,"column_end":78}},{"value":"/ of the compiler.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234411,"byte_end":234431,"line_start":319,"line_end":319,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234436,"byte_end":234439,"line_start":320,"line_end":320,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234444,"byte_end":234458,"line_start":321,"line_end":321,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234463,"byte_end":234466,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234471,"byte_end":234478,"line_start":323,"line_end":323,"column_start":5,"column_end":12}},{"value":"/ use futures::stream::{Stream, TryStream, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234483,"byte_end":234542,"line_start":324,"line_end":324,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234547,"byte_end":234550,"line_start":325,"line_end":325,"column_start":5,"column_end":8}},{"value":"/ # type T = i32;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234555,"byte_end":234574,"line_start":326,"line_end":326,"column_start":5,"column_end":24}},{"value":"/ # type E = ();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234579,"byte_end":234597,"line_start":327,"line_end":327,"column_start":5,"column_end":23}},{"value":"/ fn make_try_stream() -> impl TryStream<Ok = T, Error = E> { // ... }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234602,"byte_end":234674,"line_start":328,"line_end":328,"column_start":5,"column_end":77}},{"value":"/ # futures::stream::empty()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234679,"byte_end":234709,"line_start":329,"line_end":329,"column_start":5,"column_end":35}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234714,"byte_end":234721,"line_start":330,"line_end":330,"column_start":5,"column_end":12}},{"value":"/ fn take_stream(stream: impl Stream<Item = Result<T, E>>) { /* ... */ }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234726,"byte_end":234800,"line_start":331,"line_end":331,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234805,"byte_end":234808,"line_start":332,"line_end":332,"column_start":5,"column_end":8}},{"value":"/ take_stream(make_try_stream().into_stream());","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234813,"byte_end":234862,"line_start":333,"line_end":333,"column_start":5,"column_end":54}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":234867,"byte_end":234874,"line_start":334,"line_end":334,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1951},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235788,"byte_end":235796,"line_start":362,"line_end":362,"column_start":8,"column_end":16},"name":"try_next","qualname":"::stream::try_stream::TryStreamExt::try_next","value":"pub fn try_next(&mut Self) -> TryNext<, Self> where Self: Unpin","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Creates a future that attempts to resolve the next item in the stream.\n If an error is encountered before the next item, the error is returned\n instead.","sig":null,"attributes":[{"value":"/ Creates a future that attempts to resolve the next item in the stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235049,"byte_end":235123,"line_start":342,"line_end":342,"column_start":5,"column_end":79}},{"value":"/ If an error is encountered before the next item, the error is returned","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235128,"byte_end":235202,"line_start":343,"line_end":343,"column_start":5,"column_end":79}},{"value":"/ instead.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235207,"byte_end":235219,"line_start":344,"line_end":344,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235224,"byte_end":235227,"line_start":345,"line_end":345,"column_start":5,"column_end":8}},{"value":"/ This is similar to the `Stream::next` combinator, but returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235232,"byte_end":235299,"line_start":346,"line_end":346,"column_start":5,"column_end":72}},{"value":"/ `Result<Option<T>, E>` rather than an `Option<Result<T, E>>`, making","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235304,"byte_end":235376,"line_start":347,"line_end":347,"column_start":5,"column_end":77}},{"value":"/ for easy use with the `?` operator.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235381,"byte_end":235420,"line_start":348,"line_end":348,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235425,"byte_end":235428,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235433,"byte_end":235447,"line_start":350,"line_end":350,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235452,"byte_end":235455,"line_start":351,"line_end":351,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235460,"byte_end":235467,"line_start":352,"line_end":352,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235472,"byte_end":235513,"line_start":353,"line_end":353,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235518,"byte_end":235564,"line_start":354,"line_end":354,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235569,"byte_end":235572,"line_start":355,"line_end":355,"column_start":5,"column_end":8}},{"value":"/ let mut stream = stream::iter(vec![Ok(()), Err(())]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235577,"byte_end":235634,"line_start":356,"line_end":356,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235639,"byte_end":235642,"line_start":357,"line_end":357,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(stream.try_next().await, Ok(Some(())));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235647,"byte_end":235701,"line_start":358,"line_end":358,"column_start":5,"column_end":59}},{"value":"/ assert_eq!(stream.try_next().await, Err(()));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235706,"byte_end":235755,"line_start":359,"line_end":359,"column_start":5,"column_end":54}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235760,"byte_end":235768,"line_start":360,"line_end":360,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235773,"byte_end":235780,"line_start":361,"line_end":361,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1952},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237148,"byte_end":237160,"line_start":402,"line_end":402,"column_start":8,"column_end":20},"name":"try_for_each","qualname":"::stream::try_stream::TryStreamExt::try_for_each","value":"pub fn try_for_each<Fut, F>(Self, F) -> TryForEach<Self, Fut, F> where\nF: FnMut(Self::Ok) -> Fut, Fut: TryFuture<Ok = (), Error = ()>, Self: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Attempts to run this stream to completion, executing the provided\n asynchronous closure for each element on the stream.","sig":null,"attributes":[{"value":"/ Attempts to run this stream to completion, executing the provided","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":235963,"byte_end":236032,"line_start":369,"line_end":369,"column_start":5,"column_end":74}},{"value":"/ asynchronous closure for each element on the stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236037,"byte_end":236093,"line_start":370,"line_end":370,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236098,"byte_end":236101,"line_start":371,"line_end":371,"column_start":5,"column_end":8}},{"value":"/ The provided closure will be called for each item this stream produces,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236106,"byte_end":236181,"line_start":372,"line_end":372,"column_start":5,"column_end":80}},{"value":"/ yielding a future. That future will then be executed to completion","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236186,"byte_end":236256,"line_start":373,"line_end":373,"column_start":5,"column_end":75}},{"value":"/ before moving on to the next item.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236261,"byte_end":236299,"line_start":374,"line_end":374,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236304,"byte_end":236307,"line_start":375,"line_end":375,"column_start":5,"column_end":8}},{"value":"/ The returned value is a [`Future`](futures_core::future::Future) where the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236312,"byte_end":236390,"line_start":376,"line_end":376,"column_start":5,"column_end":83}},{"value":"/ [`Output`](futures_core::future::Future::Output) type is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236395,"byte_end":236455,"line_start":377,"line_end":377,"column_start":5,"column_end":65}},{"value":"/ `Result<(), Self::Error>`. If any of the intermediate","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236460,"byte_end":236517,"line_start":378,"line_end":378,"column_start":5,"column_end":62}},{"value":"/ futures or the stream returns an error, this future will return","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236522,"byte_end":236589,"line_start":379,"line_end":379,"column_start":5,"column_end":72}},{"value":"/ immediately with an error.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236594,"byte_end":236624,"line_start":380,"line_end":380,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236629,"byte_end":236632,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236637,"byte_end":236651,"line_start":382,"line_end":382,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236656,"byte_end":236659,"line_start":383,"line_end":383,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236664,"byte_end":236671,"line_start":384,"line_end":384,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236676,"byte_end":236717,"line_start":385,"line_end":385,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236722,"byte_end":236746,"line_start":386,"line_end":386,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236751,"byte_end":236797,"line_start":387,"line_end":387,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236802,"byte_end":236805,"line_start":388,"line_end":388,"column_start":5,"column_end":8}},{"value":"/ let mut x = 0i32;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236810,"byte_end":236831,"line_start":389,"line_end":389,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236836,"byte_end":236839,"line_start":390,"line_end":390,"column_start":5,"column_end":8}},{"value":"/ {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236844,"byte_end":236849,"line_start":391,"line_end":391,"column_start":5,"column_end":10}},{"value":"/     let fut = stream::repeat(Ok(1)).try_for_each(|item| {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236854,"byte_end":236915,"line_start":392,"line_end":392,"column_start":5,"column_end":66}},{"value":"/         x += item;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236920,"byte_end":236942,"line_start":393,"line_end":393,"column_start":5,"column_end":27}},{"value":"/         future::ready(if x == 3 { Err(()) } else { Ok(()) })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":236947,"byte_end":237011,"line_start":394,"line_end":394,"column_start":5,"column_end":69}},{"value":"/     });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237016,"byte_end":237027,"line_start":395,"line_end":395,"column_start":5,"column_end":16}},{"value":"/     assert_eq!(fut.await, Err(()));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237032,"byte_end":237071,"line_start":396,"line_end":396,"column_start":5,"column_end":44}},{"value":"/ }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237076,"byte_end":237081,"line_start":397,"line_end":397,"column_start":5,"column_end":10}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237086,"byte_end":237089,"line_start":398,"line_end":398,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(x, 3);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237094,"byte_end":237115,"line_start":399,"line_end":399,"column_start":5,"column_end":26}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237120,"byte_end":237128,"line_start":400,"line_end":400,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237133,"byte_end":237140,"line_start":401,"line_end":401,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1955},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238173,"byte_end":238187,"line_start":432,"line_end":432,"column_start":8,"column_end":22},"name":"try_skip_while","qualname":"::stream::try_stream::TryStreamExt::try_skip_while","value":"pub fn try_skip_while<Fut, F>(Self, F) -> TrySkipWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Skip elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Skip elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237424,"byte_end":237498,"line_start":411,"line_end":411,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237503,"byte_end":237526,"line_start":412,"line_end":412,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237531,"byte_end":237534,"line_start":413,"line_end":413,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237539,"byte_end":237570,"line_start":414,"line_end":414,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::skip_while`](crate::stream::StreamExt::skip_while) but exits","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237575,"byte_end":237652,"line_start":415,"line_end":415,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237657,"byte_end":237686,"line_start":416,"line_end":416,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237691,"byte_end":237694,"line_start":417,"line_end":417,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237699,"byte_end":237713,"line_start":418,"line_end":418,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237718,"byte_end":237721,"line_start":419,"line_end":419,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237726,"byte_end":237733,"line_start":420,"line_end":420,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237738,"byte_end":237779,"line_start":421,"line_end":421,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237784,"byte_end":237808,"line_start":422,"line_end":422,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237813,"byte_end":237859,"line_start":423,"line_end":423,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237864,"byte_end":237867,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237872,"byte_end":237941,"line_start":425,"line_end":425,"column_start":5,"column_end":74}},{"value":"/ let stream = stream.try_skip_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":237946,"byte_end":238016,"line_start":426,"line_end":426,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238021,"byte_end":238024,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238029,"byte_end":238096,"line_start":428,"line_end":428,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![3, 2]));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238101,"byte_end":238140,"line_start":429,"line_end":429,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238145,"byte_end":238153,"line_start":430,"line_end":430,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238158,"byte_end":238165,"line_start":431,"line_end":431,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1958},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":239220,"byte_end":239234,"line_start":462,"line_end":462,"column_start":8,"column_end":22},"name":"try_take_while","qualname":"::stream::try_stream::TryStreamExt::try_take_while","value":"pub fn try_take_while<Fut, F>(Self, F) -> TryTakeWhile<Self, Fut, F> where\nF: FnMut(&Self::Ok) -> Fut, Fut: TryFuture<Ok = bool, Error = bool>,\nSelf: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Take elements on this stream while the provided asynchronous predicate\n resolves to `true`.","sig":null,"attributes":[{"value":"/ Take elements on this stream while the provided asynchronous predicate","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238464,"byte_end":238538,"line_start":441,"line_end":441,"column_start":5,"column_end":79}},{"value":"/ resolves to `true`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238543,"byte_end":238566,"line_start":442,"line_end":442,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238571,"byte_end":238574,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ This function is similar to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238579,"byte_end":238610,"line_start":444,"line_end":444,"column_start":5,"column_end":36}},{"value":"/ [`StreamExt::take_while`](crate::stream::StreamExt::take_while) but exits","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238615,"byte_end":238692,"line_start":445,"line_end":445,"column_start":5,"column_end":82}},{"value":"/ early if an error occurs.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238697,"byte_end":238726,"line_start":446,"line_end":446,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238731,"byte_end":238734,"line_start":447,"line_end":447,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238739,"byte_end":238753,"line_start":448,"line_end":448,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238758,"byte_end":238761,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238766,"byte_end":238773,"line_start":450,"line_end":450,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238778,"byte_end":238819,"line_start":451,"line_end":451,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238824,"byte_end":238848,"line_start":452,"line_end":452,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238853,"byte_end":238899,"line_start":453,"line_end":453,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238904,"byte_end":238907,"line_start":454,"line_end":454,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2), Ok(3), Ok(2)]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238912,"byte_end":238988,"line_start":455,"line_end":455,"column_start":5,"column_end":81}},{"value":"/ let stream = stream.try_take_while(|x| future::ready(Ok(*x < 3)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":238993,"byte_end":239063,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":239068,"byte_end":239071,"line_start":457,"line_end":457,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = stream.try_collect().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":239076,"byte_end":239143,"line_start":458,"line_end":458,"column_start":5,"column_end":72}},{"value":"/ assert_eq!(output, Ok(vec![1, 2]));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":239148,"byte_end":239187,"line_start":459,"line_end":459,"column_start":5,"column_end":44}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":239192,"byte_end":239200,"line_start":460,"line_end":460,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":239205,"byte_end":239212,"line_start":461,"line_end":461,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1961},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242614,"byte_end":242625,"line_start":561,"line_end":561,"column_start":8,"column_end":19},"name":"try_collect","qualname":"::stream::try_stream::TryStreamExt::try_collect","value":"pub fn try_collect<C: Default + Extend<Self::Ok>>(Self) -> TryCollect<Self, C>\nwhere Self: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Attempt to transform a stream into a collection,\n returning a future representing the result of that computation.","sig":null,"attributes":[{"value":"/ Attempt to transform a stream into a collection,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":241575,"byte_end":241627,"line_start":531,"line_end":531,"column_start":5,"column_end":57}},{"value":"/ returning a future representing the result of that computation.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":241632,"byte_end":241699,"line_start":532,"line_end":532,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":241704,"byte_end":241707,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ This combinator will collect all successful results of this stream and","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":241712,"byte_end":241786,"line_start":534,"line_end":534,"column_start":5,"column_end":79}},{"value":"/ collect them into the specified collection type. If an error happens then all","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":241791,"byte_end":241872,"line_start":535,"line_end":535,"column_start":5,"column_end":86}},{"value":"/ collected elements will be dropped and the error will be returned.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":241877,"byte_end":241947,"line_start":536,"line_end":536,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":241952,"byte_end":241955,"line_start":537,"line_end":537,"column_start":5,"column_end":8}},{"value":"/ The returned future will be resolved when the stream terminates.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":241960,"byte_end":242028,"line_start":538,"line_end":538,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242033,"byte_end":242036,"line_start":539,"line_end":539,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242041,"byte_end":242055,"line_start":540,"line_end":540,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242060,"byte_end":242063,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242068,"byte_end":242075,"line_start":542,"line_end":542,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242080,"byte_end":242121,"line_start":543,"line_end":543,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242126,"byte_end":242157,"line_start":544,"line_end":544,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242162,"byte_end":242200,"line_start":545,"line_end":545,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242205,"byte_end":242225,"line_start":546,"line_end":546,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242230,"byte_end":242233,"line_start":547,"line_end":547,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242238,"byte_end":242275,"line_start":548,"line_end":548,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242280,"byte_end":242283,"line_start":549,"line_end":549,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242288,"byte_end":242315,"line_start":550,"line_end":550,"column_start":5,"column_end":32}},{"value":"/     for i in 1..=5 {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242320,"byte_end":242344,"line_start":551,"line_end":551,"column_start":5,"column_end":29}},{"value":"/         tx.unbounded_send(Ok(i)).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242349,"byte_end":242395,"line_start":552,"line_end":552,"column_start":5,"column_end":51}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242400,"byte_end":242409,"line_start":553,"line_end":553,"column_start":5,"column_end":14}},{"value":"/     tx.unbounded_send(Err(6)).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242414,"byte_end":242457,"line_start":554,"line_end":554,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242462,"byte_end":242469,"line_start":555,"line_end":555,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242474,"byte_end":242477,"line_start":556,"line_end":556,"column_start":5,"column_end":8}},{"value":"/ let output: Result<Vec<i32>, i32> = rx.try_collect().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242482,"byte_end":242545,"line_start":557,"line_end":557,"column_start":5,"column_end":68}},{"value":"/ assert_eq!(output, Err(6));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242550,"byte_end":242581,"line_start":558,"line_end":558,"column_start":5,"column_end":36}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242586,"byte_end":242594,"line_start":559,"line_end":559,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242599,"byte_end":242606,"line_start":560,"line_end":560,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1963},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244096,"byte_end":244106,"line_start":598,"line_end":598,"column_start":8,"column_end":18},"name":"try_filter","qualname":"::stream::try_stream::TryStreamExt::try_filter","value":"pub fn try_filter<Fut, F>(Self, F) -> TryFilter<Self, Fut, F> where\nFut: Future<Output = bool>, F: FnMut(&Self::Ok) -> Fut, Self: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream according to the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242808,"byte_end":242881,"line_start":568,"line_end":568,"column_start":5,"column_end":78}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242886,"byte_end":242920,"line_start":569,"line_end":569,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242925,"byte_end":242928,"line_start":570,"line_end":570,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided predicate `f`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":242933,"byte_end":243008,"line_start":571,"line_end":571,"column_start":5,"column_end":80}},{"value":"/ will be run on them. If the predicate returns a `Future` which resolves","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243013,"byte_end":243088,"line_start":572,"line_end":572,"column_start":5,"column_end":80}},{"value":"/ to `true`, then the stream will yield the value, but if the predicate","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243093,"byte_end":243166,"line_start":573,"line_end":573,"column_start":5,"column_end":78}},{"value":"/ return a `Future` which resolves to `false`, then the value will be","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243171,"byte_end":243242,"line_start":574,"line_end":574,"column_start":5,"column_end":76}},{"value":"/ discarded and the next value will be produced.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243247,"byte_end":243297,"line_start":575,"line_end":575,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243302,"byte_end":243305,"line_start":576,"line_end":576,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243310,"byte_end":243381,"line_start":577,"line_end":577,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243386,"byte_end":243389,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243394,"byte_end":243470,"line_start":579,"line_end":579,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter` methods in","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243475,"byte_end":243545,"line_start":580,"line_end":580,"column_start":5,"column_end":75}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243550,"byte_end":243575,"line_start":581,"line_end":581,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243580,"byte_end":243583,"line_start":582,"line_end":582,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243588,"byte_end":243602,"line_start":583,"line_end":583,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243607,"byte_end":243614,"line_start":584,"line_end":584,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243619,"byte_end":243660,"line_start":585,"line_end":585,"column_start":5,"column_end":46}},{"value":"/ use futures::future;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243665,"byte_end":243689,"line_start":586,"line_end":586,"column_start":5,"column_end":29}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243694,"byte_end":243751,"line_start":587,"line_end":587,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243756,"byte_end":243759,"line_start":588,"line_end":588,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(2i32), Ok(3i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243764,"byte_end":243844,"line_start":589,"line_end":589,"column_start":5,"column_end":85}},{"value":"/ let mut evens = stream.try_filter(|x| {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243849,"byte_end":243892,"line_start":590,"line_end":590,"column_start":5,"column_end":48}},{"value":"/     future::ready(x % 2 == 0)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243897,"byte_end":243930,"line_start":591,"line_end":591,"column_start":5,"column_end":38}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243935,"byte_end":243942,"line_start":592,"line_end":592,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243947,"byte_end":243950,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(evens.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":243955,"byte_end":244003,"line_start":594,"line_end":594,"column_start":5,"column_end":53}},{"value":"/ assert_eq!(evens.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244008,"byte_end":244063,"line_start":595,"line_end":595,"column_start":5,"column_end":60}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244068,"byte_end":244076,"line_start":596,"line_end":596,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244081,"byte_end":244088,"line_start":597,"line_end":597,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1966},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245733,"byte_end":245747,"line_start":639,"line_end":639,"column_start":8,"column_end":22},"name":"try_filter_map","qualname":"::stream::try_stream::TryStreamExt::try_filter_map","value":"pub fn try_filter_map<Fut, F, T>(Self, F) -> TryFilterMap<Self, Fut, F> where\nFut: TryFuture<Ok = Option<T>, Error = Option<T>>, F: FnMut(Self::Ok) -> Fut,\nSelf: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Attempt to filter the values produced by this stream while\n simultaneously mapping them to a different type according to the\n provided asynchronous closure.","sig":null,"attributes":[{"value":"/ Attempt to filter the values produced by this stream while","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244357,"byte_end":244419,"line_start":607,"line_end":607,"column_start":5,"column_end":67}},{"value":"/ simultaneously mapping them to a different type according to the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244424,"byte_end":244492,"line_start":608,"line_end":608,"column_start":5,"column_end":73}},{"value":"/ provided asynchronous closure.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244497,"byte_end":244531,"line_start":609,"line_end":609,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244536,"byte_end":244539,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ As values of this stream are made available, the provided function will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244544,"byte_end":244619,"line_start":611,"line_end":611,"column_start":5,"column_end":80}},{"value":"/ be run on them. If the future returned by the predicate `f` resolves to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244624,"byte_end":244699,"line_start":612,"line_end":612,"column_start":5,"column_end":80}},{"value":"/ [`Some(item)`](Some) then the stream will yield the value `item`, but if","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244704,"byte_end":244780,"line_start":613,"line_end":613,"column_start":5,"column_end":81}},{"value":"/ it resolves to [`None`] then the next value will be produced.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244785,"byte_end":244850,"line_start":614,"line_end":614,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244855,"byte_end":244858,"line_start":615,"line_end":615,"column_start":5,"column_end":8}},{"value":"/ All errors are passed through without filtering in this combinator.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244863,"byte_end":244934,"line_start":616,"line_end":616,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244939,"byte_end":244942,"line_start":617,"line_end":617,"column_start":5,"column_end":8}},{"value":"/ Note that this function consumes the stream passed into it and returns a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":244947,"byte_end":245023,"line_start":618,"line_end":618,"column_start":5,"column_end":81}},{"value":"/ wrapped version of it, similar to the existing `filter_map` methods in","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245028,"byte_end":245102,"line_start":619,"line_end":619,"column_start":5,"column_end":79}},{"value":"/ the standard library.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245107,"byte_end":245132,"line_start":620,"line_end":620,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245137,"byte_end":245140,"line_start":621,"line_end":621,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245145,"byte_end":245159,"line_start":622,"line_end":622,"column_start":5,"column_end":19}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245164,"byte_end":245171,"line_start":623,"line_end":623,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245176,"byte_end":245217,"line_start":624,"line_end":624,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245222,"byte_end":245279,"line_start":625,"line_end":625,"column_start":5,"column_end":62}},{"value":"/ use futures::pin_mut;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245284,"byte_end":245309,"line_start":626,"line_end":626,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245314,"byte_end":245317,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ let stream = stream::iter(vec![Ok(1i32), Ok(6i32), Err(\"error\")]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245322,"byte_end":245392,"line_start":628,"line_end":628,"column_start":5,"column_end":75}},{"value":"/ let halves = stream.try_filter_map(|x| async move {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245397,"byte_end":245452,"line_start":629,"line_end":629,"column_start":5,"column_end":60}},{"value":"/     let ret = if x % 2 == 0 { Some(x / 2) } else { None };","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245457,"byte_end":245519,"line_start":630,"line_end":630,"column_start":5,"column_end":67}},{"value":"/     Ok(ret)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245524,"byte_end":245539,"line_start":631,"line_end":631,"column_start":5,"column_end":20}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245544,"byte_end":245551,"line_start":632,"line_end":632,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245556,"byte_end":245559,"line_start":633,"line_end":633,"column_start":5,"column_end":8}},{"value":"/ pin_mut!(halves);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245564,"byte_end":245585,"line_start":634,"line_end":634,"column_start":5,"column_end":26}},{"value":"/ assert_eq!(halves.next().await, Some(Ok(3)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245590,"byte_end":245639,"line_start":635,"line_end":635,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(halves.next().await, Some(Err(\"error\")));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245644,"byte_end":245700,"line_start":636,"line_end":636,"column_start":5,"column_end":61}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245705,"byte_end":245713,"line_start":637,"line_end":637,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":245718,"byte_end":245725,"line_start":638,"line_end":638,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1970},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247439,"byte_end":247450,"line_start":686,"line_end":686,"column_start":8,"column_end":19},"name":"try_flatten","qualname":"::stream::try_stream::TryStreamExt::try_flatten","value":"pub fn try_flatten(Self) -> TryFlatten<Self> where Self::Ok: TryStream,\n<Self::Ok as TryStream>::Error: From<Self::Error>, Self: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Flattens a stream of streams into just one continuous stream.","sig":null,"attributes":[{"value":"/ Flattens a stream of streams into just one continuous stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246024,"byte_end":246089,"line_start":648,"line_end":648,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246094,"byte_end":246097,"line_start":649,"line_end":649,"column_start":5,"column_end":8}},{"value":"/ If this stream's elements are themselves streams then this combinator","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246102,"byte_end":246175,"line_start":650,"line_end":650,"column_start":5,"column_end":78}},{"value":"/ will flatten out the entire stream to one long chain of elements. Any","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246180,"byte_end":246253,"line_start":651,"line_end":651,"column_start":5,"column_end":78}},{"value":"/ errors are passed through without looking at them, but otherwise each","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246258,"byte_end":246331,"line_start":652,"line_end":652,"column_start":5,"column_end":78}},{"value":"/ individual stream will get exhausted before moving on to the next.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246336,"byte_end":246406,"line_start":653,"line_end":653,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246411,"byte_end":246414,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246419,"byte_end":246433,"line_start":655,"line_end":655,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246438,"byte_end":246441,"line_start":656,"line_end":656,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246446,"byte_end":246453,"line_start":657,"line_end":657,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246458,"byte_end":246499,"line_start":658,"line_end":658,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246504,"byte_end":246535,"line_start":659,"line_end":659,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::{StreamExt, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246540,"byte_end":246591,"line_start":660,"line_end":660,"column_start":5,"column_end":56}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246596,"byte_end":246616,"line_start":661,"line_end":661,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246621,"byte_end":246624,"line_start":662,"line_end":662,"column_start":5,"column_end":8}},{"value":"/ let (tx1, rx1) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246629,"byte_end":246668,"line_start":663,"line_end":663,"column_start":5,"column_end":44}},{"value":"/ let (tx2, rx2) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246673,"byte_end":246712,"line_start":664,"line_end":664,"column_start":5,"column_end":44}},{"value":"/ let (tx3, rx3) = mpsc::unbounded();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246717,"byte_end":246756,"line_start":665,"line_end":665,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246761,"byte_end":246764,"line_start":666,"line_end":666,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246769,"byte_end":246796,"line_start":667,"line_end":667,"column_start":5,"column_end":32}},{"value":"/     tx1.unbounded_send(Ok(1)).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246801,"byte_end":246844,"line_start":668,"line_end":668,"column_start":5,"column_end":48}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246849,"byte_end":246856,"line_start":669,"line_end":669,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246861,"byte_end":246888,"line_start":670,"line_end":670,"column_start":5,"column_end":32}},{"value":"/     tx2.unbounded_send(Ok(2)).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246893,"byte_end":246936,"line_start":671,"line_end":671,"column_start":5,"column_end":48}},{"value":"/     tx2.unbounded_send(Err(3)).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246941,"byte_end":246985,"line_start":672,"line_end":672,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":246990,"byte_end":246997,"line_start":673,"line_end":673,"column_start":5,"column_end":12}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247002,"byte_end":247029,"line_start":674,"line_end":674,"column_start":5,"column_end":32}},{"value":"/     tx3.unbounded_send(Ok(rx1)).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247034,"byte_end":247079,"line_start":675,"line_end":675,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Ok(rx2)).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247084,"byte_end":247129,"line_start":676,"line_end":676,"column_start":5,"column_end":50}},{"value":"/     tx3.unbounded_send(Err(4)).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247134,"byte_end":247178,"line_start":677,"line_end":677,"column_start":5,"column_end":49}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247183,"byte_end":247190,"line_start":678,"line_end":678,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247195,"byte_end":247198,"line_start":679,"line_end":679,"column_start":5,"column_end":8}},{"value":"/ let mut stream = rx3.try_flatten();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247203,"byte_end":247242,"line_start":680,"line_end":680,"column_start":5,"column_end":44}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(1)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247247,"byte_end":247296,"line_start":681,"line_end":681,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Ok(2)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247301,"byte_end":247350,"line_start":682,"line_end":682,"column_start":5,"column_end":54}},{"value":"/ assert_eq!(stream.next().await, Some(Err(3)));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247355,"byte_end":247405,"line_start":683,"line_end":683,"column_start":5,"column_end":55}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247410,"byte_end":247419,"line_start":684,"line_end":684,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247424,"byte_end":247431,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1971},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249042,"byte_end":249050,"line_start":725,"line_end":725,"column_start":8,"column_end":16},"name":"try_fold","qualname":"::stream::try_stream::TryStreamExt::try_fold","value":"pub fn try_fold<T, Fut, F>(Self, T, F) -> TryFold<Self, Fut, T, F> where\nF: FnMut(T, Self::Ok) -> Fut, Fut: TryFuture<Ok = T, Error = T>, Self: Sized","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Attempt to execute an accumulating asynchronous computation over a\n stream, collecting all the values into one final result.","sig":null,"attributes":[{"value":"/ Attempt to execute an accumulating asynchronous computation over a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247755,"byte_end":247825,"line_start":697,"line_end":697,"column_start":5,"column_end":75}},{"value":"/ stream, collecting all the values into one final result.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247830,"byte_end":247890,"line_start":698,"line_end":698,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247895,"byte_end":247898,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ This combinator will accumulate all values returned by this stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247903,"byte_end":247973,"line_start":700,"line_end":700,"column_start":5,"column_end":75}},{"value":"/ according to the closure provided. The initial state is also provided to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":247978,"byte_end":248054,"line_start":701,"line_end":701,"column_start":5,"column_end":81}},{"value":"/ this method and then is returned again by each execution of the closure.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248059,"byte_end":248135,"line_start":702,"line_end":702,"column_start":5,"column_end":81}},{"value":"/ Once the entire stream has been exhausted the returned future will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248140,"byte_end":248210,"line_start":703,"line_end":703,"column_start":5,"column_end":75}},{"value":"/ resolve to this value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248215,"byte_end":248241,"line_start":704,"line_end":704,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248246,"byte_end":248249,"line_start":705,"line_end":705,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`fold`](crate::stream::StreamExt::fold), but will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248254,"byte_end":248334,"line_start":706,"line_end":706,"column_start":5,"column_end":85}},{"value":"/ exit early if an error is encountered in either the stream or the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248339,"byte_end":248408,"line_start":707,"line_end":707,"column_start":5,"column_end":74}},{"value":"/ provided closure.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248413,"byte_end":248434,"line_start":708,"line_end":708,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248439,"byte_end":248442,"line_start":709,"line_end":709,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248447,"byte_end":248461,"line_start":710,"line_end":710,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248466,"byte_end":248469,"line_start":711,"line_end":711,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248474,"byte_end":248481,"line_start":712,"line_end":712,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248486,"byte_end":248527,"line_start":713,"line_end":713,"column_start":5,"column_end":46}},{"value":"/ use futures::stream::{self, TryStreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248532,"byte_end":248578,"line_start":714,"line_end":714,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248583,"byte_end":248586,"line_start":715,"line_end":715,"column_start":5,"column_end":8}},{"value":"/ let number_stream = stream::iter(vec![Ok::<i32, i32>(1), Ok(2)]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248591,"byte_end":248660,"line_start":716,"line_end":716,"column_start":5,"column_end":74}},{"value":"/ let sum = number_stream.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248665,"byte_end":248742,"line_start":717,"line_end":717,"column_start":5,"column_end":82}},{"value":"/ assert_eq!(sum.await, Ok(3));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248747,"byte_end":248780,"line_start":718,"line_end":718,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248785,"byte_end":248788,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ let number_stream_with_err = stream::iter(vec![Ok::<i32, i32>(1), Err(2), Ok(1)]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248793,"byte_end":248879,"line_start":720,"line_end":720,"column_start":5,"column_end":91}},{"value":"/ let sum = number_stream_with_err.try_fold(0, |acc, x| async move { Ok(acc + x) });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248884,"byte_end":248970,"line_start":721,"line_end":721,"column_start":5,"column_end":91}},{"value":"/ assert_eq!(sum.await, Err(2));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":248975,"byte_end":249009,"line_start":722,"line_end":722,"column_start":5,"column_end":39}},{"value":"/ # })","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249014,"byte_end":249022,"line_start":723,"line_end":723,"column_start":5,"column_end":13}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249027,"byte_end":249034,"line_start":724,"line_end":724,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1975},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250576,"byte_end":250586,"line_start":768,"line_end":768,"column_start":8,"column_end":18},"name":"try_concat","qualname":"::stream::try_stream::TryStreamExt::try_concat","value":"pub fn try_concat(Self) -> TryConcat<Self> where Self: Sized,\nSelf::Ok: Extend<<<Self as TryStream>::Ok as IntoIterator>::Item> +\nIntoIterator + Default","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" Attempt to concatenate all items of a stream into a single\n extendable destination, returning a future representing the end result.","sig":null,"attributes":[{"value":"/ Attempt to concatenate all items of a stream into a single","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249330,"byte_end":249392,"line_start":734,"line_end":734,"column_start":5,"column_end":67}},{"value":"/ extendable destination, returning a future representing the end result.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249397,"byte_end":249472,"line_start":735,"line_end":735,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249477,"byte_end":249480,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ This combinator will extend the first item with the contents of all","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249485,"byte_end":249556,"line_start":737,"line_end":737,"column_start":5,"column_end":76}},{"value":"/ the subsequent successful results of the stream. If the stream is empty,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249561,"byte_end":249637,"line_start":738,"line_end":738,"column_start":5,"column_end":81}},{"value":"/ the default value will be returned.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249642,"byte_end":249681,"line_start":739,"line_end":739,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249686,"byte_end":249689,"line_start":740,"line_end":740,"column_start":5,"column_end":8}},{"value":"/ Works with all collections that implement the [`Extend`](std::iter::Extend) trait.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249694,"byte_end":249780,"line_start":741,"line_end":741,"column_start":5,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249785,"byte_end":249788,"line_start":742,"line_end":742,"column_start":5,"column_end":8}},{"value":"/ This method is similar to [`concat`](crate::stream::StreamExt::concat), but will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249793,"byte_end":249877,"line_start":743,"line_end":743,"column_start":5,"column_end":89}},{"value":"/ exit early if an error is encountered in the stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249882,"byte_end":249938,"line_start":744,"line_end":744,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249943,"byte_end":249946,"line_start":745,"line_end":745,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249951,"byte_end":249965,"line_start":746,"line_end":746,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249970,"byte_end":249973,"line_start":747,"line_end":747,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249978,"byte_end":249985,"line_start":748,"line_end":748,"column_start":5,"column_end":12}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":249990,"byte_end":250031,"line_start":749,"line_end":749,"column_start":5,"column_end":46}},{"value":"/ use futures::channel::mpsc;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250036,"byte_end":250067,"line_start":750,"line_end":750,"column_start":5,"column_end":36}},{"value":"/ use futures::stream::TryStreamExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250072,"byte_end":250110,"line_start":751,"line_end":751,"column_start":5,"column_end":43}},{"value":"/ use std::thread;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250115,"byte_end":250135,"line_start":752,"line_end":752,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250140,"byte_end":250143,"line_start":753,"line_end":753,"column_start":5,"column_end":8}},{"value":"/ let (tx, rx) = mpsc::unbounded::<Result<Vec<i32>, ()>>();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250148,"byte_end":250209,"line_start":754,"line_end":754,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250214,"byte_end":250217,"line_start":755,"line_end":755,"column_start":5,"column_end":8}},{"value":"/ thread::spawn(move || {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250222,"byte_end":250249,"line_start":756,"line_end":756,"column_start":5,"column_end":32}},{"value":"/     for i in (0..3).rev() {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250254,"byte_end":250285,"line_start":757,"line_end":757,"column_start":5,"column_end":36}},{"value":"/         let n = i * 3;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250290,"byte_end":250316,"line_start":758,"line_end":758,"column_start":5,"column_end":31}},{"value":"/         tx.unbounded_send(Ok(vec![n + 1, n + 2, n + 3])).unwrap();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250321,"byte_end":250391,"line_start":759,"line_end":759,"column_start":5,"column_end":75}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250396,"byte_end":250405,"line_start":760,"line_end":760,"column_start":5,"column_end":14}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250410,"byte_end":250417,"line_start":761,"line_end":761,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250422,"byte_end":250425,"line_start":762,"line_end":762,"column_start":5,"column_end":8}},{"value":"/ let result = rx.try_concat().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250430,"byte_end":250469,"line_start":763,"line_end":763,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250474,"byte_end":250477,"line_start":764,"line_end":764,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(result, Ok(vec![7, 8, 9, 4, 5, 6, 1, 2, 3]));","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250482,"byte_end":250542,"line_start":765,"line_end":765,"column_start":5,"column_end":65}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250547,"byte_end":250556,"line_start":766,"line_end":766,"column_start":5,"column_end":14}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":250561,"byte_end":250568,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":1976},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":253829,"byte_end":253848,"line_start":849,"line_end":849,"column_start":8,"column_end":27},"name":"try_poll_next_unpin","qualname":"::stream::try_stream::TryStreamExt::try_poll_next_unpin","value":"pub fn try_poll_next_unpin(&mut Self, &mut Context)\n-> Poll<Option<Result<Self::Ok, Self::Error>>> where Self: Unpin","parent":{"krate":0,"index":1931},"children":[],"decl_id":null,"docs":" A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]\n stream types.\n","sig":null,"attributes":[{"value":"/ A convenience method for calling [`TryStream::try_poll_next`] on [`Unpin`]","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":253721,"byte_end":253799,"line_start":847,"line_end":847,"column_start":5,"column_end":83}},{"value":"/ stream types.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":253804,"byte_end":253821,"line_start":848,"line_end":848,"column_start":5,"column_end":22}}]},{"kind":"Struct","id":{"krate":0,"index":8071},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291509,"byte_end":291513,"line_start":8,"line_end":8,"column_start":12,"column_end":16},"name":"Iter","qualname":"::stream::iter::Iter","value":"Iter {  }","parent":null,"children":[{"krate":0,"index":8073}],"decl_id":null,"docs":" Stream for the [`iter`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`iter`] function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291394,"byte_end":291431,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291449,"byte_end":291497,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2007},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":292031,"byte_end":292035,"line_start":28,"line_end":28,"column_start":8,"column_end":12},"name":"iter","qualname":"::stream::iter::iter","value":"pub fn iter<I>(I) -> Iter<I::IntoIter> where I: IntoIterator","parent":null,"children":[],"decl_id":null,"docs":" Converts an `Iterator` into a `Stream` which is always ready\n to yield the next value.","sig":null,"attributes":[{"value":"/ Converts an `Iterator` into a `Stream` which is always ready","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291565,"byte_end":291629,"line_start":14,"line_end":14,"column_start":1,"column_end":65}},{"value":"/ to yield the next value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291630,"byte_end":291658,"line_start":15,"line_end":15,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291659,"byte_end":291662,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"/ Iterators in Rust don't express the ability to block, so this adapter","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291663,"byte_end":291736,"line_start":17,"line_end":17,"column_start":1,"column_end":74}},{"value":"/ simply always calls `iter.next()` and returns that.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291737,"byte_end":291792,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291793,"byte_end":291796,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291797,"byte_end":291804,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291805,"byte_end":291846,"line_start":21,"line_end":21,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291847,"byte_end":291890,"line_start":22,"line_end":22,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291891,"byte_end":291894,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::iter(vec![17, 19]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291895,"byte_end":291939,"line_start":24,"line_end":24,"column_start":1,"column_end":45}},{"value":"/ assert_eq!(vec![17, 19], stream.collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291940,"byte_end":292005,"line_start":25,"line_end":25,"column_start":1,"column_end":66}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":292006,"byte_end":292015,"line_start":26,"line_end":26,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":292016,"byte_end":292023,"line_start":27,"line_end":27,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8077},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":292677,"byte_end":292683,"line_start":8,"line_end":8,"column_start":12,"column_end":18},"name":"Repeat","qualname":"::stream::repeat::Repeat","value":"Repeat {  }","parent":null,"children":[{"krate":0,"index":8079}],"decl_id":null,"docs":" Stream for the [`repeat`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`repeat`] function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":292560,"byte_end":292599,"line_start":5,"line_end":5,"column_start":1,"column_end":40}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":292617,"byte_end":292665,"line_start":7,"line_end":7,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2025},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293207,"byte_end":293213,"line_start":26,"line_end":26,"column_start":8,"column_end":14},"name":"repeat","qualname":"::stream::repeat::repeat","value":"pub fn repeat<T>(T) -> Repeat<T> where T: Clone","parent":null,"children":[],"decl_id":null,"docs":" Create a stream which produces the same item repeatedly.","sig":null,"attributes":[{"value":"/ Create a stream which produces the same item repeatedly.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":292705,"byte_end":292765,"line_start":12,"line_end":12,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":292766,"byte_end":292769,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ The stream never terminates. Note that you likely want to avoid","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":292770,"byte_end":292837,"line_start":14,"line_end":14,"column_start":1,"column_end":68}},{"value":"/ usage of `collect` or such on the returned stream as it will exhaust","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":292838,"byte_end":292910,"line_start":15,"line_end":15,"column_start":1,"column_end":73}},{"value":"/ available memory as it tries to just fill up all RAM.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":292911,"byte_end":292968,"line_start":16,"line_end":16,"column_start":1,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":292969,"byte_end":292972,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":292973,"byte_end":292980,"line_start":18,"line_end":18,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":292981,"byte_end":293022,"line_start":19,"line_end":19,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293023,"byte_end":293066,"line_start":20,"line_end":20,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293067,"byte_end":293070,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::repeat(9);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293071,"byte_end":293106,"line_start":22,"line_end":22,"column_start":1,"column_end":36}},{"value":"/ assert_eq!(vec![9, 9, 9], stream.take(3).collect::<Vec<i32>>().await);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293107,"byte_end":293181,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293182,"byte_end":293191,"line_start":24,"line_end":24,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293192,"byte_end":293199,"line_start":25,"line_end":25,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8083},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":293998,"byte_end":294003,"line_start":9,"line_end":9,"column_start":12,"column_end":17},"name":"Empty","qualname":"::stream::empty::Empty","value":"Empty {  }","parent":null,"children":[{"krate":0,"index":8085}],"decl_id":null,"docs":" Stream for the [`empty`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`empty`] function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":293882,"byte_end":293920,"line_start":6,"line_end":6,"column_start":1,"column_end":39}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":293938,"byte_end":293986,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2049},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":294171,"byte_end":294176,"line_start":16,"line_end":16,"column_start":8,"column_end":13},"name":"empty","qualname":"::stream::empty::empty","value":"pub fn empty<T>() -> Empty<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which contains no elements.","sig":null,"attributes":[{"value":"/ Creates a stream which contains no elements.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":294041,"byte_end":294089,"line_start":13,"line_end":13,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":294090,"byte_end":294093,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Ready(None)` when polled.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":294094,"byte_end":294163,"line_start":15,"line_end":15,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":295110,"byte_end":295114,"line_start":18,"line_end":18,"column_start":8,"column_end":12},"name":"once","qualname":"::stream::once::once","value":"pub fn once<Fut: Future>(Fut) -> Once<Fut>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream of a single element.","sig":null,"attributes":[{"value":"/ Creates a stream of a single element.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":294803,"byte_end":294844,"line_start":7,"line_end":7,"column_start":1,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":294845,"byte_end":294848,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":294849,"byte_end":294856,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":294857,"byte_end":294898,"line_start":10,"line_end":10,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":294899,"byte_end":294942,"line_start":11,"line_end":11,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":294943,"byte_end":294946,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::once(async { 17 });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":294947,"byte_end":294991,"line_start":13,"line_end":13,"column_start":1,"column_end":45}},{"value":"/ let collected = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":294992,"byte_end":295047,"line_start":14,"line_end":14,"column_start":1,"column_end":56}},{"value":"/ assert_eq!(collected, vec![17]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":295048,"byte_end":295084,"line_start":15,"line_end":15,"column_start":1,"column_end":37}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":295085,"byte_end":295094,"line_start":16,"line_end":16,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":295095,"byte_end":295102,"line_start":17,"line_end":17,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8089},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":295385,"byte_end":295389,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"Once","qualname":"::stream::once::Once","value":"Once {  }","parent":null,"children":[{"krate":0,"index":8091}],"decl_id":null,"docs":" A stream which emits single element and then EOF.","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":295325,"byte_end":295373,"line_start":27,"line_end":27,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":295293,"byte_end":295307,"line_start":25,"line_end":25,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8107},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":295385,"byte_end":295389,"line_start":28,"line_end":28,"column_start":12,"column_end":16},"name":"__Once","qualname":"::stream::once::_::__Once","value":"__Once {  }","parent":null,"children":[{"krate":0,"index":8110},{"krate":0,"index":8111}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8130},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296525,"byte_end":296532,"line_start":9,"line_end":9,"column_start":12,"column_end":19},"name":"Pending","qualname":"::stream::pending::Pending","value":"Pending {  }","parent":null,"children":[{"krate":0,"index":8132}],"decl_id":null,"docs":" Stream for the [`pending()`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`pending()`] function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296405,"byte_end":296447,"line_start":6,"line_end":6,"column_start":1,"column_end":43}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296465,"byte_end":296513,"line_start":8,"line_end":8,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2099},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296708,"byte_end":296715,"line_start":16,"line_end":16,"column_start":8,"column_end":15},"name":"pending","qualname":"::stream::pending::pending","value":"pub fn pending<T>() -> Pending<T>","parent":null,"children":[],"decl_id":null,"docs":" Creates a stream which never returns any elements.","sig":null,"attributes":[{"value":"/ Creates a stream which never returns any elements.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296576,"byte_end":296630,"line_start":13,"line_end":13,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296631,"byte_end":296634,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ The returned stream will always return `Pending` when polled.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296635,"byte_end":296700,"line_start":15,"line_end":15,"column_start":1,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":2121},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297421,"byte_end":297427,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"PollFn","qualname":"::stream::poll_fn::PollFn","value":"PollFn {  }","parent":null,"children":[{"krate":0,"index":2123}],"decl_id":null,"docs":" Stream for the [`poll_fn`] function.\n","sig":null,"attributes":[{"value":"/ Stream for the [`poll_fn`] function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297320,"byte_end":297360,"line_start":8,"line_end":8,"column_start":1,"column_end":41}},{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297361,"byte_end":297409,"line_start":9,"line_end":9,"column_start":1,"column_end":49}}]},{"kind":"Function","id":{"krate":0,"index":2129},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":298115,"byte_end":298122,"line_start":40,"line_end":40,"column_start":8,"column_end":15},"name":"poll_fn","qualname":"::stream::poll_fn::poll_fn","value":"pub fn poll_fn<T, F>(F) -> PollFn<F> where F: FnMut(&mut Context) ->\nPoll<Option<T>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new stream wrapping a function returning `Poll<Option<T>>`.","sig":null,"attributes":[{"value":"/ Creates a new stream wrapping a function returning `Poll<Option<T>>`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297627,"byte_end":297700,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297701,"byte_end":297704,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"/ Polling the returned stream calls the wrapped function.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297705,"byte_end":297764,"line_start":24,"line_end":24,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297765,"byte_end":297768,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297769,"byte_end":297783,"line_start":26,"line_end":26,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297784,"byte_end":297787,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297788,"byte_end":297795,"line_start":28,"line_end":28,"column_start":1,"column_end":8}},{"value":"/ use futures::stream::poll_fn;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297796,"byte_end":297829,"line_start":29,"line_end":29,"column_start":1,"column_end":34}},{"value":"/ use futures::task::Poll;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297830,"byte_end":297858,"line_start":30,"line_end":30,"column_start":1,"column_end":29}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297859,"byte_end":297862,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ let mut counter = 1usize;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297863,"byte_end":297892,"line_start":32,"line_end":32,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297893,"byte_end":297896,"line_start":33,"line_end":33,"column_start":1,"column_end":4}},{"value":"/ let read_stream = poll_fn(move |_| -> Poll<Option<String>> {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297897,"byte_end":297961,"line_start":34,"line_end":34,"column_start":1,"column_end":65}},{"value":"/     if counter == 0 { return Poll::Ready(None); }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297962,"byte_end":298015,"line_start":35,"line_end":35,"column_start":1,"column_end":54}},{"value":"/     counter -= 1;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":298016,"byte_end":298037,"line_start":36,"line_end":36,"column_start":1,"column_end":22}},{"value":"/     Poll::Ready(Some(\"Hello, World!\".to_owned()))","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":298038,"byte_end":298091,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":298092,"byte_end":298099,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":298100,"byte_end":298107,"line_start":39,"line_end":39,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8136},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":298772,"byte_end":298778,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"Select","qualname":"::stream::select::Select","value":"Select {  }","parent":null,"children":[{"krate":0,"index":8140},{"krate":0,"index":8141},{"krate":0,"index":8139}],"decl_id":null,"docs":" Stream for the [`select()`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":298712,"byte_end":298760,"line_start":10,"line_end":10,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":298680,"byte_end":298694,"line_start":8,"line_end":8,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8164},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":298772,"byte_end":298778,"line_start":11,"line_end":11,"column_start":12,"column_end":18},"name":"__Select","qualname":"::stream::select::_::__Select","value":"__Select {  }","parent":null,"children":[{"krate":0,"index":8168},{"krate":0,"index":8169},{"krate":0,"index":8170}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":2152},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299356,"byte_end":299362,"line_start":29,"line_end":29,"column_start":8,"column_end":14},"name":"select","qualname":"::stream::select::select","value":"pub fn select<St1, St2>(St1, St2) -> Select<St1, St2> where St1: Stream,\nSt2: Stream<Item = St1::Item>","parent":null,"children":[],"decl_id":null,"docs":" This function will attempt to pull items from both streams. Each\n stream will be polled in a round-robin fashion, and whenever a stream is\n ready to yield an item that item is yielded.","sig":null,"attributes":[{"value":"/ This function will attempt to pull items from both streams. Each","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":298880,"byte_end":298948,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ stream will be polled in a round-robin fashion, and whenever a stream is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":298949,"byte_end":299025,"line_start":20,"line_end":20,"column_start":1,"column_end":77}},{"value":"/ ready to yield an item that item is yielded.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299026,"byte_end":299074,"line_start":21,"line_end":21,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299075,"byte_end":299078,"line_start":22,"line_end":22,"column_start":1,"column_end":4}},{"value":"/ After one of the two input stream completes, the remaining one will be","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299079,"byte_end":299153,"line_start":23,"line_end":23,"column_start":1,"column_end":75}},{"value":"/ polled exclusively. The returned stream completes when both input","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299154,"byte_end":299223,"line_start":24,"line_end":24,"column_start":1,"column_end":70}},{"value":"/ streams have completed.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299224,"byte_end":299251,"line_start":25,"line_end":25,"column_start":1,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299252,"byte_end":299255,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ Note that this function consumes both streams and returns a wrapped","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299256,"byte_end":299327,"line_start":27,"line_end":27,"column_start":1,"column_end":72}},{"value":"/ version of them.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299328,"byte_end":299348,"line_start":28,"line_end":28,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":2158},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299741,"byte_end":299748,"line_start":43,"line_end":43,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Select<St1, St2>>::get_ref","value":"pub fn get_ref(&Self) -> (&St1, &St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a reference to the underlying streams that this combinator is\n pulling from.\n","sig":null,"attributes":[{"value":"/ Acquires a reference to the underlying streams that this combinator is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299633,"byte_end":299707,"line_start":41,"line_end":41,"column_start":5,"column_end":79}},{"value":"/ pulling from.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299712,"byte_end":299729,"line_start":42,"line_end":42,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":2159},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300104,"byte_end":300111,"line_start":52,"line_end":52,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Select<St1, St2>>::get_mut","value":"pub fn get_mut(&mut Self) -> (&mut St1, &mut St2)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299842,"byte_end":299910,"line_start":47,"line_end":47,"column_start":5,"column_end":73}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299915,"byte_end":299946,"line_start":48,"line_end":48,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299951,"byte_end":299954,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299959,"byte_end":300032,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300037,"byte_end":300092,"line_start":51,"line_end":51,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2160},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300486,"byte_end":300497,"line_start":61,"line_end":61,"column_start":12,"column_end":23},"name":"get_pin_mut","qualname":"<Select<St1, St2>>::get_pin_mut","value":"pub fn get_pin_mut(Pin<&mut Self>) -> (Pin<&mut St1>, Pin<&mut St2>)","parent":null,"children":[],"decl_id":null,"docs":" Acquires a pinned mutable reference to the underlying streams that this\n combinator is pulling from.","sig":null,"attributes":[{"value":"/ Acquires a pinned mutable reference to the underlying streams that this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300217,"byte_end":300292,"line_start":56,"line_end":56,"column_start":5,"column_end":80}},{"value":"/ combinator is pulling from.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300297,"byte_end":300328,"line_start":57,"line_end":57,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300333,"byte_end":300336,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that care must be taken to avoid tampering with the state of the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300341,"byte_end":300414,"line_start":59,"line_end":59,"column_start":5,"column_end":78}},{"value":"/ stream which may otherwise confuse this combinator.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300419,"byte_end":300474,"line_start":60,"line_end":60,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":2161},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300903,"byte_end":300913,"line_start":70,"line_end":70,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Select<St1, St2>>::into_inner","value":"pub fn into_inner(Self) -> (St1, St2)","parent":null,"children":[],"decl_id":null,"docs":" Consumes this combinator, returning the underlying streams.","sig":null,"attributes":[{"value":"/ Consumes this combinator, returning the underlying streams.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300667,"byte_end":300730,"line_start":66,"line_end":66,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300735,"byte_end":300738,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ Note that this may discard intermediate state of this combinator, so","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300743,"byte_end":300815,"line_start":68,"line_end":68,"column_start":5,"column_end":77}},{"value":"/ care should be taken to avoid losing resources when this is called.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":300820,"byte_end":300891,"line_start":69,"line_end":69,"column_start":5,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":2188},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":304086,"byte_end":304092,"line_start":47,"line_end":47,"column_start":8,"column_end":14},"name":"unfold","qualname":"::stream::unfold::unfold","value":"pub fn unfold<T, F, Fut, Item>(T, F) -> Unfold<T, F, Fut> where F: FnMut(T) ->\nFut, Fut: Future<Output = Option<(Item, T)>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a `Stream` from a seed and a closure returning a `Future`.","sig":null,"attributes":[{"value":"/ Creates a `Stream` from a seed and a closure returning a `Future`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":302644,"byte_end":302714,"line_start":8,"line_end":8,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":302715,"byte_end":302718,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This function is the dual for the `Stream::fold()` adapter: while","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":302719,"byte_end":302788,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ `Stream::fold()` reduces a `Stream` to one single value, `unfold()` creates a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":302789,"byte_end":302870,"line_start":11,"line_end":11,"column_start":1,"column_end":82}},{"value":"/ `Stream` from a seed value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":302871,"byte_end":302902,"line_start":12,"line_end":12,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":302903,"byte_end":302906,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ `unfold()` will call the provided closure with the provided seed, then wait","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":302907,"byte_end":302986,"line_start":14,"line_end":14,"column_start":1,"column_end":80}},{"value":"/ for the returned `Future` to complete with `(a, b)`. It will then yield the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":302987,"byte_end":303066,"line_start":15,"line_end":15,"column_start":1,"column_end":80}},{"value":"/ value `a`, and use `b` as the next internal state.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303067,"byte_end":303121,"line_start":16,"line_end":16,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303122,"byte_end":303125,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ If the closure returns `None` instead of `Some(Future)`, then the `unfold()`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303126,"byte_end":303206,"line_start":18,"line_end":18,"column_start":1,"column_end":81}},{"value":"/ will stop producing items and return `Poll::Ready(None)` in future","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303207,"byte_end":303277,"line_start":19,"line_end":19,"column_start":1,"column_end":71}},{"value":"/ calls to `poll()`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303278,"byte_end":303300,"line_start":20,"line_end":20,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303301,"byte_end":303304,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ This function can typically be used when wanting to go from the \"world of","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303305,"byte_end":303382,"line_start":22,"line_end":22,"column_start":1,"column_end":78}},{"value":"/ futures\" to the \"world of streams\": the provided closure can build a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303383,"byte_end":303455,"line_start":23,"line_end":23,"column_start":1,"column_end":73}},{"value":"/ `Future` using other library functions working on futures, and `unfold()`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303456,"byte_end":303533,"line_start":24,"line_end":24,"column_start":1,"column_end":78}},{"value":"/ will turn it into a `Stream` by repeating the operation.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303534,"byte_end":303594,"line_start":25,"line_end":25,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303595,"byte_end":303598,"line_start":26,"line_end":26,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303599,"byte_end":303612,"line_start":27,"line_end":27,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303613,"byte_end":303616,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303617,"byte_end":303624,"line_start":29,"line_end":29,"column_start":1,"column_end":8}},{"value":"/ # futures::executor::block_on(async {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303625,"byte_end":303666,"line_start":30,"line_end":30,"column_start":1,"column_end":42}},{"value":"/ use futures::stream::{self, StreamExt};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303667,"byte_end":303710,"line_start":31,"line_end":31,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303711,"byte_end":303714,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"/ let stream = stream::unfold(0, |state| async move {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303715,"byte_end":303770,"line_start":33,"line_end":33,"column_start":1,"column_end":56}},{"value":"/     if state <= 2 {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303771,"byte_end":303794,"line_start":34,"line_end":34,"column_start":1,"column_end":24}},{"value":"/         let next_state = state + 1;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303795,"byte_end":303834,"line_start":35,"line_end":35,"column_start":1,"column_end":40}},{"value":"/         let yielded = state  * 2;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303835,"byte_end":303872,"line_start":36,"line_end":36,"column_start":1,"column_end":38}},{"value":"/         Some((yielded, next_state))","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303873,"byte_end":303912,"line_start":37,"line_end":37,"column_start":1,"column_end":40}},{"value":"/     } else {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303913,"byte_end":303929,"line_start":38,"line_end":38,"column_start":1,"column_end":17}},{"value":"/         None","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303930,"byte_end":303946,"line_start":39,"line_end":39,"column_start":1,"column_end":17}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303947,"byte_end":303956,"line_start":40,"line_end":40,"column_start":1,"column_end":10}},{"value":"/ });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303957,"byte_end":303964,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303965,"byte_end":303968,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ let result = stream.collect::<Vec<i32>>().await;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":303969,"byte_end":304021,"line_start":43,"line_end":43,"column_start":1,"column_end":53}},{"value":"/ assert_eq!(result, vec![0, 2, 4]);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":304022,"byte_end":304060,"line_start":44,"line_end":44,"column_start":1,"column_end":39}},{"value":"/ # });","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":304061,"byte_end":304070,"line_start":45,"line_end":45,"column_start":1,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":304071,"byte_end":304078,"line_start":46,"line_end":46,"column_start":1,"column_end":8}}]},{"kind":"Struct","id":{"krate":0,"index":8195},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":304423,"byte_end":304429,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"Unfold","qualname":"::stream::unfold::Unfold","value":"Unfold {  }","parent":null,"children":[{"krate":0,"index":8199},{"krate":0,"index":8200},{"krate":0,"index":8201}],"decl_id":null,"docs":" Stream for the [`unfold`] function.\n","sig":null,"attributes":[{"value":"must_use = \"streams do nothing unless polled\"","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":304363,"byte_end":304411,"line_start":60,"line_end":60,"column_start":1,"column_end":49}},{"value":"pin(__private())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":304348,"byte_end":304362,"line_start":59,"line_end":59,"column_start":1,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":8227},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":304423,"byte_end":304429,"line_start":61,"line_end":61,"column_start":12,"column_end":18},"name":"__Unfold","qualname":"::stream::unfold::_::__Unfold","value":"__Unfold {  }","parent":null,"children":[{"krate":0,"index":8232},{"krate":0,"index":8233}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2220},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"task","qualname":"::task","value":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","parent":null,"children":[{"krate":0,"index":8259},{"krate":0,"index":2221},{"krate":0,"index":2231},{"krate":0,"index":2232},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2235},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":2238},{"krate":0,"index":2239},{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244},{"krate":0,"index":2245},{"krate":0,"index":2246},{"krate":0,"index":2247}],"decl_id":null,"docs":" Task notification\n","sig":null,"attributes":[{"value":"! Task notification","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\mod.rs","byte_start":305849,"byte_end":305870,"line_start":1,"line_end":1,"column_start":1,"column_end":22}}]},{"kind":"Trait","id":{"krate":0,"index":2229},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\spawn.rs","byte_start":307060,"byte_end":307068,"line_start":20,"line_end":20,"column_start":11,"column_end":19},"name":"SpawnExt","qualname":"::task::spawn::SpawnExt","value":"SpawnExt: Spawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `Spawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `Spawn`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\spawn.rs","byte_start":307017,"byte_end":307049,"line_start":19,"line_end":19,"column_start":1,"column_end":33}}]},{"kind":"Trait","id":{"krate":0,"index":2230},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\spawn.rs","byte_start":309824,"byte_end":309837,"line_start":97,"line_end":97,"column_start":11,"column_end":24},"name":"LocalSpawnExt","qualname":"::task::spawn::LocalSpawnExt","value":"LocalSpawnExt: LocalSpawn","parent":null,"children":[],"decl_id":null,"docs":" Extension trait for `LocalSpawn`.\n","sig":null,"attributes":[{"value":"/ Extension trait for `LocalSpawn`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\spawn.rs","byte_start":309776,"byte_end":309813,"line_start":96,"line_end":96,"column_start":1,"column_end":38}}]},{"kind":"Mod","id":{"krate":0,"index":2248},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"never","qualname":"::never","value":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","parent":null,"children":[{"krate":0,"index":2249}],"decl_id":null,"docs":" Definition of the `Never` type,\n a stand-in for the `!` type until it becomes stable.\n","sig":null,"attributes":[{"value":"! Definition of the `Never` type,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312296,"byte_end":312331,"line_start":1,"line_end":1,"column_start":1,"column_end":36}},{"value":"! a stand-in for the `!` type until it becomes stable.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312332,"byte_end":312388,"line_start":2,"line_end":2,"column_start":1,"column_end":57}}]},{"kind":"Type","id":{"krate":0,"index":2249},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":313025,"byte_end":313030,"line_start":17,"line_end":17,"column_start":10,"column_end":15},"name":"Never","qualname":"::never::Never","value":"core::convert::Infallible","parent":null,"children":[],"decl_id":null,"docs":" A type with no possible values.","sig":null,"attributes":[{"value":"/ A type with no possible values.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312390,"byte_end":312425,"line_start":4,"line_end":4,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312426,"byte_end":312429,"line_start":5,"line_end":5,"column_start":1,"column_end":4}},{"value":"/ This is used to indicate values which can never be created, such as the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312430,"byte_end":312505,"line_start":6,"line_end":6,"column_start":1,"column_end":76}},{"value":"/ error type of infallible futures.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312506,"byte_end":312543,"line_start":7,"line_end":7,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312544,"byte_end":312547,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ This type is a stable equivalent to the `!` type from `std`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312548,"byte_end":312612,"line_start":9,"line_end":9,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312613,"byte_end":312616,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is currently an alias for [`std::convert::Infallible`], but in","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312617,"byte_end":312688,"line_start":11,"line_end":11,"column_start":1,"column_end":72}},{"value":"/ the future it may be an alias for [`!`][never].","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312689,"byte_end":312740,"line_start":12,"line_end":12,"column_start":1,"column_end":52}},{"value":"/ See [\"Future compatibility\" section of `std::convert::Infallible`][infallible] for more.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312741,"byte_end":312833,"line_start":13,"line_end":13,"column_start":1,"column_end":93}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312834,"byte_end":312837,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ [never]: https://doc.rust-lang.org/nightly/std/primitive.never.html","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312838,"byte_end":312909,"line_start":15,"line_end":15,"column_start":1,"column_end":72}},{"value":"/ [infallible]: https://doc.rust-lang.org/nightly/std/convert/enum.Infallible.html#future-compatibility","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\never.rs","byte_start":312910,"byte_end":313015,"line_start":16,"line_end":16,"column_start":1,"column_end":106}}]},{"kind":"Trait","id":{"krate":0,"index":2255},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313133,"byte_end":313140,"line_start":4,"line_end":4,"column_start":11,"column_end":18},"name":"FnOnce1","qualname":"::fns::FnOnce1","value":"FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2257},{"krate":0,"index":2258}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313155,"byte_end":313161,"line_start":5,"line_end":5,"column_start":10,"column_end":16},"name":"Output","qualname":"::fns::FnOnce1::Output","value":"type Output;","parent":{"krate":0,"index":2255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2258},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313170,"byte_end":313179,"line_start":6,"line_end":6,"column_start":8,"column_end":17},"name":"call_once","qualname":"::fns::FnOnce1::call_once","value":"pub fn call_once(Self, A) -> Self::Output","parent":{"krate":0,"index":2255},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2265},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313371,"byte_end":313377,"line_start":19,"line_end":19,"column_start":11,"column_end":17},"name":"FnMut1","qualname":"::fns::FnMut1","value":"FnMut1<A>: FnOnce1<A>","parent":null,"children":[{"krate":0,"index":2267}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2267},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313402,"byte_end":313410,"line_start":20,"line_end":20,"column_start":8,"column_end":16},"name":"call_mut","qualname":"::fns::FnMut1::call_mut","value":"pub fn call_mut(&mut Self, A) -> Self::Output","parent":{"krate":0,"index":2265},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2282},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":314714,"byte_end":314718,"line_start":74,"line_end":74,"column_start":12,"column_end":16},"name":"OkFn","qualname":"::fns::OkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8278},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":315074,"byte_end":315081,"line_start":92,"line_end":92,"column_start":12,"column_end":19},"name":"ChainFn","qualname":"::fns::ChainFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8299},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":315815,"byte_end":315828,"line_start":127,"line_end":127,"column_start":12,"column_end":25},"name":"MergeResultFn","qualname":"::fns::MergeResultFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8315},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":316170,"byte_end":316179,"line_start":141,"line_end":141,"column_start":12,"column_end":21},"name":"InspectFn","qualname":"::fns::InspectFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8330},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":317128,"byte_end":317135,"line_start":179,"line_end":179,"column_start":12,"column_end":19},"name":"MapOkFn","qualname":"::fns::MapOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8345},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":317846,"byte_end":317854,"line_start":211,"line_end":211,"column_start":12,"column_end":20},"name":"MapErrFn","qualname":"::fns::MapErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8360},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":318574,"byte_end":318585,"line_start":243,"line_end":243,"column_start":12,"column_end":23},"name":"InspectOkFn","qualname":"::fns::InspectOkFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8372},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":319403,"byte_end":319415,"line_start":275,"line_end":275,"column_start":12,"column_end":24},"name":"InspectErrFn","qualname":"::fns::InspectErrFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":8384},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":320496,"byte_end":320510,"line_start":312,"line_end":312,"column_start":12,"column_end":26},"name":"UnwrapOrElseFn","qualname":"::fns::UnwrapOrElseFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2446},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":321269,"byte_end":321275,"line_start":343,"line_end":343,"column_start":12,"column_end":18},"name":"IntoFn","qualname":"::fns::IntoFn","value":"","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]}],"impls":[{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":35979,"byte_end":35986,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":58}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":36113,"byte_end":36120,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":61}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":36354,"byte_end":36361,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":37140,"byte_end":37147,"line_start":59,"line_end":59,"column_start":27,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":68}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":37381,"byte_end":37388,"line_start":71,"line_end":71,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":71},{"krate":0,"index":72}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40358,"byte_end":40362,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40464,"byte_end":40468,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":87}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":42192,"byte_end":42196,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":42305,"byte_end":42309,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\map.rs","byte_start":43188,"byte_end":43191,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":108}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\map.rs","byte_start":43366,"byte_end":43369,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\map.rs","byte_start":43633,"byte_end":43636,"line_start":40,"line_end":40,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19279,"byte_end":19280,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\into_future.rs","byte_start":66233,"byte_end":66243,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\into_future.rs","byte_start":66408,"byte_end":66418,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":201}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\into_future.rs","byte_start":66524,"byte_end":66534,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":204},{"krate":0,"index":205}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":67187,"byte_end":67197,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":223}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":67327,"byte_end":67337,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":226}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":67590,"byte_end":67600,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":68631,"byte_end":68641,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":233}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":68894,"byte_end":68904,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72334,"byte_end":72347,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":251}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72480,"byte_end":72493,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72749,"byte_end":72762,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":258}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":48955,"byte_end":48958,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74131,"byte_end":74135,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74708,"byte_end":74712,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":324}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74844,"byte_end":74848,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75425,"byte_end":75432,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":344}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75983,"byte_end":75990,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":76135,"byte_end":76142,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":76169,"byte_end":76176,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":355}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77497,"byte_end":77506,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":78521,"byte_end":78530,"line_start":72,"line_end":72,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":376}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":78746,"byte_end":78755,"line_start":81,"line_end":81,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":379},{"krate":0,"index":380}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80176,"byte_end":80188,"line_start":29,"line_end":29,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":398},{"krate":0,"index":399}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":81230,"byte_end":81242,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":81470,"byte_end":81482,"line_start":66,"line_end":66,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":405},{"krate":0,"index":406}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\option.rs","byte_start":83006,"byte_end":83018,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":422}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\option.rs","byte_start":83351,"byte_end":83363,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":425}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\option.rs","byte_start":83546,"byte_end":83558,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":428}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":83968,"byte_end":83974,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84644,"byte_end":84650,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84792,"byte_end":84798,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85275,"byte_end":85280,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85459,"byte_end":85464,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85496,"byte_end":85501,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":471}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85598,"byte_end":85603,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":474},{"krate":0,"index":475}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92335,"byte_end":92341,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94583,"byte_end":94589,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":551},{"krate":0,"index":552}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":95292,"byte_end":95298,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":556}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":102864,"byte_end":102873,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":104579,"byte_end":104588,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106079,"byte_end":106085,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":642}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106470,"byte_end":106476,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":647}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106857,"byte_end":106863,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":650}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":107104,"byte_end":107110,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":654},{"krate":0,"index":655}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":107457,"byte_end":107463,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":659}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":107739,"byte_end":107745,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":663},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":108105,"byte_end":108111,"line_start":97,"line_end":97,"column_start":28,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":668}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\chain.rs","byte_start":164584,"byte_end":164589,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":709}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\chain.rs","byte_start":164858,"byte_end":164863,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":713}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\chain.rs","byte_start":165068,"byte_end":165073,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\collect.rs","byte_start":166622,"byte_end":166629,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":737},{"krate":0,"index":738}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\collect.rs","byte_start":166940,"byte_end":166947,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":742}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\collect.rs","byte_start":167123,"byte_end":167130,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":746},{"krate":0,"index":747}],"docs":"","sig":null,"attributes":[]},{"id":281,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\concat.rs","byte_start":168022,"byte_end":168028,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":282,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\concat.rs","byte_start":168303,"byte_end":168309,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":766},{"krate":0,"index":767}],"docs":"","sig":null,"attributes":[]},{"id":283,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\concat.rs","byte_start":169084,"byte_end":169090,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":770}],"docs":"","sig":null,"attributes":[]},{"id":289,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\enumerate.rs","byte_start":169759,"byte_end":169768,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":783},{"krate":0,"index":5539},{"krate":0,"index":5540},{"krate":0,"index":5541},{"krate":0,"index":5542}],"docs":"","sig":null,"attributes":[]},{"id":290,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\enumerate.rs","byte_start":170001,"byte_end":170010,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":786}],"docs":"","sig":null,"attributes":[]},{"id":291,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\enumerate.rs","byte_start":170128,"byte_end":170137,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":789},{"krate":0,"index":790},{"krate":0,"index":791}],"docs":"","sig":null,"attributes":[]},{"id":297,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter.rs","byte_start":171521,"byte_end":171527,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":809}],"docs":"","sig":null,"attributes":[]},{"id":298,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter.rs","byte_start":172000,"byte_end":172006,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":5611},{"krate":0,"index":5612},{"krate":0,"index":5613},{"krate":0,"index":5614}],"docs":"","sig":null,"attributes":[]},{"id":299,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter.rs","byte_start":172400,"byte_end":172406,"line_start":58,"line_end":58,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":300,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter.rs","byte_start":172755,"byte_end":172761,"line_start":69,"line_end":69,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828}],"docs":"","sig":null,"attributes":[]},{"id":306,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter_map.rs","byte_start":174910,"byte_end":174919,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":846}],"docs":"","sig":null,"attributes":[]},{"id":307,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter_map.rs","byte_start":175216,"byte_end":175225,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":851},{"krate":0,"index":5680},{"krate":0,"index":5681},{"krate":0,"index":5682},{"krate":0,"index":5683}],"docs":"","sig":null,"attributes":[]},{"id":308,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter_map.rs","byte_start":175526,"byte_end":175535,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":857}],"docs":"","sig":null,"attributes":[]},{"id":309,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter_map.rs","byte_start":175812,"byte_end":175821,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865}],"docs":"","sig":null,"attributes":[]},{"id":315,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\flatten.rs","byte_start":177898,"byte_end":177905,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":879},{"krate":0,"index":5740},{"krate":0,"index":5741},{"krate":0,"index":5742},{"krate":0,"index":5743}],"docs":"","sig":null,"attributes":[]},{"id":316,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\flatten.rs","byte_start":178074,"byte_end":178081,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":317,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\flatten.rs","byte_start":178273,"byte_end":178280,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":885},{"krate":0,"index":886}],"docs":"","sig":null,"attributes":[]},{"id":328,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fold.rs","byte_start":179722,"byte_end":179726,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":903}],"docs":"","sig":null,"attributes":[]},{"id":329,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fold.rs","byte_start":180082,"byte_end":180086,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":909}],"docs":"","sig":null,"attributes":[]},{"id":330,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fold.rs","byte_start":180419,"byte_end":180423,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":915}],"docs":"","sig":null,"attributes":[]},{"id":331,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fold.rs","byte_start":180670,"byte_end":180674,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":921},{"krate":0,"index":922}],"docs":"","sig":null,"attributes":[]},{"id":337,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\for_each.rs","byte_start":182207,"byte_end":182214,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":941}],"docs":"","sig":null,"attributes":[]},{"id":338,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\for_each.rs","byte_start":182507,"byte_end":182514,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":946}],"docs":"","sig":null,"attributes":[]},{"id":339,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\for_each.rs","byte_start":182808,"byte_end":182815,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":951}],"docs":"","sig":null,"attributes":[]},{"id":340,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\for_each.rs","byte_start":183066,"byte_end":183073,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":956},{"krate":0,"index":957}],"docs":"","sig":null,"attributes":[]},{"id":346,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184122,"byte_end":184126,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":5991},{"krate":0,"index":5992},{"krate":0,"index":5993},{"krate":0,"index":5994}],"docs":"","sig":null,"attributes":[]},{"id":347,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184627,"byte_end":184631,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":974}],"docs":"","sig":null,"attributes":[]},{"id":348,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184729,"byte_end":184733,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":977},{"krate":0,"index":978},{"krate":0,"index":979}],"docs":"","sig":null,"attributes":[]},{"id":349,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":185933,"byte_end":185945,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":993},{"krate":0,"index":994},{"krate":0,"index":995},{"krate":0,"index":996},{"krate":0,"index":997}],"docs":"","sig":null,"attributes":[]},{"id":350,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":188455,"byte_end":188467,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1000}],"docs":"","sig":null,"attributes":[]},{"id":351,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":188587,"byte_end":188599,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1003},{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":362,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\map.rs","byte_start":189447,"byte_end":189450,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1020}],"docs":"","sig":null,"attributes":[]},{"id":363,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\map.rs","byte_start":189665,"byte_end":189668,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1024},{"krate":0,"index":6128},{"krate":0,"index":6129},{"krate":0,"index":6130},{"krate":0,"index":6131}],"docs":"","sig":null,"attributes":[]},{"id":364,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\map.rs","byte_start":189842,"byte_end":189845,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1028}],"docs":"","sig":null,"attributes":[]},{"id":365,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\map.rs","byte_start":190019,"byte_end":190022,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1032},{"krate":0,"index":1033},{"krate":0,"index":1035}],"docs":"","sig":null,"attributes":[]},{"id":371,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\next.rs","byte_start":191169,"byte_end":191173,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":372,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\next.rs","byte_start":191224,"byte_end":191228,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1054}],"docs":"","sig":null,"attributes":[]},{"id":373,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\next.rs","byte_start":191379,"byte_end":191383,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":1057}],"docs":"","sig":null,"attributes":[]},{"id":374,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\next.rs","byte_start":191522,"byte_end":191526,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":1060},{"krate":0,"index":1061}],"docs":"","sig":null,"attributes":[]},{"id":375,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\select_next_some.rs","byte_start":192175,"byte_end":192189,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1076}],"docs":"","sig":null,"attributes":[]},{"id":376,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\select_next_some.rs","byte_start":192350,"byte_end":192364,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"value":"","parent":null,"children":[{"krate":0,"index":1079}],"docs":"","sig":null,"attributes":[]},{"id":377,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\select_next_some.rs","byte_start":192508,"byte_end":192522,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":1082},{"krate":0,"index":1083}],"docs":"","sig":null,"attributes":[]},{"id":383,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":193697,"byte_end":193705,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":6284},{"krate":0,"index":6285},{"krate":0,"index":6286},{"krate":0,"index":6287},{"krate":0,"index":1104},{"krate":0,"index":1105}],"docs":"","sig":null,"attributes":[]},{"id":384,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":194894,"byte_end":194902,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1108}],"docs":"","sig":null,"attributes":[]},{"id":385,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":195044,"byte_end":195052,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113}],"docs":"","sig":null,"attributes":[]},{"id":391,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":196210,"byte_end":196214,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1116}],"docs":"","sig":null,"attributes":[]},{"id":392,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":196485,"byte_end":196489,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1119}],"docs":"","sig":null,"attributes":[]},{"id":393,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":196600,"byte_end":196604,"line_start":128,"line_end":128,"column_start":25,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1123},{"krate":0,"index":1124}],"docs":"","sig":null,"attributes":[]},{"id":399,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip.rs","byte_start":197450,"byte_end":197454,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1139},{"krate":0,"index":6380},{"krate":0,"index":6381},{"krate":0,"index":6382},{"krate":0,"index":6383}],"docs":"","sig":null,"attributes":[]},{"id":400,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip.rs","byte_start":197682,"byte_end":197686,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1142}],"docs":"","sig":null,"attributes":[]},{"id":401,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip.rs","byte_start":197804,"byte_end":197808,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147}],"docs":"","sig":null,"attributes":[]},{"id":407,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip_while.rs","byte_start":199435,"byte_end":199444,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1164}],"docs":"","sig":null,"attributes":[]},{"id":408,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip_while.rs","byte_start":199896,"byte_end":199905,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":6455},{"krate":0,"index":6456},{"krate":0,"index":6457},{"krate":0,"index":6458}],"docs":"","sig":null,"attributes":[]},{"id":409,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip_while.rs","byte_start":200334,"byte_end":200343,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1174}],"docs":"","sig":null,"attributes":[]},{"id":410,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip_while.rs","byte_start":200603,"byte_end":200612,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1179},{"krate":0,"index":1180},{"krate":0,"index":1181}],"docs":"","sig":null,"attributes":[]},{"id":416,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take.rs","byte_start":202895,"byte_end":202899,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1195},{"krate":0,"index":6503},{"krate":0,"index":6504},{"krate":0,"index":6505},{"krate":0,"index":6506}],"docs":"","sig":null,"attributes":[]},{"id":417,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take.rs","byte_start":203109,"byte_end":203113,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1198},{"krate":0,"index":1199},{"krate":0,"index":1200}],"docs":"","sig":null,"attributes":[]},{"id":418,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take.rs","byte_start":204107,"byte_end":204111,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1203}],"docs":"","sig":null,"attributes":[]},{"id":424,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_while.rs","byte_start":205058,"byte_end":205067,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1220}],"docs":"","sig":null,"attributes":[]},{"id":425,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_while.rs","byte_start":205515,"byte_end":205524,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1225},{"krate":0,"index":6578},{"krate":0,"index":6579},{"krate":0,"index":6580},{"krate":0,"index":6581}],"docs":"","sig":null,"attributes":[]},{"id":426,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_while.rs","byte_start":205946,"byte_end":205955,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1230},{"krate":0,"index":1231},{"krate":0,"index":1232}],"docs":"","sig":null,"attributes":[]},{"id":427,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_while.rs","byte_start":207509,"byte_end":207518,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1237}],"docs":"","sig":null,"attributes":[]},{"id":433,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":208830,"byte_end":208839,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1253}],"docs":"","sig":null,"attributes":[]},{"id":434,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":209166,"byte_end":209175,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1257},{"krate":0,"index":6640},{"krate":0,"index":6641},{"krate":0,"index":6642},{"krate":0,"index":6643},{"krate":0,"index":1258},{"krate":0,"index":1259},{"krate":0,"index":1260}],"docs":"","sig":null,"attributes":[]},{"id":435,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":211368,"byte_end":211377,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":436,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":212409,"byte_end":212418,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1270}],"docs":"","sig":null,"attributes":[]},{"id":442,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\then.rs","byte_start":213292,"byte_end":213296,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1287}],"docs":"","sig":null,"attributes":[]},{"id":443,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\then.rs","byte_start":213586,"byte_end":213590,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1292},{"krate":0,"index":6709},{"krate":0,"index":6710},{"krate":0,"index":6711},{"krate":0,"index":6712}],"docs":"","sig":null,"attributes":[]},{"id":444,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\then.rs","byte_start":213899,"byte_end":213903,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1297}],"docs":"","sig":null,"attributes":[]},{"id":445,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\then.rs","byte_start":214141,"byte_end":214145,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1302},{"krate":0,"index":1303},{"krate":0,"index":1304}],"docs":"","sig":null,"attributes":[]},{"id":451,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216011,"byte_end":216014,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1322},{"krate":0,"index":1323},{"krate":0,"index":1324},{"krate":0,"index":1325},{"krate":0,"index":1326}],"docs":"","sig":null,"attributes":[]},{"id":452,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":217665,"byte_end":217668,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1330}],"docs":"","sig":null,"attributes":[]},{"id":453,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":217859,"byte_end":217862,"line_start":73,"line_end":73,"column_start":27,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1334},{"krate":0,"index":1335},{"krate":0,"index":1336}],"docs":"","sig":null,"attributes":[]},{"id":459,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":220519,"byte_end":220523,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1359}],"docs":"","sig":null,"attributes":[]},{"id":460,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":221009,"byte_end":221013,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1366}],"docs":"","sig":null,"attributes":[]},{"id":461,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":221177,"byte_end":221181,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1373},{"krate":0,"index":6850},{"krate":0,"index":6851},{"krate":0,"index":6852},{"krate":0,"index":6853}],"docs":"","sig":null,"attributes":[]},{"id":462,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":221648,"byte_end":221652,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1380},{"krate":0,"index":1381},{"krate":0,"index":1382}],"docs":"","sig":null,"attributes":[]},{"id":463,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":222879,"byte_end":222883,"line_start":113,"line_end":113,"column_start":40,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1389}],"docs":"","sig":null,"attributes":[]},{"id":464,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":122593,"byte_end":122594,"line_start":198,"line_end":198,"column_start":31,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":470,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\and_then.rs","byte_start":256873,"byte_end":256880,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1523}],"docs":"","sig":null,"attributes":[]},{"id":471,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\and_then.rs","byte_start":257173,"byte_end":257180,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1528},{"krate":0,"index":6919},{"krate":0,"index":6920},{"krate":0,"index":6921},{"krate":0,"index":6922}],"docs":"","sig":null,"attributes":[]},{"id":472,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\and_then.rs","byte_start":257473,"byte_end":257480,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1533},{"krate":0,"index":1534},{"krate":0,"index":1535}],"docs":"","sig":null,"attributes":[]},{"id":473,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\and_then.rs","byte_start":258658,"byte_end":258665,"line_start":84,"line_end":84,"column_start":34,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1540}],"docs":"","sig":null,"attributes":[]},{"id":494,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\into_stream.rs","byte_start":259560,"byte_end":259570,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1554},{"krate":0,"index":7192},{"krate":0,"index":7193},{"krate":0,"index":7194},{"krate":0,"index":7195}],"docs":"","sig":null,"attributes":[]},{"id":495,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\into_stream.rs","byte_start":259769,"byte_end":259779,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":1557}],"docs":"","sig":null,"attributes":[]},{"id":496,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\into_stream.rs","byte_start":259900,"byte_end":259910,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1560},{"krate":0,"index":1561},{"krate":0,"index":1562}],"docs":"","sig":null,"attributes":[]},{"id":512,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\or_else.rs","byte_start":260964,"byte_end":260970,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1580}],"docs":"","sig":null,"attributes":[]},{"id":513,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\or_else.rs","byte_start":261262,"byte_end":261268,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":7413},{"krate":0,"index":7414},{"krate":0,"index":7415},{"krate":0,"index":7416}],"docs":"","sig":null,"attributes":[]},{"id":514,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\or_else.rs","byte_start":261558,"byte_end":261564,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":1590},{"krate":0,"index":1591},{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":515,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\or_else.rs","byte_start":262877,"byte_end":262883,"line_start":88,"line_end":88,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":1597}],"docs":"","sig":null,"attributes":[]},{"id":516,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_next.rs","byte_start":263799,"byte_end":263806,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":517,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_next.rs","byte_start":263860,"byte_end":263867,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1616}],"docs":"","sig":null,"attributes":[]},{"id":518,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_next.rs","byte_start":264033,"byte_end":264040,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"value":"","parent":null,"children":[{"krate":0,"index":1619}],"docs":"","sig":null,"attributes":[]},{"id":519,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_next.rs","byte_start":264182,"byte_end":264189,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1622},{"krate":0,"index":1623}],"docs":"","sig":null,"attributes":[]},{"id":525,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_for_each.rs","byte_start":264920,"byte_end":264930,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1640}],"docs":"","sig":null,"attributes":[]},{"id":526,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_for_each.rs","byte_start":265226,"byte_end":265236,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1645}],"docs":"","sig":null,"attributes":[]},{"id":527,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_for_each.rs","byte_start":265550,"byte_end":265560,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1650},{"krate":0,"index":1651}],"docs":"","sig":null,"attributes":[]},{"id":533,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter.rs","byte_start":266887,"byte_end":266896,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":1669}],"docs":"","sig":null,"attributes":[]},{"id":534,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter.rs","byte_start":267292,"byte_end":267301,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1674},{"krate":0,"index":7558},{"krate":0,"index":7559},{"krate":0,"index":7560},{"krate":0,"index":7561}],"docs":"","sig":null,"attributes":[]},{"id":535,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter.rs","byte_start":267605,"byte_end":267614,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1679}],"docs":"","sig":null,"attributes":[]},{"id":536,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter.rs","byte_start":267883,"byte_end":267892,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1684},{"krate":0,"index":1685},{"krate":0,"index":1686}],"docs":"","sig":null,"attributes":[]},{"id":542,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":269998,"byte_end":270010,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1705}],"docs":"","sig":null,"attributes":[]},{"id":543,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":270310,"byte_end":270322,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1710},{"krate":0,"index":7627},{"krate":0,"index":7628},{"krate":0,"index":7629},{"krate":0,"index":7630}],"docs":"","sig":null,"attributes":[]},{"id":544,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":270527,"byte_end":270539,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":1716}],"docs":"","sig":null,"attributes":[]},{"id":545,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":270829,"byte_end":270841,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1722},{"krate":0,"index":1723},{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":551,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_flatten.rs","byte_start":272949,"byte_end":272959,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1738},{"krate":0,"index":7676},{"krate":0,"index":7677},{"krate":0,"index":7678},{"krate":0,"index":7679}],"docs":"","sig":null,"attributes":[]},{"id":552,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_flatten.rs","byte_start":273224,"byte_end":273234,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1741}],"docs":"","sig":null,"attributes":[]},{"id":553,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_flatten.rs","byte_start":273480,"byte_end":273490,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1744},{"krate":0,"index":1745}],"docs":"","sig":null,"attributes":[]},{"id":559,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_collect.rs","byte_start":275035,"byte_end":275045,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1763}],"docs":"","sig":null,"attributes":[]},{"id":560,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_collect.rs","byte_start":275237,"byte_end":275247,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":561,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_collect.rs","byte_start":275435,"byte_end":275445,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1771},{"krate":0,"index":1772}],"docs":"","sig":null,"attributes":[]},{"id":567,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_concat.rs","byte_start":276402,"byte_end":276411,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1784}],"docs":"","sig":null,"attributes":[]},{"id":568,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_concat.rs","byte_start":276677,"byte_end":276686,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1787},{"krate":0,"index":1788}],"docs":"","sig":null,"attributes":[]},{"id":574,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_fold.rs","byte_start":277877,"byte_end":277884,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1807}],"docs":"","sig":null,"attributes":[]},{"id":575,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_fold.rs","byte_start":278243,"byte_end":278250,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1813}],"docs":"","sig":null,"attributes":[]},{"id":576,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_fold.rs","byte_start":278608,"byte_end":278615,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1819}],"docs":"","sig":null,"attributes":[]},{"id":577,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_fold.rs","byte_start":278881,"byte_end":278888,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1825},{"krate":0,"index":1826}],"docs":"","sig":null,"attributes":[]},{"id":583,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282656,"byte_end":282665,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1846}],"docs":"","sig":null,"attributes":[]},{"id":584,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282966,"byte_end":282975,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1852},{"krate":0,"index":1853}],"docs":"","sig":null,"attributes":[]},{"id":590,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":284664,"byte_end":284676,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1873}],"docs":"","sig":null,"attributes":[]},{"id":591,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":285132,"byte_end":285144,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1878},{"krate":0,"index":7992},{"krate":0,"index":7993},{"krate":0,"index":7994},{"krate":0,"index":7995}],"docs":"","sig":null,"attributes":[]},{"id":592,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":285593,"byte_end":285605,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885}],"docs":"","sig":null,"attributes":[]},{"id":593,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":287108,"byte_end":287120,"line_start":104,"line_end":104,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1890}],"docs":"","sig":null,"attributes":[]},{"id":599,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_take_while.rs","byte_start":288268,"byte_end":288280,"line_start":27,"line_end":27,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1908}],"docs":"","sig":null,"attributes":[]},{"id":600,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_take_while.rs","byte_start":288732,"byte_end":288744,"line_start":43,"line_end":43,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1913},{"krate":0,"index":8067},{"krate":0,"index":8068},{"krate":0,"index":8069},{"krate":0,"index":8070}],"docs":"","sig":null,"attributes":[]},{"id":601,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_take_while.rs","byte_start":289179,"byte_end":289191,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1918},{"krate":0,"index":1919},{"krate":0,"index":1920}],"docs":"","sig":null,"attributes":[]},{"id":602,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_take_while.rs","byte_start":290767,"byte_end":290779,"line_start":112,"line_end":112,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1925}],"docs":"","sig":null,"attributes":[]},{"id":603,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228079,"byte_end":228080,"line_start":135,"line_end":135,"column_start":46,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":604,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291553,"byte_end":291557,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":605,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":292163,"byte_end":292167,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":2011},{"krate":0,"index":2012},{"krate":0,"index":2013}],"docs":"","sig":null,"attributes":[]},{"id":606,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293301,"byte_end":293307,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":607,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293334,"byte_end":293340,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2031},{"krate":0,"index":2032},{"krate":0,"index":2033}],"docs":"","sig":null,"attributes":[]},{"id":608,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293647,"byte_end":293653,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2036}],"docs":"","sig":null,"attributes":[]},{"id":609,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":294265,"byte_end":294270,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":610,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":294302,"byte_end":294307,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2055}],"docs":"","sig":null,"attributes":[]},{"id":611,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":294392,"byte_end":294397,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2058},{"krate":0,"index":2059},{"krate":0,"index":2060}],"docs":"","sig":null,"attributes":[]},{"id":617,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":295445,"byte_end":295449,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2078}],"docs":"","sig":null,"attributes":[]},{"id":618,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":295578,"byte_end":295582,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2081},{"krate":0,"index":2082},{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":619,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":296187,"byte_end":296191,"line_start":62,"line_end":62,"column_start":35,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2086}],"docs":"","sig":null,"attributes":[]},{"id":620,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296801,"byte_end":296808,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":621,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296840,"byte_end":296847,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2105}],"docs":"","sig":null,"attributes":[]},{"id":622,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296932,"byte_end":296939,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2108},{"krate":0,"index":2109},{"krate":0,"index":2110}],"docs":"","sig":null,"attributes":[]},{"id":623,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297464,"byte_end":297470,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":624,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297501,"byte_end":297507,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2128}],"docs":"","sig":null,"attributes":[]},{"id":625,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":298249,"byte_end":298255,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2135},{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":631,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299610,"byte_end":299616,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2158},{"krate":0,"index":2159},{"krate":0,"index":2160},{"krate":0,"index":2161}],"docs":"","sig":null,"attributes":[]},{"id":632,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":301039,"byte_end":301045,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2165}],"docs":"","sig":null,"attributes":[]},{"id":633,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":301263,"byte_end":301269,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2169},{"krate":0,"index":2170}],"docs":"","sig":null,"attributes":[]},{"id":639,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":304542,"byte_end":304548,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2197}],"docs":"","sig":null,"attributes":[]},{"id":640,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":304851,"byte_end":304857,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2203}],"docs":"","sig":null,"attributes":[]},{"id":641,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":305083,"byte_end":305089,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2209},{"krate":0,"index":2210}],"docs":"","sig":null,"attributes":[]},{"id":642,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\spawn.rs","byte_start":306932,"byte_end":306934,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":643,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\spawn.rs","byte_start":306989,"byte_end":306991,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":644,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313243,"byte_end":313244,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2263},{"krate":0,"index":2264}],"docs":"","sig":null,"attributes":[]},{"id":645,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313478,"byte_end":313479,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2272}],"docs":"","sig":null,"attributes":[]},{"id":646,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313748,"byte_end":313749,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2280}],"docs":"","sig":null,"attributes":[]},{"id":647,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":314764,"byte_end":314768,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2288}],"docs":"","sig":null,"attributes":[]},{"id":648,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":314862,"byte_end":314866,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2292},{"krate":0,"index":2293}],"docs":"","sig":null,"attributes":[]},{"id":654,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":315125,"byte_end":315132,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2298},{"krate":0,"index":2299}],"docs":"","sig":null,"attributes":[]},{"id":655,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":315355,"byte_end":315362,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2304}],"docs":"","sig":null,"attributes":[]},{"id":656,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":315553,"byte_end":315560,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2309}],"docs":"","sig":null,"attributes":[]},{"id":657,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":315865,"byte_end":315878,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2315},{"krate":0,"index":2316}],"docs":"","sig":null,"attributes":[]},{"id":663,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":316295,"byte_end":316304,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2321},{"krate":0,"index":2322}],"docs":"","sig":null,"attributes":[]},{"id":664,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":316586,"byte_end":316595,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2327}],"docs":"","sig":null,"attributes":[]},{"id":665,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":316855,"byte_end":316864,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2332}],"docs":"","sig":null,"attributes":[]},{"id":666,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":317184,"byte_end":317191,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2339},{"krate":0,"index":2340}],"docs":"","sig":null,"attributes":[]},{"id":667,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":317410,"byte_end":317417,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2346}],"docs":"","sig":null,"attributes":[]},{"id":668,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":317595,"byte_end":317602,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2352}],"docs":"","sig":null,"attributes":[]},{"id":669,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":317903,"byte_end":317911,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":2360},{"krate":0,"index":2361}],"docs":"","sig":null,"attributes":[]},{"id":670,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":318134,"byte_end":318142,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2367}],"docs":"","sig":null,"attributes":[]},{"id":671,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":318324,"byte_end":318332,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2373}],"docs":"","sig":null,"attributes":[]},{"id":672,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":318642,"byte_end":318653,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2382},{"krate":0,"index":2383}],"docs":"","sig":null,"attributes":[]},{"id":673,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":318890,"byte_end":318901,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":2389}],"docs":"","sig":null,"attributes":[]},{"id":674,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":319116,"byte_end":319127,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2395}],"docs":"","sig":null,"attributes":[]},{"id":675,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":319472,"byte_end":319484,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":2403},{"krate":0,"index":2404}],"docs":"","sig":null,"attributes":[]},{"id":676,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":319722,"byte_end":319734,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2410}],"docs":"","sig":null,"attributes":[]},{"id":677,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":319950,"byte_end":319962,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2416}],"docs":"","sig":null,"attributes":[]},{"id":678,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":320559,"byte_end":320573,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2429},{"krate":0,"index":2430}],"docs":"","sig":null,"attributes":[]},{"id":679,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":320794,"byte_end":320808,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2436}],"docs":"","sig":null,"attributes":[]},{"id":680,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":321007,"byte_end":321021,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2442}],"docs":"","sig":null,"attributes":[]},{"id":681,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":321325,"byte_end":321331,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2452}],"docs":"","sig":null,"attributes":[]},{"id":682,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":321426,"byte_end":321432,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2456},{"krate":0,"index":2457}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":11930,"byte_end":11936,"line_start":308,"line_end":308,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":13}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":12012,"byte_end":12018,"line_start":311,"line_end":311,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":676}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":12252,"byte_end":12256,"line_start":320,"line_end":320,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2220}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\lib.rs","byte_start":12267,"byte_end":12272,"line_start":322,"line_end":322,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":2248}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":35979,"byte_end":35986,"line_start":17,"line_end":17,"column_start":18,"column_end":25},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":2458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":36113,"byte_end":36120,"line_start":23,"line_end":23,"column_start":27,"column_end":34},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":2458},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":36354,"byte_end":36361,"line_start":35,"line_end":35,"column_start":22,"column_end":29},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":2458},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":37140,"byte_end":37147,"line_start":59,"line_end":59,"column_start":27,"column_end":34},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":2458},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\flatten.rs","byte_start":37381,"byte_end":37388,"line_start":71,"line_end":71,"column_start":22,"column_end":29},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":2458},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40358,"byte_end":40362,"line_start":12,"line_end":12,"column_start":11,"column_end":15},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":2529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":40464,"byte_end":40468,"line_start":18,"line_end":18,"column_start":19,"column_end":23},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":2529},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":42192,"byte_end":42196,"line_start":69,"line_end":69,"column_start":35,"column_end":39},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":2529},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\fuse.rs","byte_start":42305,"byte_end":42309,"line_start":75,"line_end":75,"column_start":30,"column_end":34},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":2529},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\map.rs","byte_start":43188,"byte_end":43191,"line_start":21,"line_end":21,"column_start":14,"column_end":17},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2573},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\map.rs","byte_start":43366,"byte_end":43369,"line_start":28,"line_end":28,"column_start":33,"column_end":36},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2573},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\map.rs","byte_start":43633,"byte_end":43636,"line_start":40,"line_end":40,"column_start":28,"column_end":31},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2573},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19279,"byte_end":19280,"line_start":119,"line_end":119,"column_start":31,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":122},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\future\\mod.rs","byte_start":19411,"byte_end":19417,"line_start":123,"line_end":123,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":8336},"to":{"krate":0,"index":123}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\into_future.rs","byte_start":66233,"byte_end":66243,"line_start":12,"line_end":12,"column_start":11,"column_end":21},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":3197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\into_future.rs","byte_start":66408,"byte_end":66418,"line_start":19,"line_end":19,"column_start":52,"column_end":62},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":3197},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\into_future.rs","byte_start":66524,"byte_end":66534,"line_start":23,"line_end":23,"column_start":33,"column_end":43},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":3197},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":67187,"byte_end":67197,"line_start":17,"line_end":17,"column_start":18,"column_end":28},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3241},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":67327,"byte_end":67337,"line_start":23,"line_end":23,"column_start":27,"column_end":37},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3241},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":67590,"byte_end":67600,"line_start":35,"line_end":35,"column_start":22,"column_end":32},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3241},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":68631,"byte_end":68641,"line_start":64,"line_end":64,"column_start":27,"column_end":37},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3241},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten.rs","byte_start":68894,"byte_end":68904,"line_start":76,"line_end":76,"column_start":22,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3241},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72334,"byte_end":72347,"line_start":14,"line_end":14,"column_start":18,"column_end":31},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72480,"byte_end":72493,"line_start":20,"line_end":20,"column_start":27,"column_end":40},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3312},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\try_flatten_err.rs","byte_start":72749,"byte_end":72762,"line_start":32,"line_end":32,"column_start":22,"column_end":35},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3312},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":48955,"byte_end":48958,"line_start":134,"line_end":134,"column_start":48,"column_end":51},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":261},"to":{"krate":0,"index":262}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_future\\mod.rs","byte_start":49041,"byte_end":49050,"line_start":137,"line_end":137,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":32},"to":{"krate":0,"index":262}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74131,"byte_end":74135,"line_start":13,"line_end":13,"column_start":19,"column_end":23},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4298},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74708,"byte_end":74712,"line_start":40,"line_end":40,"column_start":28,"column_end":32},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4298},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\lazy.rs","byte_start":74844,"byte_end":74848,"line_start":46,"line_end":46,"column_start":23,"column_end":27},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4298},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75425,"byte_end":75432,"line_start":13,"line_end":13,"column_start":25,"column_end":32},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4304},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":75983,"byte_end":75990,"line_start":41,"line_end":41,"column_start":20,"column_end":27},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":76135,"byte_end":76142,"line_start":49,"line_end":49,"column_start":19,"column_end":26},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\pending.rs","byte_start":76169,"byte_end":76176,"line_start":52,"line_end":52,"column_start":19,"column_end":26},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4304},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":77497,"byte_end":77506,"line_start":44,"line_end":44,"column_start":19,"column_end":28},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":4310},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":78521,"byte_end":78530,"line_start":72,"line_end":72,"column_start":35,"column_end":44},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":4310},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\maybe_done.rs","byte_start":78746,"byte_end":78755,"line_start":81,"line_end":81,"column_start":30,"column_end":39},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":4310},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":80176,"byte_end":80188,"line_start":29,"line_end":29,"column_start":22,"column_end":34},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":4381},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":81230,"byte_end":81242,"line_start":57,"line_end":57,"column_start":38,"column_end":50},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":4381},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_maybe_done.rs","byte_start":81470,"byte_end":81482,"line_start":66,"line_end":66,"column_start":33,"column_end":45},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":4381},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\option.rs","byte_start":83006,"byte_end":83018,"line_start":30,"line_end":30,"column_start":28,"column_end":40},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":4452},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\option.rs","byte_start":83351,"byte_end":83363,"line_start":44,"line_end":44,"column_start":38,"column_end":50},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4452},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\option.rs","byte_start":83546,"byte_end":83558,"line_start":53,"line_end":53,"column_start":29,"column_end":41},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4452},"to":{"krate":1,"index":1845}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":83968,"byte_end":83974,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84644,"byte_end":84650,"line_start":42,"line_end":42,"column_start":24,"column_end":30},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\poll_fn.rs","byte_start":84792,"byte_end":84798,"line_start":48,"line_end":48,"column_start":23,"column_end":29},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85275,"byte_end":85280,"line_start":10,"line_end":10,"column_start":9,"column_end":14},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85459,"byte_end":85464,"line_start":18,"line_end":18,"column_start":19,"column_end":24},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4499},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85496,"byte_end":85501,"line_start":20,"line_end":20,"column_start":25,"column_end":30},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4499},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\ready.rs","byte_start":85598,"byte_end":85603,"line_start":26,"line_end":26,"column_start":20,"column_end":25},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4499},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":92335,"byte_end":92341,"line_start":13,"line_end":13,"column_start":36,"column_end":42},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4893},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":94583,"byte_end":94589,"line_start":81,"line_end":81,"column_start":23,"column_end":29},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4893},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\select.rs","byte_start":95292,"byte_end":95298,"line_start":103,"line_end":103,"column_start":28,"column_end":34},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4893},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":102864,"byte_end":102873,"line_start":13,"line_end":13,"column_start":36,"column_end":45},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":5263},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\try_select.rs","byte_start":104579,"byte_end":104588,"line_start":56,"line_end":56,"column_start":37,"column_end":46},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":5263},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106079,"byte_end":106085,"line_start":20,"line_end":20,"column_start":15,"column_end":21},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":5271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106470,"byte_end":106476,"line_start":32,"line_end":32,"column_start":15,"column_end":21},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":5271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":106857,"byte_end":106863,"line_start":44,"line_end":44,"column_start":9,"column_end":15},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":5271},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":107104,"byte_end":107110,"line_start":54,"line_end":54,"column_start":23,"column_end":29},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":5271},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":107457,"byte_end":107463,"line_start":69,"line_end":69,"column_start":28,"column_end":34},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":5271},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":107739,"byte_end":107745,"line_start":82,"line_end":82,"column_start":23,"column_end":29},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":5271},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\future\\either.rs","byte_start":108105,"byte_end":108111,"line_start":97,"line_end":97,"column_start":28,"column_end":34},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":5271},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\chain.rs","byte_start":164584,"byte_end":164589,"line_start":18,"line_end":18,"column_start":16,"column_end":21},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":5340},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\chain.rs","byte_start":164858,"byte_end":164863,"line_start":30,"line_end":30,"column_start":32,"column_end":37},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":5340},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\chain.rs","byte_start":165068,"byte_end":165073,"line_start":39,"line_end":39,"column_start":27,"column_end":32},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":5340},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\collect.rs","byte_start":166622,"byte_end":166629,"line_start":18,"line_end":18,"column_start":30,"column_end":37},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":5396},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\collect.rs","byte_start":166940,"byte_end":166947,"line_start":31,"line_end":31,"column_start":29,"column_end":36},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":5396},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\collect.rs","byte_start":167123,"byte_end":167130,"line_start":40,"line_end":40,"column_start":24,"column_end":31},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":5396},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\concat.rs","byte_start":168022,"byte_end":168028,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"kind":{"Impl":{"id":281}},"from":{"krate":0,"index":5451},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\concat.rs","byte_start":168303,"byte_end":168309,"line_start":30,"line_end":30,"column_start":21,"column_end":27},"kind":{"Impl":{"id":282}},"from":{"krate":0,"index":5451},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\concat.rs","byte_start":169084,"byte_end":169090,"line_start":59,"line_end":59,"column_start":26,"column_end":32},"kind":{"Impl":{"id":283}},"from":{"krate":0,"index":5451},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\enumerate.rs","byte_start":169759,"byte_end":169768,"line_start":18,"line_end":18,"column_start":18,"column_end":27},"kind":{"Impl":{"id":289}},"from":{"krate":0,"index":5495},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\enumerate.rs","byte_start":170001,"byte_end":170010,"line_start":29,"line_end":29,"column_start":48,"column_end":57},"kind":{"Impl":{"id":290}},"from":{"krate":0,"index":5495},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\enumerate.rs","byte_start":170128,"byte_end":170137,"line_start":35,"line_end":35,"column_start":29,"column_end":38},"kind":{"Impl":{"id":291}},"from":{"krate":0,"index":5495},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter.rs","byte_start":171521,"byte_end":171527,"line_start":25,"line_end":25,"column_start":33,"column_end":39},"kind":{"Impl":{"id":297}},"from":{"krate":0,"index":5543},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter.rs","byte_start":172000,"byte_end":172006,"line_start":41,"line_end":41,"column_start":18,"column_end":24},"kind":{"Impl":{"id":298}},"from":{"krate":0,"index":5543},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter.rs","byte_start":172400,"byte_end":172406,"line_start":58,"line_end":58,"column_start":34,"column_end":40},"kind":{"Impl":{"id":299}},"from":{"krate":0,"index":5543},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter.rs","byte_start":172755,"byte_end":172761,"line_start":69,"line_end":69,"column_start":29,"column_end":35},"kind":{"Impl":{"id":300}},"from":{"krate":0,"index":5543},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter_map.rs","byte_start":174910,"byte_end":174919,"line_start":22,"line_end":22,"column_start":33,"column_end":42},"kind":{"Impl":{"id":306}},"from":{"krate":0,"index":5615},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter_map.rs","byte_start":175216,"byte_end":175225,"line_start":35,"line_end":35,"column_start":18,"column_end":27},"kind":{"Impl":{"id":307}},"from":{"krate":0,"index":5615},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter_map.rs","byte_start":175526,"byte_end":175535,"line_start":47,"line_end":47,"column_start":37,"column_end":46},"kind":{"Impl":{"id":308}},"from":{"krate":0,"index":5615},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\filter_map.rs","byte_start":175812,"byte_end":175821,"line_start":57,"line_end":57,"column_start":32,"column_end":41},"kind":{"Impl":{"id":309}},"from":{"krate":0,"index":5615},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\flatten.rs","byte_start":177898,"byte_end":177905,"line_start":19,"line_end":19,"column_start":13,"column_end":20},"kind":{"Impl":{"id":315}},"from":{"krate":0,"index":5684},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\flatten.rs","byte_start":178074,"byte_end":178081,"line_start":27,"line_end":27,"column_start":26,"column_end":33},"kind":{"Impl":{"id":316}},"from":{"krate":0,"index":5684},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\flatten.rs","byte_start":178273,"byte_end":178280,"line_start":37,"line_end":37,"column_start":21,"column_end":28},"kind":{"Impl":{"id":317}},"from":{"krate":0,"index":5684},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fold.rs","byte_start":179722,"byte_end":179726,"line_start":20,"line_end":20,"column_start":36,"column_end":40},"kind":{"Impl":{"id":328}},"from":{"krate":0,"index":5804},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fold.rs","byte_start":180082,"byte_end":180086,"line_start":35,"line_end":35,"column_start":21,"column_end":25},"kind":{"Impl":{"id":329}},"from":{"krate":0,"index":5804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fold.rs","byte_start":180419,"byte_end":180423,"line_start":50,"line_end":50,"column_start":37,"column_end":41},"kind":{"Impl":{"id":330}},"from":{"krate":0,"index":5804},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fold.rs","byte_start":180670,"byte_end":180674,"line_start":60,"line_end":60,"column_start":32,"column_end":36},"kind":{"Impl":{"id":331}},"from":{"krate":0,"index":5804},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\for_each.rs","byte_start":182207,"byte_end":182214,"line_start":19,"line_end":19,"column_start":33,"column_end":40},"kind":{"Impl":{"id":337}},"from":{"krate":0,"index":5882},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\for_each.rs","byte_start":182507,"byte_end":182514,"line_start":32,"line_end":32,"column_start":18,"column_end":25},"kind":{"Impl":{"id":338}},"from":{"krate":0,"index":5882},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\for_each.rs","byte_start":182808,"byte_end":182815,"line_start":46,"line_end":46,"column_start":34,"column_end":41},"kind":{"Impl":{"id":339}},"from":{"krate":0,"index":5882},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\for_each.rs","byte_start":183066,"byte_end":183073,"line_start":56,"line_end":56,"column_start":29,"column_end":36},"kind":{"Impl":{"id":340}},"from":{"krate":0,"index":5882},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184122,"byte_end":184126,"line_start":18,"line_end":18,"column_start":10,"column_end":14},"kind":{"Impl":{"id":346}},"from":{"krate":0,"index":5947},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184627,"byte_end":184631,"line_start":35,"line_end":35,"column_start":33,"column_end":37},"kind":{"Impl":{"id":347}},"from":{"krate":0,"index":5947},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\fuse.rs","byte_start":184729,"byte_end":184733,"line_start":41,"line_end":41,"column_start":28,"column_end":32},"kind":{"Impl":{"id":348}},"from":{"krate":0,"index":5947},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":185933,"byte_end":185945,"line_start":14,"line_end":14,"column_start":26,"column_end":38},"kind":{"Impl":{"id":349}},"from":{"krate":0,"index":5995},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":188455,"byte_end":188467,"line_start":72,"line_end":72,"column_start":42,"column_end":54},"kind":{"Impl":{"id":350}},"from":{"krate":0,"index":5995},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\into_future.rs","byte_start":188587,"byte_end":188599,"line_start":78,"line_end":78,"column_start":37,"column_end":49},"kind":{"Impl":{"id":351}},"from":{"krate":0,"index":5995},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\map.rs","byte_start":189447,"byte_end":189450,"line_start":20,"line_end":20,"column_start":28,"column_end":31},"kind":{"Impl":{"id":362}},"from":{"krate":0,"index":6077},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\map.rs","byte_start":189665,"byte_end":189668,"line_start":31,"line_end":31,"column_start":13,"column_end":16},"kind":{"Impl":{"id":363}},"from":{"krate":0,"index":6077},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\map.rs","byte_start":189842,"byte_end":189845,"line_start":39,"line_end":39,"column_start":29,"column_end":32},"kind":{"Impl":{"id":364}},"from":{"krate":0,"index":6077},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\map.rs","byte_start":190019,"byte_end":190022,"line_start":48,"line_end":48,"column_start":24,"column_end":27},"kind":{"Impl":{"id":365}},"from":{"krate":0,"index":6077},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\next.rs","byte_start":191169,"byte_end":191173,"line_start":14,"line_end":14,"column_start":36,"column_end":40},"kind":{"Impl":{"id":371}},"from":{"krate":0,"index":6224},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\next.rs","byte_start":191224,"byte_end":191228,"line_start":16,"line_end":16,"column_start":39,"column_end":43},"kind":{"Impl":{"id":372}},"from":{"krate":0,"index":6224},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\next.rs","byte_start":191379,"byte_end":191383,"line_start":22,"line_end":22,"column_start":56,"column_end":60},"kind":{"Impl":{"id":373}},"from":{"krate":0,"index":6224},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\next.rs","byte_start":191522,"byte_end":191526,"line_start":28,"line_end":28,"column_start":46,"column_end":50},"kind":{"Impl":{"id":374}},"from":{"krate":0,"index":6224},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\select_next_some.rs","byte_start":192175,"byte_end":192189,"line_start":15,"line_end":15,"column_start":22,"column_end":36},"kind":{"Impl":{"id":375}},"from":{"krate":0,"index":6232},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\select_next_some.rs","byte_start":192350,"byte_end":192364,"line_start":21,"line_end":21,"column_start":56,"column_end":70},"kind":{"Impl":{"id":376}},"from":{"krate":0,"index":6232},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\select_next_some.rs","byte_start":192508,"byte_end":192522,"line_start":27,"line_end":27,"column_start":51,"column_end":65},"kind":{"Impl":{"id":377}},"from":{"krate":0,"index":6232},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":193697,"byte_end":193705,"line_start":25,"line_end":25,"column_start":18,"column_end":26},"kind":{"Impl":{"id":383}},"from":{"krate":0,"index":6240},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":194894,"byte_end":194902,"line_start":63,"line_end":63,"column_start":34,"column_end":42},"kind":{"Impl":{"id":384}},"from":{"krate":0,"index":6240},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":195044,"byte_end":195052,"line_start":69,"line_end":69,"column_start":28,"column_end":36},"kind":{"Impl":{"id":385}},"from":{"krate":0,"index":6240},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":196210,"byte_end":196214,"line_start":110,"line_end":110,"column_start":25,"column_end":29},"kind":{"Impl":{"id":391}},"from":{"krate":0,"index":6288},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":196485,"byte_end":196489,"line_start":122,"line_end":122,"column_start":34,"column_end":38},"kind":{"Impl":{"id":392}},"from":{"krate":0,"index":6288},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\peek.rs","byte_start":196600,"byte_end":196604,"line_start":128,"line_end":128,"column_start":25,"column_end":29},"kind":{"Impl":{"id":393}},"from":{"krate":0,"index":6288},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip.rs","byte_start":197450,"byte_end":197454,"line_start":18,"line_end":18,"column_start":18,"column_end":22},"kind":{"Impl":{"id":399}},"from":{"krate":0,"index":6336},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip.rs","byte_start":197682,"byte_end":197686,"line_start":29,"line_end":29,"column_start":39,"column_end":43},"kind":{"Impl":{"id":400}},"from":{"krate":0,"index":6336},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip.rs","byte_start":197804,"byte_end":197808,"line_start":35,"line_end":35,"column_start":29,"column_end":33},"kind":{"Impl":{"id":401}},"from":{"krate":0,"index":6336},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip_while.rs","byte_start":199435,"byte_end":199444,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":407}},"from":{"krate":0,"index":6384},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip_while.rs","byte_start":199896,"byte_end":199905,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":408}},"from":{"krate":0,"index":6384},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip_while.rs","byte_start":200334,"byte_end":200343,"line_start":57,"line_end":57,"column_start":34,"column_end":43},"kind":{"Impl":{"id":409}},"from":{"krate":0,"index":6384},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\skip_while.rs","byte_start":200603,"byte_end":200612,"line_start":67,"line_end":67,"column_start":29,"column_end":38},"kind":{"Impl":{"id":410}},"from":{"krate":0,"index":6384},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take.rs","byte_start":202895,"byte_end":202899,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":{"Impl":{"id":416}},"from":{"krate":0,"index":6459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take.rs","byte_start":203109,"byte_end":203113,"line_start":30,"line_end":30,"column_start":21,"column_end":25},"kind":{"Impl":{"id":417}},"from":{"krate":0,"index":6459},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take.rs","byte_start":204107,"byte_end":204111,"line_start":71,"line_end":71,"column_start":26,"column_end":30},"kind":{"Impl":{"id":418}},"from":{"krate":0,"index":6459},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_while.rs","byte_start":205058,"byte_end":205067,"line_start":23,"line_end":23,"column_start":33,"column_end":42},"kind":{"Impl":{"id":424}},"from":{"krate":0,"index":6507},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_while.rs","byte_start":205515,"byte_end":205524,"line_start":39,"line_end":39,"column_start":18,"column_end":27},"kind":{"Impl":{"id":425}},"from":{"krate":0,"index":6507},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_while.rs","byte_start":205946,"byte_end":205955,"line_start":57,"line_end":57,"column_start":29,"column_end":38},"kind":{"Impl":{"id":426}},"from":{"krate":0,"index":6507},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_while.rs","byte_start":207509,"byte_end":207518,"line_start":109,"line_end":109,"column_start":34,"column_end":43},"kind":{"Impl":{"id":427}},"from":{"krate":0,"index":6507},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":208830,"byte_end":208839,"line_start":28,"line_end":28,"column_start":30,"column_end":39},"kind":{"Impl":{"id":433}},"from":{"krate":0,"index":6582},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":209166,"byte_end":209175,"line_start":42,"line_end":42,"column_start":15,"column_end":24},"kind":{"Impl":{"id":434}},"from":{"krate":0,"index":6582},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":211368,"byte_end":211377,"line_start":117,"line_end":117,"column_start":26,"column_end":35},"kind":{"Impl":{"id":435}},"from":{"krate":0,"index":6582},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\take_until.rs","byte_start":212409,"byte_end":212418,"line_start":156,"line_end":156,"column_start":31,"column_end":40},"kind":{"Impl":{"id":436}},"from":{"krate":0,"index":6582},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\then.rs","byte_start":213292,"byte_end":213296,"line_start":21,"line_end":21,"column_start":33,"column_end":37},"kind":{"Impl":{"id":442}},"from":{"krate":0,"index":6644},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\then.rs","byte_start":213586,"byte_end":213590,"line_start":34,"line_end":34,"column_start":18,"column_end":22},"kind":{"Impl":{"id":443}},"from":{"krate":0,"index":6644},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\then.rs","byte_start":213899,"byte_end":213903,"line_start":49,"line_end":49,"column_start":34,"column_end":38},"kind":{"Impl":{"id":444}},"from":{"krate":0,"index":6644},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\then.rs","byte_start":214141,"byte_end":214145,"line_start":59,"line_end":59,"column_start":29,"column_end":33},"kind":{"Impl":{"id":445}},"from":{"krate":0,"index":6644},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":216011,"byte_end":216014,"line_start":21,"line_end":21,"column_start":32,"column_end":35},"kind":{"Impl":{"id":451}},"from":{"krate":0,"index":6713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":217665,"byte_end":217668,"line_start":65,"line_end":65,"column_start":32,"column_end":35},"kind":{"Impl":{"id":452}},"from":{"krate":0,"index":6713},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\zip.rs","byte_start":217859,"byte_end":217862,"line_start":73,"line_end":73,"column_start":27,"column_end":30},"kind":{"Impl":{"id":453}},"from":{"krate":0,"index":6713},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":220519,"byte_end":220523,"line_start":26,"line_end":26,"column_start":36,"column_end":40},"kind":{"Impl":{"id":459}},"from":{"krate":0,"index":6775},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":221009,"byte_end":221013,"line_start":43,"line_end":43,"column_start":29,"column_end":33},"kind":{"Impl":{"id":460}},"from":{"krate":0,"index":6775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":221177,"byte_end":221181,"line_start":50,"line_end":50,"column_start":24,"column_end":28},"kind":{"Impl":{"id":461}},"from":{"krate":0,"index":6775},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":221648,"byte_end":221652,"line_start":70,"line_end":70,"column_start":35,"column_end":39},"kind":{"Impl":{"id":462}},"from":{"krate":0,"index":6775},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\scan.rs","byte_start":222879,"byte_end":222883,"line_start":113,"line_end":113,"column_start":40,"column_end":44},"kind":{"Impl":{"id":463}},"from":{"krate":0,"index":6775},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":122593,"byte_end":122594,"line_start":198,"line_end":198,"column_start":31,"column_end":32},"kind":{"Impl":{"id":464}},"from":{"krate":0,"index":1393},"to":{"krate":0,"index":1394}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\stream\\mod.rs","byte_start":122737,"byte_end":122743,"line_start":202,"line_end":202,"column_start":22,"column_end":28},"kind":"SuperTrait","from":{"krate":4,"index":68},"to":{"krate":0,"index":1394}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\and_then.rs","byte_start":256873,"byte_end":256880,"line_start":21,"line_end":21,"column_start":33,"column_end":40},"kind":{"Impl":{"id":470}},"from":{"krate":0,"index":6854},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\and_then.rs","byte_start":257173,"byte_end":257180,"line_start":34,"line_end":34,"column_start":18,"column_end":25},"kind":{"Impl":{"id":471}},"from":{"krate":0,"index":6854},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\and_then.rs","byte_start":257473,"byte_end":257480,"line_start":46,"line_end":46,"column_start":29,"column_end":36},"kind":{"Impl":{"id":472}},"from":{"krate":0,"index":6854},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\and_then.rs","byte_start":258658,"byte_end":258665,"line_start":84,"line_end":84,"column_start":34,"column_end":41},"kind":{"Impl":{"id":473}},"from":{"krate":0,"index":6854},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\into_stream.rs","byte_start":259560,"byte_end":259570,"line_start":17,"line_end":17,"column_start":10,"column_end":20},"kind":{"Impl":{"id":494}},"from":{"krate":0,"index":7151},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\into_stream.rs","byte_start":259769,"byte_end":259779,"line_start":26,"line_end":26,"column_start":51,"column_end":61},"kind":{"Impl":{"id":495}},"from":{"krate":0,"index":7151},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\into_stream.rs","byte_start":259900,"byte_end":259910,"line_start":32,"line_end":32,"column_start":32,"column_end":42},"kind":{"Impl":{"id":496}},"from":{"krate":0,"index":7151},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\or_else.rs","byte_start":260964,"byte_end":260970,"line_start":21,"line_end":21,"column_start":33,"column_end":39},"kind":{"Impl":{"id":512}},"from":{"krate":0,"index":7348},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\or_else.rs","byte_start":261262,"byte_end":261268,"line_start":34,"line_end":34,"column_start":18,"column_end":24},"kind":{"Impl":{"id":513}},"from":{"krate":0,"index":7348},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\or_else.rs","byte_start":261558,"byte_end":261564,"line_start":46,"line_end":46,"column_start":29,"column_end":35},"kind":{"Impl":{"id":514}},"from":{"krate":0,"index":7348},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\or_else.rs","byte_start":262877,"byte_end":262883,"line_start":88,"line_end":88,"column_start":34,"column_end":40},"kind":{"Impl":{"id":515}},"from":{"krate":0,"index":7348},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_next.rs","byte_start":263799,"byte_end":263806,"line_start":14,"line_end":14,"column_start":36,"column_end":43},"kind":{"Impl":{"id":516}},"from":{"krate":0,"index":7417},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_next.rs","byte_start":263860,"byte_end":263867,"line_start":16,"line_end":16,"column_start":42,"column_end":49},"kind":{"Impl":{"id":517}},"from":{"krate":0,"index":7417},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_next.rs","byte_start":264033,"byte_end":264040,"line_start":22,"line_end":22,"column_start":68,"column_end":75},"kind":{"Impl":{"id":518}},"from":{"krate":0,"index":7417},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_next.rs","byte_start":264182,"byte_end":264189,"line_start":28,"line_end":28,"column_start":49,"column_end":56},"kind":{"Impl":{"id":519}},"from":{"krate":0,"index":7417},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_for_each.rs","byte_start":264920,"byte_end":264930,"line_start":19,"line_end":19,"column_start":33,"column_end":43},"kind":{"Impl":{"id":525}},"from":{"krate":0,"index":7425},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_for_each.rs","byte_start":265226,"byte_end":265236,"line_start":32,"line_end":32,"column_start":18,"column_end":28},"kind":{"Impl":{"id":526}},"from":{"krate":0,"index":7425},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_for_each.rs","byte_start":265550,"byte_end":265560,"line_start":46,"line_end":46,"column_start":29,"column_end":39},"kind":{"Impl":{"id":527}},"from":{"krate":0,"index":7425},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter.rs","byte_start":266887,"byte_end":266896,"line_start":25,"line_end":25,"column_start":33,"column_end":42},"kind":{"Impl":{"id":533}},"from":{"krate":0,"index":7490},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter.rs","byte_start":267292,"byte_end":267301,"line_start":40,"line_end":40,"column_start":18,"column_end":27},"kind":{"Impl":{"id":534}},"from":{"krate":0,"index":7490},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter.rs","byte_start":267605,"byte_end":267614,"line_start":55,"line_end":55,"column_start":34,"column_end":43},"kind":{"Impl":{"id":535}},"from":{"krate":0,"index":7490},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter.rs","byte_start":267883,"byte_end":267892,"line_start":65,"line_end":65,"column_start":29,"column_end":38},"kind":{"Impl":{"id":536}},"from":{"krate":0,"index":7490},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":269998,"byte_end":270010,"line_start":22,"line_end":22,"column_start":33,"column_end":45},"kind":{"Impl":{"id":542}},"from":{"krate":0,"index":7562},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":270310,"byte_end":270322,"line_start":35,"line_end":35,"column_start":18,"column_end":30},"kind":{"Impl":{"id":543}},"from":{"krate":0,"index":7562},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":270527,"byte_end":270539,"line_start":43,"line_end":43,"column_start":37,"column_end":49},"kind":{"Impl":{"id":544}},"from":{"krate":0,"index":7562},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_filter_map.rs","byte_start":270829,"byte_end":270841,"line_start":53,"line_end":53,"column_start":32,"column_end":44},"kind":{"Impl":{"id":545}},"from":{"krate":0,"index":7562},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_flatten.rs","byte_start":272949,"byte_end":272959,"line_start":22,"line_end":22,"column_start":10,"column_end":20},"kind":{"Impl":{"id":551}},"from":{"krate":0,"index":7631},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_flatten.rs","byte_start":273224,"byte_end":273234,"line_start":35,"line_end":35,"column_start":26,"column_end":36},"kind":{"Impl":{"id":552}},"from":{"krate":0,"index":7631},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_flatten.rs","byte_start":273480,"byte_end":273490,"line_start":46,"line_end":46,"column_start":21,"column_end":31},"kind":{"Impl":{"id":553}},"from":{"krate":0,"index":7631},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_collect.rs","byte_start":275035,"byte_end":275045,"line_start":18,"line_end":18,"column_start":33,"column_end":43},"kind":{"Impl":{"id":559}},"from":{"krate":0,"index":7680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_collect.rs","byte_start":275237,"byte_end":275247,"line_start":27,"line_end":27,"column_start":29,"column_end":39},"kind":{"Impl":{"id":560}},"from":{"krate":0,"index":7680},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_collect.rs","byte_start":275435,"byte_end":275445,"line_start":37,"line_end":37,"column_start":24,"column_end":34},"kind":{"Impl":{"id":561}},"from":{"krate":0,"index":7680},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_concat.rs","byte_start":276402,"byte_end":276411,"line_start":17,"line_end":17,"column_start":10,"column_end":19},"kind":{"Impl":{"id":567}},"from":{"krate":0,"index":7735},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_concat.rs","byte_start":276677,"byte_end":276686,"line_start":30,"line_end":30,"column_start":21,"column_end":30},"kind":{"Impl":{"id":568}},"from":{"krate":0,"index":7735},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_fold.rs","byte_start":277877,"byte_end":277884,"line_start":20,"line_end":20,"column_start":36,"column_end":43},"kind":{"Impl":{"id":574}},"from":{"krate":0,"index":7779},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_fold.rs","byte_start":278243,"byte_end":278250,"line_start":35,"line_end":35,"column_start":21,"column_end":28},"kind":{"Impl":{"id":575}},"from":{"krate":0,"index":7779},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_fold.rs","byte_start":278608,"byte_end":278615,"line_start":50,"line_end":50,"column_start":37,"column_end":44},"kind":{"Impl":{"id":576}},"from":{"krate":0,"index":7779},"to":{"krate":4,"index":17}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_fold.rs","byte_start":278881,"byte_end":278888,"line_start":60,"line_end":60,"column_start":32,"column_end":39},"kind":{"Impl":{"id":577}},"from":{"krate":0,"index":7779},"to":{"krate":1,"index":8336}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282656,"byte_end":282665,"line_start":79,"line_end":79,"column_start":32,"column_end":41},"kind":{"Impl":{"id":583}},"from":{"krate":0,"index":7857},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_unfold.rs","byte_start":282966,"byte_end":282975,"line_start":92,"line_end":92,"column_start":34,"column_end":43},"kind":{"Impl":{"id":584}},"from":{"krate":0,"index":7857},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":284664,"byte_end":284676,"line_start":24,"line_end":24,"column_start":33,"column_end":45},"kind":{"Impl":{"id":590}},"from":{"krate":0,"index":7921},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":285132,"byte_end":285144,"line_start":40,"line_end":40,"column_start":18,"column_end":30},"kind":{"Impl":{"id":591}},"from":{"krate":0,"index":7921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":285593,"byte_end":285605,"line_start":58,"line_end":58,"column_start":29,"column_end":41},"kind":{"Impl":{"id":592}},"from":{"krate":0,"index":7921},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_skip_while.rs","byte_start":287108,"byte_end":287120,"line_start":104,"line_end":104,"column_start":34,"column_end":46},"kind":{"Impl":{"id":593}},"from":{"krate":0,"index":7921},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_take_while.rs","byte_start":288268,"byte_end":288280,"line_start":27,"line_end":27,"column_start":33,"column_end":45},"kind":{"Impl":{"id":599}},"from":{"krate":0,"index":7996},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_take_while.rs","byte_start":288732,"byte_end":288744,"line_start":43,"line_end":43,"column_start":18,"column_end":30},"kind":{"Impl":{"id":600}},"from":{"krate":0,"index":7996},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_take_while.rs","byte_start":289179,"byte_end":289191,"line_start":62,"line_end":62,"column_start":29,"column_end":41},"kind":{"Impl":{"id":601}},"from":{"krate":0,"index":7996},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\try_take_while.rs","byte_start":290767,"byte_end":290779,"line_start":112,"line_end":112,"column_start":34,"column_end":46},"kind":{"Impl":{"id":602}},"from":{"krate":0,"index":7996},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228079,"byte_end":228080,"line_start":135,"line_end":135,"column_start":46,"column_end":47},"kind":{"Impl":{"id":603}},"from":{"krate":0,"index":1930},"to":{"krate":0,"index":1931}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\try_stream\\mod.rs","byte_start":228161,"byte_end":228170,"line_start":138,"line_end":138,"column_start":25,"column_end":34},"kind":"SuperTrait","from":{"krate":4,"index":97},"to":{"krate":0,"index":1931}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":291553,"byte_end":291557,"line_start":12,"line_end":12,"column_start":19,"column_end":23},"kind":{"Impl":{"id":604}},"from":{"krate":0,"index":8071},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\iter.rs","byte_start":292163,"byte_end":292167,"line_start":36,"line_end":36,"column_start":20,"column_end":24},"kind":{"Impl":{"id":605}},"from":{"krate":0,"index":8071},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293301,"byte_end":293307,"line_start":32,"line_end":32,"column_start":19,"column_end":25},"kind":{"Impl":{"id":606}},"from":{"krate":0,"index":8077},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293334,"byte_end":293340,"line_start":34,"line_end":34,"column_start":20,"column_end":26},"kind":{"Impl":{"id":607}},"from":{"krate":0,"index":8077},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\repeat.rs","byte_start":293647,"byte_end":293653,"line_start":48,"line_end":48,"column_start":25,"column_end":31},"kind":{"Impl":{"id":608}},"from":{"krate":0,"index":8077},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":294265,"byte_end":294270,"line_start":22,"line_end":22,"column_start":19,"column_end":24},"kind":{"Impl":{"id":609}},"from":{"krate":0,"index":8083},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":294302,"byte_end":294307,"line_start":24,"line_end":24,"column_start":25,"column_end":30},"kind":{"Impl":{"id":610}},"from":{"krate":0,"index":8083},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\empty.rs","byte_start":294392,"byte_end":294397,"line_start":30,"line_end":30,"column_start":20,"column_end":25},"kind":{"Impl":{"id":611}},"from":{"krate":0,"index":8083},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":295445,"byte_end":295449,"line_start":33,"line_end":33,"column_start":11,"column_end":15},"kind":{"Impl":{"id":617}},"from":{"krate":0,"index":8089},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":295578,"byte_end":295582,"line_start":39,"line_end":39,"column_start":30,"column_end":34},"kind":{"Impl":{"id":618}},"from":{"krate":0,"index":8089},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\once.rs","byte_start":296187,"byte_end":296191,"line_start":62,"line_end":62,"column_start":35,"column_end":39},"kind":{"Impl":{"id":619}},"from":{"krate":0,"index":8089},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296801,"byte_end":296808,"line_start":20,"line_end":20,"column_start":19,"column_end":26},"kind":{"Impl":{"id":620}},"from":{"krate":0,"index":8130},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296840,"byte_end":296847,"line_start":22,"line_end":22,"column_start":25,"column_end":32},"kind":{"Impl":{"id":621}},"from":{"krate":0,"index":8130},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\pending.rs","byte_start":296932,"byte_end":296939,"line_start":28,"line_end":28,"column_start":20,"column_end":27},"kind":{"Impl":{"id":622}},"from":{"krate":0,"index":8130},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297464,"byte_end":297470,"line_start":14,"line_end":14,"column_start":19,"column_end":25},"kind":{"Impl":{"id":623}},"from":{"krate":0,"index":2121},"to":{"krate":1,"index":1968}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":297501,"byte_end":297507,"line_start":16,"line_end":16,"column_start":24,"column_end":30},"kind":{"Impl":{"id":624}},"from":{"krate":0,"index":2121},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\poll_fn.rs","byte_start":298249,"byte_end":298255,"line_start":47,"line_end":47,"column_start":23,"column_end":29},"kind":{"Impl":{"id":625}},"from":{"krate":0,"index":2121},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":299610,"byte_end":299616,"line_start":40,"line_end":40,"column_start":16,"column_end":22},"kind":{"Impl":{"id":631}},"from":{"krate":0,"index":8136},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":301039,"byte_end":301045,"line_start":75,"line_end":75,"column_start":32,"column_end":38},"kind":{"Impl":{"id":632}},"from":{"krate":0,"index":8136},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\select.rs","byte_start":301263,"byte_end":301269,"line_start":84,"line_end":84,"column_start":27,"column_end":33},"kind":{"Impl":{"id":633}},"from":{"krate":0,"index":8136},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":304542,"byte_end":304548,"line_start":68,"line_end":68,"column_start":32,"column_end":38},"kind":{"Impl":{"id":639}},"from":{"krate":0,"index":8195},"to":{"krate":1,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":304851,"byte_end":304857,"line_start":81,"line_end":81,"column_start":39,"column_end":45},"kind":{"Impl":{"id":640}},"from":{"krate":0,"index":8195},"to":{"krate":4,"index":82}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\stream\\unfold.rs","byte_start":305083,"byte_end":305089,"line_start":90,"line_end":90,"column_start":34,"column_end":40},"kind":{"Impl":{"id":641}},"from":{"krate":0,"index":8195},"to":{"krate":4,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\spawn.rs","byte_start":306932,"byte_end":306934,"line_start":16,"line_end":16,"column_start":31,"column_end":33},"kind":{"Impl":{"id":642}},"from":{"krate":0,"index":2226},"to":{"krate":0,"index":2229}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\spawn.rs","byte_start":306989,"byte_end":306991,"line_start":17,"line_end":17,"column_start":36,"column_end":38},"kind":{"Impl":{"id":643}},"from":{"krate":0,"index":2228},"to":{"krate":0,"index":2230}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\spawn.rs","byte_start":307070,"byte_end":307075,"line_start":20,"line_end":20,"column_start":21,"column_end":26},"kind":"SuperTrait","from":{"krate":16,"index":10},"to":{"krate":0,"index":2229}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\task\\spawn.rs","byte_start":309839,"byte_end":309849,"line_start":97,"line_end":97,"column_start":26,"column_end":36},"kind":"SuperTrait","from":{"krate":16,"index":13},"to":{"krate":0,"index":2230}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313243,"byte_end":313244,"line_start":9,"line_end":9,"column_start":30,"column_end":31},"kind":{"Impl":{"id":644}},"from":{"krate":0,"index":2260},"to":{"krate":0,"index":2255}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313382,"byte_end":313389,"line_start":19,"line_end":19,"column_start":22,"column_end":29},"kind":"SuperTrait","from":{"krate":0,"index":2255},"to":{"krate":0,"index":2265}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313478,"byte_end":313479,"line_start":23,"line_end":23,"column_start":29,"column_end":30},"kind":{"Impl":{"id":645}},"from":{"krate":0,"index":2269},"to":{"krate":0,"index":2265}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313664,"byte_end":313670,"line_start":34,"line_end":34,"column_start":19,"column_end":25},"kind":"SuperTrait","from":{"krate":0,"index":2265},"to":{"krate":0,"index":2273}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":313748,"byte_end":313749,"line_start":38,"line_end":38,"column_start":26,"column_end":27},"kind":{"Impl":{"id":646}},"from":{"krate":0,"index":2277},"to":{"krate":0,"index":2273}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":314764,"byte_end":314768,"line_start":76,"line_end":76,"column_start":21,"column_end":25},"kind":{"Impl":{"id":647}},"from":{"krate":0,"index":2282},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":314862,"byte_end":314866,"line_start":82,"line_end":82,"column_start":27,"column_end":31},"kind":{"Impl":{"id":648}},"from":{"krate":0,"index":2282},"to":{"krate":0,"index":2255}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":315125,"byte_end":315132,"line_start":94,"line_end":94,"column_start":30,"column_end":37},"kind":{"Impl":{"id":654}},"from":{"krate":0,"index":8278},"to":{"krate":0,"index":2255}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":315355,"byte_end":315362,"line_start":104,"line_end":104,"column_start":29,"column_end":36},"kind":{"Impl":{"id":655}},"from":{"krate":0,"index":8278},"to":{"krate":0,"index":2265}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":315553,"byte_end":315560,"line_start":113,"line_end":113,"column_start":26,"column_end":33},"kind":{"Impl":{"id":656}},"from":{"krate":0,"index":8278},"to":{"krate":0,"index":2273}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":315865,"byte_end":315878,"line_start":129,"line_end":129,"column_start":35,"column_end":48},"kind":{"Impl":{"id":657}},"from":{"krate":0,"index":8299},"to":{"krate":0,"index":2255}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":316295,"byte_end":316304,"line_start":144,"line_end":144,"column_start":27,"column_end":36},"kind":{"Impl":{"id":663}},"from":{"krate":0,"index":8315},"to":{"krate":0,"index":2255}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":316586,"byte_end":316595,"line_start":155,"line_end":155,"column_start":26,"column_end":35},"kind":{"Impl":{"id":664}},"from":{"krate":0,"index":8315},"to":{"krate":0,"index":2265}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":316855,"byte_end":316864,"line_start":165,"line_end":165,"column_start":23,"column_end":32},"kind":{"Impl":{"id":665}},"from":{"krate":0,"index":8315},"to":{"krate":0,"index":2273}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":317184,"byte_end":317191,"line_start":181,"line_end":181,"column_start":41,"column_end":48},"kind":{"Impl":{"id":666}},"from":{"krate":0,"index":8330},"to":{"krate":0,"index":2255}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":317410,"byte_end":317417,"line_start":190,"line_end":190,"column_start":40,"column_end":47},"kind":{"Impl":{"id":667}},"from":{"krate":0,"index":8330},"to":{"krate":0,"index":2265}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":317595,"byte_end":317602,"line_start":198,"line_end":198,"column_start":37,"column_end":44},"kind":{"Impl":{"id":668}},"from":{"krate":0,"index":8330},"to":{"krate":0,"index":2273}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":317903,"byte_end":317911,"line_start":213,"line_end":213,"column_start":41,"column_end":49},"kind":{"Impl":{"id":669}},"from":{"krate":0,"index":8345},"to":{"krate":0,"index":2255}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":318134,"byte_end":318142,"line_start":222,"line_end":222,"column_start":40,"column_end":48},"kind":{"Impl":{"id":670}},"from":{"krate":0,"index":8345},"to":{"krate":0,"index":2265}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":318324,"byte_end":318332,"line_start":230,"line_end":230,"column_start":37,"column_end":45},"kind":{"Impl":{"id":671}},"from":{"krate":0,"index":8345},"to":{"krate":0,"index":2273}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":318642,"byte_end":318653,"line_start":245,"line_end":245,"column_start":49,"column_end":60},"kind":{"Impl":{"id":672}},"from":{"krate":0,"index":8360},"to":{"krate":0,"index":2255}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":318890,"byte_end":318901,"line_start":254,"line_end":254,"column_start":48,"column_end":59},"kind":{"Impl":{"id":673}},"from":{"krate":0,"index":8360},"to":{"krate":0,"index":2265}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":319116,"byte_end":319127,"line_start":262,"line_end":262,"column_start":45,"column_end":56},"kind":{"Impl":{"id":674}},"from":{"krate":0,"index":8360},"to":{"krate":0,"index":2273}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":319472,"byte_end":319484,"line_start":277,"line_end":277,"column_start":49,"column_end":61},"kind":{"Impl":{"id":675}},"from":{"krate":0,"index":8372},"to":{"krate":0,"index":2255}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":319722,"byte_end":319734,"line_start":286,"line_end":286,"column_start":48,"column_end":60},"kind":{"Impl":{"id":676}},"from":{"krate":0,"index":8372},"to":{"krate":0,"index":2265}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":319950,"byte_end":319962,"line_start":294,"line_end":294,"column_start":45,"column_end":57},"kind":{"Impl":{"id":677}},"from":{"krate":0,"index":8372},"to":{"krate":0,"index":2273}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":320559,"byte_end":320573,"line_start":314,"line_end":314,"column_start":41,"column_end":55},"kind":{"Impl":{"id":678}},"from":{"krate":0,"index":8384},"to":{"krate":0,"index":2255}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":320794,"byte_end":320808,"line_start":323,"line_end":323,"column_start":40,"column_end":54},"kind":{"Impl":{"id":679}},"from":{"krate":0,"index":8384},"to":{"krate":0,"index":2265}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":321007,"byte_end":321021,"line_start":331,"line_end":331,"column_start":37,"column_end":51},"kind":{"Impl":{"id":680}},"from":{"krate":0,"index":8384},"to":{"krate":0,"index":2273}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":321325,"byte_end":321331,"line_start":345,"line_end":345,"column_start":21,"column_end":27},"kind":{"Impl":{"id":681}},"from":{"krate":0,"index":2446},"to":{"krate":1,"index":1915}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\futures-util-0.3.6\\src\\fns.rs","byte_start":321426,"byte_end":321432,"line_start":350,"line_end":350,"column_start":27,"column_end":33},"kind":{"Impl":{"id":682}},"from":{"krate":0,"index":2446},"to":{"krate":0,"index":2255}}]}