{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1","program":"C:\\Users\\Nlanson\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","tokio_util","--edition=2018","C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-Cembed-bitcode=no","-C","debuginfo=2","--cfg","feature=\"codec\"","--cfg","feature=\"default\"","-C","metadata=dacc6adb415359d8","-C","extra-filename=-dacc6adb415359d8","--out-dir","c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps","--extern","bytes=c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps\\libbytes-b6272f349639dca9.rmeta","--extern","futures_core=c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps\\libfutures_core-5e41affe63bebbab.rmeta","--extern","futures_sink=c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps\\libfutures_sink-d2857115e0e5c692.rmeta","--extern","log=c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps\\liblog-e801ce70a74fef10.rmeta","--extern","pin_project_lite=c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps\\libpin_project_lite-a1b91dc84602eee6.rmeta","--extern","tokio=c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps\\libtokio-f26c6f5d1e5e1122.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Nlanson\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Nlanson\\Desktop\\Coding\\rust-excersizes\\ip\\target\\rls\\debug\\deps\\libtokio_util-dacc6adb415359d8.rmeta"},"prelude":{"crate_id":{"name":"tokio_util","disambiguator":[595893761767401954,11728400606919197485]},"crate_root":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src","external_crates":[{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[2951836381390344939,16649128255697415692]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[11710271729537087300,7936810236211621860]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[221620535861096092,14052674651022364528]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[6754765288211962248,11319126938093173531]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12146955935630897969,9411134559866261862]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14833668363639865695,5655522694650611187]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4272166054306925428,11429919485785531186]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[12683507629027033058,3032465482526171902]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[3621516987667804763,14118985286121416357]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[3114763798488812350,3771385689256703239]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[12308387851717752688,1271721453298801945]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[41357415245366713,267475365531445088]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[14877867959531453948,6948897495248942720]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","num":14,"id":{"name":"bytes","disambiguator":[7135269789112322313,11078045287243048667]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":15,"id":{"name":"tokio","disambiguator":[3888874929452909842,10868475986387429000]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","num":16,"id":{"name":"pin_project_lite","disambiguator":[10761704931920838764,6282464934418256032]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","num":17,"id":{"name":"futures_core","disambiguator":[6466831029986549161,18351979618423246699]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":18,"id":{"name":"mio","disambiguator":[17418173703895847563,11634792623817599589]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":19,"id":{"name":"net2","disambiguator":[4268680137397424291,14754891994281700749]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":20,"id":{"name":"winapi","disambiguator":[6992355410533816759,1505936449684824966]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":21,"id":{"name":"cfg_if","disambiguator":[3734860209140798689,14506924879911982731]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":22,"id":{"name":"iovec","disambiguator":[10760462275380225494,14543731673056208042]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":23,"id":{"name":"slab","disambiguator":[5177127645849670698,14978272138371796421]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":24,"id":{"name":"miow","disambiguator":[15185946377137829276,2997828284966162535]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":25,"id":{"name":"kernel32","disambiguator":[17141300724075450123,16724126007151737776]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":26,"id":{"name":"winapi","disambiguator":[2960638698282914680,4967541454394922489]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":27,"id":{"name":"ws2_32","disambiguator":[15272389877049087959,4601086224162899295]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","num":28,"id":{"name":"log","disambiguator":[8885348499773082708,17822194717397689141]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":29,"id":{"name":"mio_named_pipes","disambiguator":[7924245706310028993,17406866232058660781]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":30,"id":{"name":"miow","disambiguator":[16631678251320348876,10073409799294045379]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":31,"id":{"name":"socket2","disambiguator":[4024263284707375122,1162224293336176907]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":32,"id":{"name":"lazy_static","disambiguator":[4516623831510152009,17434107222073870648]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":33,"id":{"name":"fnv","disambiguator":[2263003884098538549,10377970547828183879]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":34,"id":{"name":"tokio_macros","disambiguator":[9696223206307216478,10042283270353464319]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":35,"id":{"name":"memchr","disambiguator":[10217865961661611903,12425849656899133429]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","num":36,"id":{"name":"num_cpus","disambiguator":[9847341616182497004,11533745144272218933]}},{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","num":37,"id":{"name":"futures_sink","disambiguator":[15172594656521643656,7872486874276597157]}}],"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386355,"byte_end":6386365,"line_start":13,"line_end":13,"column_start":28,"column_end":38},"alias_span":null,"name":"BytesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386404,"byte_end":6386411,"line_start":16,"line_end":16,"column_start":24,"column_end":31},"alias_span":null,"name":"Decoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386450,"byte_end":6386457,"line_start":19,"line_end":19,"column_start":24,"column_end":31},"alias_span":null,"name":"Encoder","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386495,"byte_end":6386501,"line_start":22,"line_end":22,"column_start":24,"column_end":30},"alias_span":null,"name":"Framed","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386503,"byte_end":6386514,"line_start":22,"line_end":22,"column_start":32,"column_end":43},"alias_span":null,"name":"FramedParts","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386562,"byte_end":6386572,"line_start":25,"line_end":25,"column_start":28,"column_end":38},"alias_span":null,"name":"FramedRead","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386621,"byte_end":6386632,"line_start":28,"line_end":28,"column_start":29,"column_end":40},"alias_span":null,"name":"FramedWrite","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386694,"byte_end":6386714,"line_start":31,"line_end":31,"column_start":34,"column_end":54},"alias_span":null,"name":"LengthDelimitedCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386716,"byte_end":6386741,"line_start":31,"line_end":31,"column_start":56,"column_end":81},"alias_span":null,"name":"LengthDelimitedCodecError","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386790,"byte_end":6386800,"line_start":34,"line_end":34,"column_start":29,"column_end":39},"alias_span":null,"name":"LinesCodec","value":"","parent":{"krate":0,"index":7}},{"kind":"Use","ref_id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386802,"byte_end":6386817,"line_start":34,"line_end":34,"column_start":41,"column_end":56},"alias_span":null,"name":"LinesCodecError","value":"","parent":{"krate":0,"index":7}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":0,"byte_end":816,"line_start":1,"line_end":37,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":7}],"decl_id":null,"docs":" Utilities for working with Tokio.","sig":null,"attributes":[{"value":"allow(clippy :: needless_doctest_main)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":60,"byte_end":100,"line_start":2,"line_end":2,"column_start":1,"column_end":41}},{"value":"warn(missing_debug_implementations, missing_docs, rust_2018_idioms,\n       unreachable_pub)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":101,"byte_end":207,"line_start":3,"line_end":8,"column_start":1,"column_end":3}},{"value":"deny(intra_doc_link_resolution_failure)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":208,"byte_end":251,"line_start":9,"line_end":9,"column_start":1,"column_end":44}},{"value":"! Utilities for working with Tokio.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":409,"byte_end":446,"line_start":16,"line_end":16,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":447,"byte_end":450,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"! This crate is not versioned in lockstep with the core","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":451,"byte_end":508,"line_start":18,"line_end":18,"column_start":1,"column_end":58}},{"value":"! [`tokio`] crate. However, `tokio-util` _will_ respect Rust's","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":509,"byte_end":573,"line_start":19,"line_end":19,"column_start":1,"column_end":65}},{"value":"! semantic versioning policy, especially with regard to breaking changes.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":574,"byte_end":649,"line_start":20,"line_end":20,"column_start":1,"column_end":76}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":650,"byte_end":653,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"! [`tokio`]: https://docs.rs/tokio","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":654,"byte_end":690,"line_start":22,"line_end":22,"column_start":1,"column_end":37}}]},{"kind":"Mod","id":{"krate":0,"index":7},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"codec","qualname":"::codec","value":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","parent":null,"children":[{"krate":0,"index":8},{"krate":0,"index":25},{"krate":0,"index":26},{"krate":0,"index":40},{"krate":0,"index":41},{"krate":0,"index":48},{"krate":0,"index":49},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":241},{"krate":0,"index":242},{"krate":0,"index":347},{"krate":0,"index":348},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"decl_id":null,"docs":" Utilities for encoding and decoding frames.","sig":null,"attributes":[{"value":"cfg(feature = \"codec\")","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\cfg.rs","byte_start":892,"byte_end":917,"line_start":4,"line_end":4,"column_start":13,"column_end":38}},{"value":"! Utilities for encoding and decoding frames.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6385907,"byte_end":6385954,"line_start":1,"line_end":1,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6385955,"byte_end":6385958,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Contains adapters to go from streams of bytes, [`AsyncRead`] and","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6385959,"byte_end":6386027,"line_start":3,"line_end":3,"column_start":1,"column_end":69}},{"value":"! [`AsyncWrite`], to framed streams implementing [`Sink`] and [`Stream`].","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386028,"byte_end":6386103,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"! Framed streams are also known as transports.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386104,"byte_end":6386152,"line_start":5,"line_end":5,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386153,"byte_end":6386156,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386157,"byte_end":6386196,"line_start":7,"line_end":7,"column_start":1,"column_end":40}},{"value":"! [`AsyncWrite`]: tokio::io::AsyncWrite","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386197,"byte_end":6386238,"line_start":8,"line_end":8,"column_start":1,"column_end":42}},{"value":"! [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386239,"byte_end":6386276,"line_start":9,"line_end":9,"column_start":1,"column_end":38}},{"value":"! [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386277,"byte_end":6386309,"line_start":10,"line_end":10,"column_start":1,"column_end":33}}]},{"kind":"Struct","id":{"krate":0,"index":458},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6388094,"byte_end":6388104,"line_start":45,"line_end":45,"column_start":12,"column_end":22},"name":"BytesCodec","qualname":"::codec::bytes_codec::BytesCodec","value":"","parent":null,"children":[],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that just ships bytes around.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6386946,"byte_end":6387031,"line_start":7,"line_end":7,"column_start":1,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387032,"byte_end":6387035,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387036,"byte_end":6387074,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387075,"byte_end":6387113,"line_start":10,"line_end":10,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387114,"byte_end":6387117,"line_start":11,"line_end":11,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387118,"byte_end":6387131,"line_start":12,"line_end":12,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387132,"byte_end":6387135,"line_start":13,"line_end":13,"column_start":1,"column_end":4}},{"value":"/ Turn an [`AsyncRead`] into a stream of `Result<`[`BytesMut`]`, `[`Error`]`>`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387136,"byte_end":6387217,"line_start":14,"line_end":14,"column_start":1,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387218,"byte_end":6387221,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ [`AsyncRead`]: tokio::io::AsyncRead","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387222,"byte_end":6387261,"line_start":16,"line_end":16,"column_start":1,"column_end":40}},{"value":"/ [`BytesMut`]: bytes::BytesMut","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387262,"byte_end":6387295,"line_start":17,"line_end":17,"column_start":1,"column_end":34}},{"value":"/ [`Error`]: std::io::Error","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387296,"byte_end":6387325,"line_start":18,"line_end":18,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387326,"byte_end":6387329,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387330,"byte_end":6387337,"line_start":20,"line_end":20,"column_start":1,"column_end":8}},{"value":"/ # mod hidden {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387338,"byte_end":6387356,"line_start":21,"line_end":21,"column_start":1,"column_end":19}},{"value":"/ # #[allow(unused_imports)]","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387357,"byte_end":6387387,"line_start":22,"line_end":22,"column_start":1,"column_end":31}},{"value":"/ use tokio::fs::File;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387388,"byte_end":6387412,"line_start":23,"line_end":23,"column_start":1,"column_end":25}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387413,"byte_end":6387420,"line_start":24,"line_end":24,"column_start":1,"column_end":8}},{"value":"/ use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387421,"byte_end":6387450,"line_start":25,"line_end":25,"column_start":1,"column_end":30}},{"value":"/ use tokio_util::codec::{FramedRead, BytesCodec};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387451,"byte_end":6387503,"line_start":26,"line_end":26,"column_start":1,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387504,"byte_end":6387507,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ # enum File {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387508,"byte_end":6387526,"line_start":28,"line_end":28,"column_start":1,"column_end":19}},{"value":"/ # impl File {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387527,"byte_end":6387544,"line_start":29,"line_end":29,"column_start":1,"column_end":18}},{"value":"/ #     async fn open(_name: &str) -> Result<impl AsyncRead, std::io::Error> {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387545,"byte_end":6387625,"line_start":30,"line_end":30,"column_start":1,"column_end":81}},{"value":"/ #         use std::io::Cursor;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387626,"byte_end":6387660,"line_start":31,"line_end":31,"column_start":1,"column_end":35}},{"value":"/ #         Ok(Cursor::new(vec![0, 1, 2, 3, 4, 5]))","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387661,"byte_end":6387714,"line_start":32,"line_end":32,"column_start":1,"column_end":54}},{"value":"/ #     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387715,"byte_end":6387726,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387727,"byte_end":6387734,"line_start":34,"line_end":34,"column_start":1,"column_end":8}},{"value":"/ #","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387735,"byte_end":6387740,"line_start":35,"line_end":35,"column_start":1,"column_end":6}},{"value":"/ # #[tokio::main(core_threads = 1)]","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387741,"byte_end":6387779,"line_start":36,"line_end":36,"column_start":1,"column_end":39}},{"value":"/ # async fn main() -> Result<(), std::io::Error> {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387780,"byte_end":6387833,"line_start":37,"line_end":37,"column_start":1,"column_end":54}},{"value":"/ let my_async_read = File::open(\"filename.txt\").await?;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387834,"byte_end":6387892,"line_start":38,"line_end":38,"column_start":1,"column_end":59}},{"value":"/ let my_stream_of_bytes = FramedRead::new(my_async_read, BytesCodec::new());","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387893,"byte_end":6387972,"line_start":39,"line_end":39,"column_start":1,"column_end":80}},{"value":"/ # Ok(())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387973,"byte_end":6387985,"line_start":40,"line_end":40,"column_start":1,"column_end":13}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387986,"byte_end":6387993,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6387994,"byte_end":6388001,"line_start":42,"line_end":42,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6388002,"byte_end":6388005,"line_start":43,"line_end":43,"column_start":1,"column_end":4}}]},{"kind":"Method","id":{"krate":0,"index":17},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6388206,"byte_end":6388209,"line_start":49,"line_end":49,"column_start":12,"column_end":15},"name":"new","qualname":"<BytesCodec>::new","value":"pub fn new() -> BytesCodec","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `BytesCodec` for shipping around raw bytes.\n","sig":null,"attributes":[{"value":"/ Creates a new `BytesCodec` for shipping around raw bytes.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6388133,"byte_end":6388194,"line_start":48,"line_end":48,"column_start":5,"column_end":66}}]},{"kind":"Trait","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389521,"byte_end":6389528,"line_start":21,"line_end":21,"column_start":11,"column_end":18},"name":"Decoder","qualname":"::codec::decoder::Decoder","value":"Decoder","parent":null,"children":[{"krate":0,"index":34},{"krate":0,"index":35},{"krate":0,"index":36},{"krate":0,"index":37},{"krate":0,"index":38}],"decl_id":null,"docs":" Decoding of frames via buffers.","sig":null,"attributes":[{"value":"/ Decoding of frames via buffers.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6388924,"byte_end":6388959,"line_start":8,"line_end":8,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6388960,"byte_end":6388963,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This trait is used when constructing an instance of [`Framed`] or","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6388964,"byte_end":6389033,"line_start":10,"line_end":10,"column_start":1,"column_end":70}},{"value":"/ [`FramedRead`]. An implementation of `Decoder` takes a byte stream that has","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389034,"byte_end":6389113,"line_start":11,"line_end":11,"column_start":1,"column_end":80}},{"value":"/ already been buffered in `src` and decodes the data into a stream of","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389114,"byte_end":6389186,"line_start":12,"line_end":12,"column_start":1,"column_end":73}},{"value":"/ `Self::Item` frames.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389187,"byte_end":6389211,"line_start":13,"line_end":13,"column_start":1,"column_end":25}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389212,"byte_end":6389215,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Implementations are able to track state on `self`, which enables","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389216,"byte_end":6389284,"line_start":15,"line_end":15,"column_start":1,"column_end":69}},{"value":"/ implementing stateful streaming parsers. In many cases, though, this type","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389285,"byte_end":6389362,"line_start":16,"line_end":16,"column_start":1,"column_end":78}},{"value":"/ will simply be a unit struct (e.g. `struct HttpDecoder`).","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389363,"byte_end":6389424,"line_start":17,"line_end":17,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389425,"byte_end":6389428,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389429,"byte_end":6389465,"line_start":19,"line_end":19,"column_start":1,"column_end":37}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389466,"byte_end":6389510,"line_start":20,"line_end":20,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":34},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389576,"byte_end":6389580,"line_start":23,"line_end":23,"column_start":10,"column_end":14},"name":"Item","qualname":"::codec::decoder::Decoder::Item","value":"type Item;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The type of decoded frames.\n","sig":null,"attributes":[{"value":"/ The type of decoded frames.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389535,"byte_end":6389566,"line_start":22,"line_end":22,"column_start":5,"column_end":36}}]},{"kind":"Type","id":{"krate":0,"index":35},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390346,"byte_end":6390351,"line_start":40,"line_end":40,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::decoder::Decoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" The type of unrecoverable frame decoding errors.","sig":null,"attributes":[{"value":"/ The type of unrecoverable frame decoding errors.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389587,"byte_end":6389639,"line_start":25,"line_end":25,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389644,"byte_end":6389647,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ If an individual message is ill-formed but can be ignored without","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389652,"byte_end":6389721,"line_start":27,"line_end":27,"column_start":5,"column_end":74}},{"value":"/ interfering with the processing of future messages, it may be more","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389726,"byte_end":6389796,"line_start":28,"line_end":28,"column_start":5,"column_end":75}},{"value":"/ useful to report the failure as an `Item`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389801,"byte_end":6389847,"line_start":29,"line_end":29,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389852,"byte_end":6389855,"line_start":30,"line_end":30,"column_start":5,"column_end":8}},{"value":"/ `From<io::Error>` is required in the interest of making `Error` suitable","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389860,"byte_end":6389936,"line_start":31,"line_end":31,"column_start":5,"column_end":81}},{"value":"/ for returning directly from a [`FramedRead`], and to enable the default","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6389941,"byte_end":6390016,"line_start":32,"line_end":32,"column_start":5,"column_end":80}},{"value":"/ implementation of `decode_eof` to yield an `io::Error` when the decoder","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390021,"byte_end":6390096,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ fails to consume all available data.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390101,"byte_end":6390141,"line_start":34,"line_end":34,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390146,"byte_end":6390149,"line_start":35,"line_end":35,"column_start":5,"column_end":8}},{"value":"/ Note that implementors of this trait can simply indicate `type Error =","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390154,"byte_end":6390228,"line_start":36,"line_end":36,"column_start":5,"column_end":79}},{"value":"/ io::Error` to use I/O errors as this type.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390233,"byte_end":6390279,"line_start":37,"line_end":37,"column_start":5,"column_end":51}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390284,"byte_end":6390287,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390292,"byte_end":6390336,"line_start":39,"line_end":39,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":36},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393287,"byte_end":6393293,"line_start":110,"line_end":110,"column_start":8,"column_end":14},"name":"decode","qualname":"::codec::decoder::Decoder::decode","value":"pub fn decode(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Attempts to decode a frame from the provided buffer of bytes.","sig":null,"attributes":[{"value":"/ Attempts to decode a frame from the provided buffer of bytes.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390375,"byte_end":6390440,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390445,"byte_end":6390448,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ This method is called by [`FramedRead`] whenever bytes are ready to be","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390453,"byte_end":6390527,"line_start":44,"line_end":44,"column_start":5,"column_end":79}},{"value":"/ parsed. The provided buffer of bytes is what's been read so far, and","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390532,"byte_end":6390604,"line_start":45,"line_end":45,"column_start":5,"column_end":77}},{"value":"/ this instance of `Decode` can determine whether an entire frame is in","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390609,"byte_end":6390682,"line_start":46,"line_end":46,"column_start":5,"column_end":78}},{"value":"/ the buffer and is ready to be returned.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390687,"byte_end":6390730,"line_start":47,"line_end":47,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390735,"byte_end":6390738,"line_start":48,"line_end":48,"column_start":5,"column_end":8}},{"value":"/ If an entire frame is available, then this instance will remove those","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390743,"byte_end":6390816,"line_start":49,"line_end":49,"column_start":5,"column_end":78}},{"value":"/ bytes from the buffer provided and return them as a decoded","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390821,"byte_end":6390884,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ frame. Note that removing bytes from the provided buffer doesn't always","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390889,"byte_end":6390964,"line_start":51,"line_end":51,"column_start":5,"column_end":80}},{"value":"/ necessarily copy the bytes, so this should be an efficient operation in","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6390969,"byte_end":6391044,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ most circumstances.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391049,"byte_end":6391072,"line_start":53,"line_end":53,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391077,"byte_end":6391080,"line_start":54,"line_end":54,"column_start":5,"column_end":8}},{"value":"/ If the bytes look valid, but a frame isn't fully available yet, then","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391085,"byte_end":6391157,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `Ok(None)` is returned. This indicates to the [`Framed`] instance that","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391162,"byte_end":6391236,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ it needs to read some more bytes before calling this method again.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391241,"byte_end":6391311,"line_start":57,"line_end":57,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391316,"byte_end":6391319,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Note that the bytes provided may be empty. If a previous call to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391324,"byte_end":6391392,"line_start":59,"line_end":59,"column_start":5,"column_end":73}},{"value":"/ `decode` consumed all the bytes in the buffer then `decode` will be","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391397,"byte_end":6391468,"line_start":60,"line_end":60,"column_start":5,"column_end":76}},{"value":"/ called again until it returns `Ok(None)`, indicating that more bytes need to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391473,"byte_end":6391553,"line_start":61,"line_end":61,"column_start":5,"column_end":85}},{"value":"/ be read.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391558,"byte_end":6391570,"line_start":62,"line_end":62,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391575,"byte_end":6391578,"line_start":63,"line_end":63,"column_start":5,"column_end":8}},{"value":"/ Finally, if the bytes in the buffer are malformed then an error is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391583,"byte_end":6391653,"line_start":64,"line_end":64,"column_start":5,"column_end":75}},{"value":"/ returned indicating why. This informs [`Framed`] that the stream is now","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391658,"byte_end":6391733,"line_start":65,"line_end":65,"column_start":5,"column_end":80}},{"value":"/ corrupt and should be terminated.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391738,"byte_end":6391775,"line_start":66,"line_end":66,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391780,"byte_end":6391783,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391788,"byte_end":6391824,"line_start":68,"line_end":68,"column_start":5,"column_end":41}},{"value":"/ [`FramedRead`]: crate::codec::FramedRead","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391829,"byte_end":6391873,"line_start":69,"line_end":69,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391878,"byte_end":6391881,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ # Buffer management","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391886,"byte_end":6391909,"line_start":71,"line_end":71,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391914,"byte_end":6391917,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Before returning from the function, implementations should ensure that","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6391922,"byte_end":6391996,"line_start":73,"line_end":73,"column_start":5,"column_end":79}},{"value":"/ the buffer has appropriate capacity in anticipation of future calls to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392001,"byte_end":6392075,"line_start":74,"line_end":74,"column_start":5,"column_end":79}},{"value":"/ `decode`. Failing to do so leads to inefficiency.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392080,"byte_end":6392133,"line_start":75,"line_end":75,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392138,"byte_end":6392141,"line_start":76,"line_end":76,"column_start":5,"column_end":8}},{"value":"/ For example, if frames have a fixed length, or if the length of the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392146,"byte_end":6392217,"line_start":77,"line_end":77,"column_start":5,"column_end":76}},{"value":"/ current frame is known from a header, a possible buffer management","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392222,"byte_end":6392292,"line_start":78,"line_end":78,"column_start":5,"column_end":75}},{"value":"/ strategy is:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392297,"byte_end":6392313,"line_start":79,"line_end":79,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392318,"byte_end":6392321,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ ```no_run","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392326,"byte_end":6392339,"line_start":81,"line_end":81,"column_start":5,"column_end":18}},{"value":"/ # use std::io;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392344,"byte_end":6392362,"line_start":82,"line_end":82,"column_start":5,"column_end":23}},{"value":"/ #","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392367,"byte_end":6392372,"line_start":83,"line_end":83,"column_start":5,"column_end":10}},{"value":"/ # use bytes::BytesMut;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392377,"byte_end":6392403,"line_start":84,"line_end":84,"column_start":5,"column_end":31}},{"value":"/ # use tokio_util::codec::Decoder;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392408,"byte_end":6392445,"line_start":85,"line_end":85,"column_start":5,"column_end":42}},{"value":"/ #","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392450,"byte_end":6392455,"line_start":86,"line_end":86,"column_start":5,"column_end":10}},{"value":"/ # struct MyCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392460,"byte_end":6392481,"line_start":87,"line_end":87,"column_start":5,"column_end":26}},{"value":"/ #","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392486,"byte_end":6392491,"line_start":88,"line_end":88,"column_start":5,"column_end":10}},{"value":"/ impl Decoder for MyCodec {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392496,"byte_end":6392526,"line_start":89,"line_end":89,"column_start":5,"column_end":35}},{"value":"/     // ...","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392531,"byte_end":6392545,"line_start":90,"line_end":90,"column_start":5,"column_end":19}},{"value":"/     # type Item = BytesMut;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392550,"byte_end":6392581,"line_start":91,"line_end":91,"column_start":5,"column_end":36}},{"value":"/     # type Error = io::Error;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392586,"byte_end":6392619,"line_start":92,"line_end":92,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392624,"byte_end":6392627,"line_start":93,"line_end":93,"column_start":5,"column_end":8}},{"value":"/     fn decode(&mut self, src: &mut BytesMut) -> Result<Option<Self::Item>, Self::Error> {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392632,"byte_end":6392725,"line_start":94,"line_end":94,"column_start":5,"column_end":98}},{"value":"/         // ...","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392730,"byte_end":6392748,"line_start":95,"line_end":95,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392753,"byte_end":6392756,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/         // Reserve enough to complete decoding of the current frame.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392761,"byte_end":6392833,"line_start":97,"line_end":97,"column_start":5,"column_end":77}},{"value":"/         let current_frame_len: usize = 1000; // Example.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392838,"byte_end":6392898,"line_start":98,"line_end":98,"column_start":5,"column_end":65}},{"value":"/         // And to start decoding the next frame.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392903,"byte_end":6392955,"line_start":99,"line_end":99,"column_start":5,"column_end":57}},{"value":"/         let next_frame_header_len: usize = 10; // Example.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6392960,"byte_end":6393022,"line_start":100,"line_end":100,"column_start":5,"column_end":67}},{"value":"/         src.reserve(current_frame_len + next_frame_header_len);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393027,"byte_end":6393094,"line_start":101,"line_end":101,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393099,"byte_end":6393102,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/         return Ok(None);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393107,"byte_end":6393135,"line_start":103,"line_end":103,"column_start":5,"column_end":33}},{"value":"/     }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393140,"byte_end":6393149,"line_start":104,"line_end":104,"column_start":5,"column_end":14}},{"value":"/ }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393154,"byte_end":6393159,"line_start":105,"line_end":105,"column_start":5,"column_end":10}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393164,"byte_end":6393171,"line_start":106,"line_end":106,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393176,"byte_end":6393179,"line_start":107,"line_end":107,"column_start":5,"column_end":8}},{"value":"/ An optimal buffer management strategy minimizes reallocations and","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393184,"byte_end":6393253,"line_start":108,"line_end":108,"column_start":5,"column_end":74}},{"value":"/ over-allocations.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393258,"byte_end":6393279,"line_start":109,"line_end":109,"column_start":5,"column_end":26}}]},{"kind":"Method","id":{"krate":0,"index":37},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6394152,"byte_end":6394162,"line_start":125,"line_end":125,"column_start":8,"column_end":18},"name":"decode_eof","qualname":"::codec::decoder::Decoder::decode_eof","value":"pub fn decode_eof(&mut Self, &mut BytesMut)\n-> Result<Option<Self::Item>, Self::Error>","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" A default method available to be called when there are no more bytes\n available to be read from the underlying I/O.","sig":null,"attributes":[{"value":"/ A default method available to be called when there are no more bytes","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393374,"byte_end":6393446,"line_start":112,"line_end":112,"column_start":5,"column_end":77}},{"value":"/ available to be read from the underlying I/O.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393451,"byte_end":6393500,"line_start":113,"line_end":113,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393505,"byte_end":6393508,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ This method defaults to calling `decode` and returns an error if","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393513,"byte_end":6393581,"line_start":115,"line_end":115,"column_start":5,"column_end":73}},{"value":"/ `Ok(None)` is returned while there is unconsumed data in `buf`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393586,"byte_end":6393653,"line_start":116,"line_end":116,"column_start":5,"column_end":72}},{"value":"/ Typically this doesn't need to be implemented unless the framing","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393658,"byte_end":6393726,"line_start":117,"line_end":117,"column_start":5,"column_end":73}},{"value":"/ protocol differs near the end of the stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393731,"byte_end":6393779,"line_start":118,"line_end":118,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393784,"byte_end":6393787,"line_start":119,"line_end":119,"column_start":5,"column_end":8}},{"value":"/ Note that the `buf` argument may be empty. If a previous call to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393792,"byte_end":6393860,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ `decode_eof` consumed all the bytes in the buffer, `decode_eof` will be","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393865,"byte_end":6393940,"line_start":121,"line_end":121,"column_start":5,"column_end":80}},{"value":"/ called again until it returns `None`, indicating that there are no more","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6393945,"byte_end":6394020,"line_start":122,"line_end":122,"column_start":5,"column_end":80}},{"value":"/ frames to yield. This behavior enables returning finalization frames","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6394025,"byte_end":6394097,"line_start":123,"line_end":123,"column_start":5,"column_end":77}},{"value":"/ that may not be based on inbound data.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6394102,"byte_end":6394144,"line_start":124,"line_end":124,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":38},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395771,"byte_end":6395777,"line_start":159,"line_end":159,"column_start":8,"column_end":14},"name":"framed","qualname":"::codec::decoder::Decoder::framed","value":"pub fn framed<T: AsyncRead + AsyncWrite + Sized>(Self, T) -> Framed<T, Self>\nwhere Self: Sized","parent":{"krate":0,"index":33},"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n `Io` object, using `Decode` and `Encode` to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6394580,"byte_end":6394660,"line_start":138,"line_end":138,"column_start":5,"column_end":85}},{"value":"/ `Io` object, using `Decode` and `Encode` to read and write the raw data.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6394665,"byte_end":6394741,"line_start":139,"line_end":139,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6394746,"byte_end":6394749,"line_start":140,"line_end":140,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6394754,"byte_end":6394829,"line_start":141,"line_end":141,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6394834,"byte_end":6394904,"line_start":142,"line_end":142,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6394909,"byte_end":6394980,"line_start":143,"line_end":143,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6394985,"byte_end":6395057,"line_start":144,"line_end":144,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395062,"byte_end":6395120,"line_start":145,"line_end":145,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395125,"byte_end":6395128,"line_start":146,"line_end":146,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both `Stream` and","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395133,"byte_end":6395202,"line_start":147,"line_end":147,"column_start":5,"column_end":74}},{"value":"/ `Sink`; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395207,"byte_end":6395282,"line_start":148,"line_end":148,"column_start":5,"column_end":80}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395287,"byte_end":6395363,"line_start":149,"line_end":149,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395368,"byte_end":6395390,"line_start":150,"line_end":150,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395395,"byte_end":6395398,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395403,"byte_end":6395476,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling `split` on the [`Framed`] returned by this method, which will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395481,"byte_end":6395554,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395559,"byte_end":6395635,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395640,"byte_end":6395643,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395648,"byte_end":6395685,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395690,"byte_end":6395722,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\decoder.rs","byte_start":6395727,"byte_end":6395763,"line_start":158,"line_end":158,"column_start":5,"column_end":41}}]},{"kind":"Trait","id":{"krate":0,"index":44},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396111,"byte_end":6396118,"line_start":8,"line_end":8,"column_start":11,"column_end":18},"name":"Encoder","qualname":"::codec::encoder::Encoder","value":"Encoder<Item>","parent":null,"children":[{"krate":0,"index":46},{"krate":0,"index":47}],"decl_id":null,"docs":" Trait of helper objects to write out messages as bytes, for use with\n [`FramedWrite`].","sig":null,"attributes":[{"value":"/ Trait of helper objects to write out messages as bytes, for use with","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6395956,"byte_end":6396028,"line_start":4,"line_end":4,"column_start":1,"column_end":73}},{"value":"/ [`FramedWrite`].","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396029,"byte_end":6396049,"line_start":5,"line_end":5,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396050,"byte_end":6396053,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396054,"byte_end":6396100,"line_start":7,"line_end":7,"column_start":1,"column_end":47}}]},{"kind":"Type","id":{"krate":0,"index":46},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396383,"byte_end":6396388,"line_start":15,"line_end":15,"column_start":10,"column_end":15},"name":"Error","qualname":"::codec::encoder::Encoder::Error","value":"type Error: From<io::Error>;","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" The type of encoding errors.","sig":null,"attributes":[{"value":"/ The type of encoding errors.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396131,"byte_end":6396163,"line_start":9,"line_end":9,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396168,"byte_end":6396171,"line_start":10,"line_end":10,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`] requires `Encoder`s errors to implement `From<io::Error>`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396176,"byte_end":6396253,"line_start":11,"line_end":11,"column_start":5,"column_end":82}},{"value":"/ in the interest letting it return `Error`s directly.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396258,"byte_end":6396314,"line_start":12,"line_end":12,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396319,"byte_end":6396322,"line_start":13,"line_end":13,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396327,"byte_end":6396373,"line_start":14,"line_end":14,"column_start":5,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":47},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396739,"byte_end":6396745,"line_start":24,"line_end":24,"column_start":8,"column_end":14},"name":"encode","qualname":"::codec::encoder::Encoder::encode","value":"pub fn encode(&mut Self, Item, &mut BytesMut) -> Result<(), Self::Error>","parent":{"krate":0,"index":44},"children":[],"decl_id":null,"docs":" Encodes a frame into the buffer provided.","sig":null,"attributes":[{"value":"/ Encodes a frame into the buffer provided.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396412,"byte_end":6396457,"line_start":17,"line_end":17,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396462,"byte_end":6396465,"line_start":18,"line_end":18,"column_start":5,"column_end":8}},{"value":"/ This method will encode `item` into the byte buffer provided by `dst`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396470,"byte_end":6396544,"line_start":19,"line_end":19,"column_start":5,"column_end":79}},{"value":"/ The `dst` provided is an internal buffer of the [`FramedWrite`] instance and","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396549,"byte_end":6396629,"line_start":20,"line_end":20,"column_start":5,"column_end":85}},{"value":"/ will be written out when possible.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396634,"byte_end":6396672,"line_start":21,"line_end":21,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396677,"byte_end":6396680,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ [`FramedWrite`]: crate::codec::FramedWrite","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\encoder.rs","byte_start":6396685,"byte_end":6396731,"line_start":23,"line_end":23,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":777},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6397894,"byte_end":6397900,"line_start":31,"line_end":31,"column_start":16,"column_end":22},"name":"Framed","qualname":"::codec::framed::Framed","value":"Framed {  }","parent":null,"children":[{"krate":0,"index":780}],"decl_id":null,"docs":" A unified [`Stream`] and [`Sink`] interface to an underlying I/O object, using\n the `Encoder` and `Decoder` traits to encode and decode frames.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6398336,"byte_end":6398338,"line_start":48,"line_end":48,"column_start":10,"column_end":12},"name":"Io","qualname":"::codec::framed::ProjectFuse::Io","value":"type Io;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6398349,"byte_end":6398354,"line_start":49,"line_end":49,"column_start":10,"column_end":15},"name":"Codec","qualname":"::codec::framed::ProjectFuse::Codec","value":"type Codec;","parent":{"krate":0,"index":80},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400144,"byte_end":6400147,"line_start":94,"line_end":94,"column_start":12,"column_end":15},"name":"new","qualname":"<Framed<T, U>>::new","value":"pub fn new(T, U) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6398802,"byte_end":6398882,"line_start":71,"line_end":71,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6398887,"byte_end":6398968,"line_start":72,"line_end":72,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6398973,"byte_end":6398976,"line_start":73,"line_end":73,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6398981,"byte_end":6399056,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399061,"byte_end":6399131,"line_start":75,"line_end":75,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399136,"byte_end":6399205,"line_start":76,"line_end":76,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399210,"byte_end":6399282,"line_start":77,"line_end":77,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399287,"byte_end":6399345,"line_start":78,"line_end":78,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399350,"byte_end":6399353,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399358,"byte_end":6399429,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399434,"byte_end":6399511,"line_start":81,"line_end":81,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399516,"byte_end":6399592,"line_start":82,"line_end":82,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399597,"byte_end":6399619,"line_start":83,"line_end":83,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399624,"byte_end":6399627,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399632,"byte_end":6399705,"line_start":85,"line_end":85,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399710,"byte_end":6399783,"line_start":86,"line_end":86,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399788,"byte_end":6399864,"line_start":87,"line_end":87,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399869,"byte_end":6399872,"line_start":88,"line_end":88,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399877,"byte_end":6399914,"line_start":89,"line_end":89,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399919,"byte_end":6399951,"line_start":90,"line_end":90,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399956,"byte_end":6399993,"line_start":91,"line_end":91,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6399998,"byte_end":6400036,"line_start":92,"line_end":92,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400041,"byte_end":6400132,"line_start":93,"line_end":93,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401695,"byte_end":6401708,"line_start":124,"line_end":124,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<Framed<T, U>>::with_capacity","value":"pub fn with_capacity(T, U, usize) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,\n with a specific read buffer initial capacity.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400299,"byte_end":6400379,"line_start":100,"line_end":100,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400384,"byte_end":6400465,"line_start":101,"line_end":101,"column_start":5,"column_end":86}},{"value":"/ with a specific read buffer initial capacity.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400470,"byte_end":6400519,"line_start":102,"line_end":102,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400524,"byte_end":6400527,"line_start":103,"line_end":103,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400532,"byte_end":6400607,"line_start":104,"line_end":104,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400612,"byte_end":6400682,"line_start":105,"line_end":105,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the codec","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400687,"byte_end":6400756,"line_start":106,"line_end":106,"column_start":5,"column_end":74}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400761,"byte_end":6400833,"line_start":107,"line_end":107,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400838,"byte_end":6400896,"line_start":108,"line_end":108,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400901,"byte_end":6400904,"line_start":109,"line_end":109,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400909,"byte_end":6400980,"line_start":110,"line_end":110,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6400985,"byte_end":6401062,"line_start":111,"line_end":111,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401067,"byte_end":6401143,"line_start":112,"line_end":112,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401148,"byte_end":6401170,"line_start":113,"line_end":113,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401175,"byte_end":6401178,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401183,"byte_end":6401256,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401261,"byte_end":6401334,"line_start":116,"line_end":116,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401339,"byte_end":6401415,"line_start":117,"line_end":117,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401420,"byte_end":6401423,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401428,"byte_end":6401465,"line_start":119,"line_end":119,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401470,"byte_end":6401502,"line_start":120,"line_end":120,"column_start":5,"column_end":37}},{"value":"/ [`Decode`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401507,"byte_end":6401544,"line_start":121,"line_end":121,"column_start":5,"column_end":42}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401549,"byte_end":6401587,"line_start":122,"line_end":122,"column_start":5,"column_end":43}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401592,"byte_end":6401683,"line_start":123,"line_end":123,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6403577,"byte_end":6403587,"line_start":162,"line_end":162,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Framed<T, U>>::from_parts","value":"pub fn from_parts(FramedParts<T, U>) -> Framed<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Provides a [`Stream`] and [`Sink`] interface for reading and writing to this\n I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","sig":null,"attributes":[{"value":"/ Provides a [`Stream`] and [`Sink`] interface for reading and writing to this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401999,"byte_end":6402079,"line_start":135,"line_end":135,"column_start":5,"column_end":85}},{"value":"/ I/O object, using [`Decoder`] and [`Encoder`] to read and write the raw data.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402084,"byte_end":6402165,"line_start":136,"line_end":136,"column_start":5,"column_end":86}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402170,"byte_end":6402173,"line_start":137,"line_end":137,"column_start":5,"column_end":8}},{"value":"/ Raw I/O objects work with byte sequences, but higher-level code usually","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402178,"byte_end":6402253,"line_start":138,"line_end":138,"column_start":5,"column_end":80}},{"value":"/ wants to batch these into meaningful chunks, called \"frames\". This","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402258,"byte_end":6402328,"line_start":139,"line_end":139,"column_start":5,"column_end":75}},{"value":"/ method layers framing on top of an I/O object, by using the `Codec`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402333,"byte_end":6402404,"line_start":140,"line_end":140,"column_start":5,"column_end":76}},{"value":"/ traits to handle encoding and decoding of messages frames. Note that","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402409,"byte_end":6402481,"line_start":141,"line_end":141,"column_start":5,"column_end":77}},{"value":"/ the incoming and outgoing frame types may be distinct.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402486,"byte_end":6402544,"line_start":142,"line_end":142,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402549,"byte_end":6402552,"line_start":143,"line_end":143,"column_start":5,"column_end":8}},{"value":"/ This function returns a *single* object that is both [`Stream`] and","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402557,"byte_end":6402628,"line_start":144,"line_end":144,"column_start":5,"column_end":76}},{"value":"/ [`Sink`]; grouping this into a single object is often useful for layering","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402633,"byte_end":6402710,"line_start":145,"line_end":145,"column_start":5,"column_end":82}},{"value":"/ things like gzip or TLS, which require both read and write access to the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402715,"byte_end":6402791,"line_start":146,"line_end":146,"column_start":5,"column_end":81}},{"value":"/ underlying object.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402796,"byte_end":6402818,"line_start":147,"line_end":147,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402823,"byte_end":6402826,"line_start":148,"line_end":148,"column_start":5,"column_end":8}},{"value":"/ This objects takes a stream and a readbuffer and a writebuffer. These field","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402831,"byte_end":6402910,"line_start":149,"line_end":149,"column_start":5,"column_end":84}},{"value":"/ can be obtained from an existing `Framed` with the [`into_parts`] method.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402915,"byte_end":6402992,"line_start":150,"line_end":150,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6402997,"byte_end":6403000,"line_start":151,"line_end":151,"column_start":5,"column_end":8}},{"value":"/ If you want to work more directly with the streams and sink, consider","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6403005,"byte_end":6403078,"line_start":152,"line_end":152,"column_start":5,"column_end":78}},{"value":"/ calling [`split`] on the `Framed` returned by this method, which will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6403083,"byte_end":6403156,"line_start":153,"line_end":153,"column_start":5,"column_end":78}},{"value":"/ break them into separate objects, allowing them to interact more easily.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6403161,"byte_end":6403237,"line_start":154,"line_end":154,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6403242,"byte_end":6403245,"line_start":155,"line_end":155,"column_start":5,"column_end":8}},{"value":"/ [`Stream`]: tokio::stream::Stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6403250,"byte_end":6403287,"line_start":156,"line_end":156,"column_start":5,"column_end":42}},{"value":"/ [`Sink`]: futures_sink::Sink","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6403292,"byte_end":6403324,"line_start":157,"line_end":157,"column_start":5,"column_end":37}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6403329,"byte_end":6403367,"line_start":158,"line_end":158,"column_start":5,"column_end":43}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6403372,"byte_end":6403410,"line_start":159,"line_end":159,"column_start":5,"column_end":43}},{"value":"/ [`into_parts`]: crate::codec::Framed::into_parts()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6403415,"byte_end":6403469,"line_start":160,"line_end":160,"column_start":5,"column_end":59}},{"value":"/ [`split`]: https://docs.rs/futures/0.3/futures/stream/trait.StreamExt.html#method.split","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6403474,"byte_end":6403565,"line_start":161,"line_end":161,"column_start":5,"column_end":96}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404276,"byte_end":6404283,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<Framed<T, U>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6403993,"byte_end":6404056,"line_start":177,"line_end":177,"column_start":5,"column_end":68}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404061,"byte_end":6404074,"line_start":178,"line_end":178,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404079,"byte_end":6404082,"line_start":179,"line_end":179,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404087,"byte_end":6404162,"line_start":180,"line_end":180,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404167,"byte_end":6404237,"line_start":181,"line_end":181,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404242,"byte_end":6404264,"line_start":182,"line_end":182,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404644,"byte_end":6404651,"line_start":193,"line_end":193,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<Framed<T, U>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404353,"byte_end":6404424,"line_start":187,"line_end":187,"column_start":5,"column_end":76}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404429,"byte_end":6404442,"line_start":188,"line_end":188,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404447,"byte_end":6404450,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404455,"byte_end":6404530,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404535,"byte_end":6404605,"line_start":191,"line_end":191,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404610,"byte_end":6404632,"line_start":192,"line_end":192,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404984,"byte_end":6404989,"line_start":202,"line_end":202,"column_start":12,"column_end":17},"name":"codec","qualname":"<Framed<T, U>>::codec","value":"pub fn codec(&Self) -> &U","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404733,"byte_end":6404791,"line_start":197,"line_end":197,"column_start":5,"column_end":63}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404796,"byte_end":6404809,"line_start":198,"line_end":198,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404814,"byte_end":6404817,"line_start":199,"line_end":199,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404822,"byte_end":6404896,"line_start":200,"line_end":200,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6404901,"byte_end":6404972,"line_start":201,"line_end":201,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":102},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405321,"byte_end":6405330,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"codec_mut","qualname":"<Framed<T, U>>::codec_mut","value":"pub fn codec_mut(&mut Self) -> &mut U","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying codec wrapped by\n `Framed`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying codec wrapped by","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405062,"byte_end":6405128,"line_start":206,"line_end":206,"column_start":5,"column_end":71}},{"value":"/ `Framed`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405133,"byte_end":6405146,"line_start":207,"line_end":207,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405151,"byte_end":6405154,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying codec","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405159,"byte_end":6405233,"line_start":209,"line_end":209,"column_start":5,"column_end":79}},{"value":"/ as it may corrupt the stream of frames otherwise being worked with.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405238,"byte_end":6405309,"line_start":210,"line_end":210,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":103},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405470,"byte_end":6405481,"line_start":216,"line_end":216,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<Framed<T, U>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405415,"byte_end":6405458,"line_start":215,"line_end":215,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":104},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405808,"byte_end":6405818,"line_start":225,"line_end":225,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Framed<T, U>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405543,"byte_end":6405606,"line_start":220,"line_end":220,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405611,"byte_end":6405614,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405619,"byte_end":6405694,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405699,"byte_end":6405769,"line_start":223,"line_end":223,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405774,"byte_end":6405796,"line_start":224,"line_end":224,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":105},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6406213,"byte_end":6406223,"line_start":235,"line_end":235,"column_start":12,"column_end":22},"name":"into_parts","qualname":"<Framed<T, U>>::into_parts","value":"pub fn into_parts(Self) -> FramedParts<T, U>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `Framed`, returning its underlying I/O stream, the buffer\n with unprocessed data, and the codec.","sig":null,"attributes":[{"value":"/ Consumes the `Framed`, returning its underlying I/O stream, the buffer","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405891,"byte_end":6405965,"line_start":229,"line_end":229,"column_start":5,"column_end":79}},{"value":"/ with unprocessed data, and the codec.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6405970,"byte_end":6406011,"line_start":230,"line_end":230,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6406016,"byte_end":6406019,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6406024,"byte_end":6406099,"line_start":232,"line_end":232,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6406104,"byte_end":6406174,"line_start":233,"line_end":233,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6406179,"byte_end":6406201,"line_start":234,"line_end":234,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":486},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410585,"byte_end":6410596,"line_start":396,"line_end":396,"column_start":12,"column_end":23},"name":"FramedParts","qualname":"::codec::framed::FramedParts","value":"FramedParts { io, codec, read_buf, write_buf }","parent":null,"children":[{"krate":0,"index":489},{"krate":0,"index":490},{"krate":0,"index":491},{"krate":0,"index":492},{"krate":0,"index":493}],"decl_id":null,"docs":" `FramedParts` contains an export of the data of a Framed transport.\n It can be used to construct a new [`Framed`] with a different codec.\n It contains all current buffers and the inner transport.","sig":null,"attributes":[{"value":"/ `FramedParts` contains an export of the data of a Framed transport.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410310,"byte_end":6410381,"line_start":390,"line_end":390,"column_start":1,"column_end":72}},{"value":"/ It can be used to construct a new [`Framed`] with a different codec.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410382,"byte_end":6410454,"line_start":391,"line_end":391,"column_start":1,"column_end":73}},{"value":"/ It contains all current buffers and the inner transport.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410455,"byte_end":6410515,"line_start":392,"line_end":392,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410516,"byte_end":6410519,"line_start":393,"line_end":393,"column_start":1,"column_end":4}},{"value":"/ [`Framed`]: crate::codec::Framed","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410520,"byte_end":6410556,"line_start":394,"line_end":394,"column_start":1,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":489},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410682,"byte_end":6410684,"line_start":398,"line_end":398,"column_start":9,"column_end":11},"name":"io","qualname":"::codec::framed::FramedParts::io","value":"T","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The inner transport used to read bytes to and write bytes to\n","sig":null,"attributes":[{"value":"/ The inner transport used to read bytes to and write bytes to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410609,"byte_end":6410673,"line_start":397,"line_end":397,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":490},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410716,"byte_end":6410721,"line_start":401,"line_end":401,"column_start":9,"column_end":14},"name":"codec","qualname":"::codec::framed::FramedParts::codec","value":"U","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The codec\n","sig":null,"attributes":[{"value":"/ The codec","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410694,"byte_end":6410707,"line_start":400,"line_end":400,"column_start":5,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410786,"byte_end":6410794,"line_start":404,"line_end":404,"column_start":9,"column_end":17},"name":"read_buf","qualname":"::codec::framed::FramedParts::read_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" The buffer with read but unprocessed data.\n","sig":null,"attributes":[{"value":"/ The buffer with read but unprocessed data.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410731,"byte_end":6410777,"line_start":403,"line_end":403,"column_start":5,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":492},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410881,"byte_end":6410890,"line_start":407,"line_end":407,"column_start":9,"column_end":18},"name":"write_buf","qualname":"::codec::framed::FramedParts::write_buf","value":"bytes::BytesMut","parent":{"krate":0,"index":486},"children":[],"decl_id":null,"docs":" A buffer with unprocessed data which are not written yet.\n","sig":null,"attributes":[{"value":"/ A buffer with unprocessed data which are not written yet.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410811,"byte_end":6410872,"line_start":406,"line_end":406,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6411123,"byte_end":6411126,"line_start":416,"line_end":416,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedParts<T, U>>::new","value":"pub fn new<I>(T, U) -> FramedParts<T, U> where U: Encoder<I>","parent":null,"children":[],"decl_id":null,"docs":" Create a new, default, `FramedParts`\n","sig":null,"attributes":[{"value":"/ Create a new, default, `FramedParts`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6411071,"byte_end":6411111,"line_start":415,"line_end":415,"column_start":5,"column_end":45}}]},{"kind":"Struct","id":{"krate":0,"index":691},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6411855,"byte_end":6411865,"line_start":19,"line_end":19,"column_start":16,"column_end":26},"name":"FramedRead","qualname":"::codec::framed_read::FramedRead","value":"FramedRead {  }","parent":null,"children":[{"krate":0,"index":694}],"decl_id":null,"docs":" A [`Stream`] of messages decoded from an [`AsyncRead`].","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6412323,"byte_end":6412326,"line_start":45,"line_end":45,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedRead<T, D>>::new","value":"pub fn new(T, D) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6412255,"byte_end":6412311,"line_start":44,"line_end":44,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6412643,"byte_end":6412656,"line_start":56,"line_end":56,"column_start":12,"column_end":25},"name":"with_capacity","qualname":"<FramedRead<T, D>>::with_capacity","value":"pub fn with_capacity(T, D, usize) -> FramedRead<T, D>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`\n initial size.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedRead` with the given `decoder` and a buffer of `capacity`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6412527,"byte_end":6412609,"line_start":54,"line_end":54,"column_start":5,"column_end":87}},{"value":"/ initial size.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6412614,"byte_end":6412631,"line_start":55,"line_end":55,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":201},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413299,"byte_end":6413306,"line_start":76,"line_end":76,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedRead<T, D>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413012,"byte_end":6413075,"line_start":70,"line_end":70,"column_start":5,"column_end":68}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413080,"byte_end":6413097,"line_start":71,"line_end":71,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413102,"byte_end":6413105,"line_start":72,"line_end":72,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413110,"byte_end":6413185,"line_start":73,"line_end":73,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413190,"byte_end":6413260,"line_start":74,"line_end":74,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413265,"byte_end":6413287,"line_start":75,"line_end":75,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":202},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413657,"byte_end":6413664,"line_start":86,"line_end":86,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedRead<T, D>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedRead`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413362,"byte_end":6413433,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ `FramedRead`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413438,"byte_end":6413455,"line_start":81,"line_end":81,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413460,"byte_end":6413463,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413468,"byte_end":6413543,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413548,"byte_end":6413618,"line_start":84,"line_end":84,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413623,"byte_end":6413645,"line_start":85,"line_end":85,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":203},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6414001,"byte_end":6414011,"line_start":95,"line_end":95,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedRead<T, D>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedRead`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedRead`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413732,"byte_end":6413799,"line_start":90,"line_end":90,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413804,"byte_end":6413807,"line_start":91,"line_end":91,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413812,"byte_end":6413887,"line_start":92,"line_end":92,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413892,"byte_end":6413962,"line_start":93,"line_end":93,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6413967,"byte_end":6413989,"line_start":94,"line_end":94,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":204},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6414126,"byte_end":6414133,"line_start":100,"line_end":100,"column_start":12,"column_end":19},"name":"decoder","qualname":"<FramedRead<T, D>>::decoder","value":"pub fn decoder(&Self) -> &D","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6414064,"byte_end":6414114,"line_start":99,"line_end":99,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6414262,"byte_end":6414273,"line_start":105,"line_end":105,"column_start":12,"column_end":23},"name":"decoder_mut","qualname":"<FramedRead<T, D>>::decoder_mut","value":"pub fn decoder_mut(&mut Self) -> &mut D","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6414192,"byte_end":6414250,"line_start":104,"line_end":104,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6414399,"byte_end":6414410,"line_start":110,"line_end":110,"column_start":12,"column_end":23},"name":"read_buffer","qualname":"<FramedRead<T, D>>::read_buffer","value":"pub fn read_buffer(&Self) -> &BytesMut","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the read buffer.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the read buffer.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6414344,"byte_end":6414387,"line_start":109,"line_end":109,"column_start":5,"column_end":48}}]},{"kind":"Struct","id":{"krate":0,"index":605},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6420326,"byte_end":6420337,"line_start":25,"line_end":25,"column_start":16,"column_end":27},"name":"FramedWrite","qualname":"::codec::framed_write::FramedWrite","value":"FramedWrite {  }","parent":null,"children":[{"krate":0,"index":608}],"decl_id":null,"docs":" A [`Sink`] of frames encoded to an `AsyncWrite`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":276},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6420761,"byte_end":6420764,"line_start":47,"line_end":47,"column_start":12,"column_end":15},"name":"new","qualname":"<FramedWrite<T, E>>::new","value":"pub fn new(T, E) -> FramedWrite<T, E>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `FramedWrite` with the given `encoder`.\n","sig":null,"attributes":[{"value":"/ Creates a new `FramedWrite` with the given `encoder`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6420692,"byte_end":6420749,"line_start":46,"line_end":46,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":280},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421289,"byte_end":6421296,"line_start":64,"line_end":64,"column_start":12,"column_end":19},"name":"get_ref","qualname":"<FramedWrite<T, E>>::get_ref","value":"pub fn get_ref(&Self) -> &T","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421001,"byte_end":6421064,"line_start":58,"line_end":58,"column_start":5,"column_end":68}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421069,"byte_end":6421087,"line_start":59,"line_end":59,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421092,"byte_end":6421095,"line_start":60,"line_end":60,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421100,"byte_end":6421175,"line_start":61,"line_end":61,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421180,"byte_end":6421250,"line_start":62,"line_end":62,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421255,"byte_end":6421277,"line_start":63,"line_end":63,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421648,"byte_end":6421655,"line_start":74,"line_end":74,"column_start":12,"column_end":19},"name":"get_mut","qualname":"<FramedWrite<T, E>>::get_mut","value":"pub fn get_mut(&mut Self) -> &mut T","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying I/O stream wrapped by\n `FramedWrite`.","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying I/O stream wrapped by","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421352,"byte_end":6421423,"line_start":68,"line_end":68,"column_start":5,"column_end":76}},{"value":"/ `FramedWrite`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421428,"byte_end":6421446,"line_start":69,"line_end":69,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421451,"byte_end":6421454,"line_start":70,"line_end":70,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421459,"byte_end":6421534,"line_start":71,"line_end":71,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421539,"byte_end":6421609,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421614,"byte_end":6421636,"line_start":73,"line_end":73,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":282},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421993,"byte_end":6422003,"line_start":83,"line_end":83,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FramedWrite<T, E>>::into_inner","value":"pub fn into_inner(Self) -> T","parent":null,"children":[],"decl_id":null,"docs":" Consumes the `FramedWrite`, returning its underlying I/O stream.","sig":null,"attributes":[{"value":"/ Consumes the `FramedWrite`, returning its underlying I/O stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421723,"byte_end":6421791,"line_start":78,"line_end":78,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421796,"byte_end":6421799,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ Note that care should be taken to not tamper with the underlying stream","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421804,"byte_end":6421879,"line_start":80,"line_end":80,"column_start":5,"column_end":80}},{"value":"/ of data coming in as it may corrupt the stream of frames otherwise","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421884,"byte_end":6421954,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ being worked with.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6421959,"byte_end":6421981,"line_start":82,"line_end":82,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6422118,"byte_end":6422125,"line_start":88,"line_end":88,"column_start":12,"column_end":19},"name":"encoder","qualname":"<FramedWrite<T, E>>::encoder","value":"pub fn encoder(&Self) -> &E","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying decoder.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6422056,"byte_end":6422106,"line_start":87,"line_end":87,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":284},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6422254,"byte_end":6422265,"line_start":93,"line_end":93,"column_start":12,"column_end":23},"name":"encoder_mut","qualname":"<FramedWrite<T, E>>::encoder_mut","value":"pub fn encoder_mut(&mut Self) -> &mut E","parent":null,"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying decoder.\n","sig":null,"attributes":[{"value":"/ Returns a mutable reference to the underlying decoder.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6422184,"byte_end":6422242,"line_start":92,"line_end":92,"column_start":5,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":348},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"length_delimited","qualname":"::codec::length_delimited","value":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","parent":null,"children":[{"krate":0,"index":349},{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352},{"krate":0,"index":353},{"krate":0,"index":354},{"krate":0,"index":355},{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":364},{"krate":0,"index":365},{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368},{"krate":0,"index":369},{"krate":0,"index":498},{"krate":0,"index":508},{"krate":0,"index":506},{"krate":0,"index":505},{"krate":0,"index":370},{"krate":0,"index":510},{"krate":0,"index":513},{"krate":0,"index":515},{"krate":0,"index":524},{"krate":0,"index":522},{"krate":0,"index":521},{"krate":0,"index":372},{"krate":0,"index":379},{"krate":0,"index":383},{"krate":0,"index":387},{"krate":0,"index":389},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":414}],"decl_id":null,"docs":" Frame a stream of bytes based on a length prefix","sig":null,"attributes":[{"value":"! Frame a stream of bytes based on a length prefix","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6428600,"byte_end":6428652,"line_start":1,"line_end":1,"column_start":1,"column_end":53}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6428653,"byte_end":6428656,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Many protocols delimit their frames by prefacing frame data with a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6428657,"byte_end":6428727,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! frame head that specifies the length of the frame. The","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6428728,"byte_end":6428786,"line_start":4,"line_end":4,"column_start":1,"column_end":59}},{"value":"! `length_delimited` module provides utilities for handling the length","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6428787,"byte_end":6428859,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"! based framing. This allows the consumer to work with entire frames","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6428860,"byte_end":6428930,"line_start":6,"line_end":6,"column_start":1,"column_end":71}},{"value":"! without having to worry about buffering or other framing logic.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6428931,"byte_end":6428998,"line_start":7,"line_end":7,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6428999,"byte_end":6429002,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! # Getting started","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429003,"byte_end":6429024,"line_start":9,"line_end":9,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429025,"byte_end":6429028,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! If implementing a protocol from scratch, using length delimited framing","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429029,"byte_end":6429104,"line_start":11,"line_end":11,"column_start":1,"column_end":76}},{"value":"! is an easy way to get started. [`LengthDelimitedCodec::new()`] will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429105,"byte_end":6429176,"line_start":12,"line_end":12,"column_start":1,"column_end":72}},{"value":"! return a length delimited codec using default configuration values.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429177,"byte_end":6429248,"line_start":13,"line_end":13,"column_start":1,"column_end":72}},{"value":"! This can then be used to construct a framer to adapt a full-duplex","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429249,"byte_end":6429319,"line_start":14,"line_end":14,"column_start":1,"column_end":71}},{"value":"! byte stream into a stream of frames.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429320,"byte_end":6429360,"line_start":15,"line_end":15,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429361,"byte_end":6429364,"line_start":16,"line_end":16,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429365,"byte_end":6429372,"line_start":17,"line_end":17,"column_start":1,"column_end":8}},{"value":"! use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429373,"byte_end":6429416,"line_start":18,"line_end":18,"column_start":1,"column_end":44}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429417,"byte_end":6429475,"line_start":19,"line_end":19,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429476,"byte_end":6429479,"line_start":20,"line_end":20,"column_start":1,"column_end":4}},{"value":"! fn bind_transport<T: AsyncRead + AsyncWrite>(io: T)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429480,"byte_end":6429535,"line_start":21,"line_end":21,"column_start":1,"column_end":56}},{"value":"!     -> Framed<T, LengthDelimitedCodec>","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429536,"byte_end":6429578,"line_start":22,"line_end":22,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429579,"byte_end":6429584,"line_start":23,"line_end":23,"column_start":1,"column_end":6}},{"value":"!     Framed::new(io, LengthDelimitedCodec::new())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429585,"byte_end":6429637,"line_start":24,"line_end":24,"column_start":1,"column_end":53}},{"value":"! }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429638,"byte_end":6429643,"line_start":25,"line_end":25,"column_start":1,"column_end":6}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429644,"byte_end":6429666,"line_start":26,"line_end":26,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429667,"byte_end":6429674,"line_start":27,"line_end":27,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429675,"byte_end":6429678,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"! The returned transport implements `Sink + Stream` for `BytesMut`. It","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429679,"byte_end":6429751,"line_start":29,"line_end":29,"column_start":1,"column_end":73}},{"value":"! encodes the frame with a big-endian `u32` header denoting the frame","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429752,"byte_end":6429823,"line_start":30,"line_end":30,"column_start":1,"column_end":72}},{"value":"! payload length:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429824,"byte_end":6429843,"line_start":31,"line_end":31,"column_start":1,"column_end":20}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429844,"byte_end":6429847,"line_start":32,"line_end":32,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429848,"byte_end":6429859,"line_start":33,"line_end":33,"column_start":1,"column_end":12}},{"value":"! +----------+--------------------------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429860,"byte_end":6429909,"line_start":34,"line_end":34,"column_start":1,"column_end":50}},{"value":"! | len: u32 |          frame payload         |","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429910,"byte_end":6429959,"line_start":35,"line_end":35,"column_start":1,"column_end":50}},{"value":"! +----------+--------------------------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6429960,"byte_end":6430009,"line_start":36,"line_end":36,"column_start":1,"column_end":50}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430010,"byte_end":6430017,"line_start":37,"line_end":37,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430018,"byte_end":6430021,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"! Specifically, given the following:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430022,"byte_end":6430060,"line_start":39,"line_end":39,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430061,"byte_end":6430064,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430065,"byte_end":6430072,"line_start":41,"line_end":41,"column_start":1,"column_end":8}},{"value":"! use tokio::prelude::*;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430073,"byte_end":6430099,"line_start":42,"line_end":42,"column_start":1,"column_end":27}},{"value":"! use tokio_util::codec::{Framed, LengthDelimitedCodec};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430100,"byte_end":6430158,"line_start":43,"line_end":43,"column_start":1,"column_end":59}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430159,"byte_end":6430162,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"! use futures::SinkExt;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430163,"byte_end":6430188,"line_start":45,"line_end":45,"column_start":1,"column_end":26}},{"value":"! use bytes::Bytes;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430189,"byte_end":6430210,"line_start":46,"line_end":46,"column_start":1,"column_end":22}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430211,"byte_end":6430214,"line_start":47,"line_end":47,"column_start":1,"column_end":4}},{"value":"! async fn write_frame<T>(io: T) -> Result<(), Box<dyn std::error::Error>>","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430215,"byte_end":6430291,"line_start":48,"line_end":48,"column_start":1,"column_end":77}},{"value":"! where","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430292,"byte_end":6430301,"line_start":49,"line_end":49,"column_start":1,"column_end":10}},{"value":"!     T: AsyncRead + AsyncWrite + Unpin,","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430302,"byte_end":6430344,"line_start":50,"line_end":50,"column_start":1,"column_end":43}},{"value":"! {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430345,"byte_end":6430350,"line_start":51,"line_end":51,"column_start":1,"column_end":6}},{"value":"!     let mut transport = Framed::new(io, LengthDelimitedCodec::new());","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430351,"byte_end":6430424,"line_start":52,"line_end":52,"column_start":1,"column_end":74}},{"value":"!     let frame = Bytes::from(\"hello world\");","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430425,"byte_end":6430472,"line_start":53,"line_end":53,"column_start":1,"column_end":48}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430473,"byte_end":6430476,"line_start":54,"line_end":54,"column_start":1,"column_end":4}},{"value":"!     transport.send(frame).await?;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430477,"byte_end":6430514,"line_start":55,"line_end":55,"column_start":1,"column_end":38}},{"value":"!     Ok(())","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430515,"byte_end":6430529,"line_start":56,"line_end":56,"column_start":1,"column_end":15}},{"value":"! }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430530,"byte_end":6430535,"line_start":57,"line_end":57,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430536,"byte_end":6430543,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430544,"byte_end":6430547,"line_start":59,"line_end":59,"column_start":1,"column_end":4}},{"value":"! The encoded frame will look like this:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430548,"byte_end":6430590,"line_start":60,"line_end":60,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430591,"byte_end":6430594,"line_start":61,"line_end":61,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430595,"byte_end":6430606,"line_start":62,"line_end":62,"column_start":1,"column_end":12}},{"value":"! +---- len: u32 ----+---- data ----+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430607,"byte_end":6430646,"line_start":63,"line_end":63,"column_start":1,"column_end":40}},{"value":"! | \\x00\\x00\\x00\\x0b |  hello world |","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430647,"byte_end":6430686,"line_start":64,"line_end":64,"column_start":1,"column_end":40}},{"value":"! +------------------+--------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430687,"byte_end":6430726,"line_start":65,"line_end":65,"column_start":1,"column_end":40}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430727,"byte_end":6430734,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430735,"byte_end":6430738,"line_start":67,"line_end":67,"column_start":1,"column_end":4}},{"value":"! # Decoding","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430739,"byte_end":6430753,"line_start":68,"line_end":68,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430754,"byte_end":6430757,"line_start":69,"line_end":69,"column_start":1,"column_end":4}},{"value":"! [`FramedRead`] adapts an [`AsyncRead`] into a `Stream` of [`BytesMut`],","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430758,"byte_end":6430833,"line_start":70,"line_end":70,"column_start":1,"column_end":76}},{"value":"! such that each yielded [`BytesMut`] value contains the contents of an","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430834,"byte_end":6430907,"line_start":71,"line_end":71,"column_start":1,"column_end":74}},{"value":"! entire frame. There are many configuration parameters enabling","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430908,"byte_end":6430974,"line_start":72,"line_end":72,"column_start":1,"column_end":67}},{"value":"! [`FramedRead`] to handle a wide range of protocols. Here are some","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6430975,"byte_end":6431044,"line_start":73,"line_end":73,"column_start":1,"column_end":70}},{"value":"! examples that will cover the various options at a high level.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431045,"byte_end":6431110,"line_start":74,"line_end":74,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431111,"byte_end":6431114,"line_start":75,"line_end":75,"column_start":1,"column_end":4}},{"value":"! ## Example 1","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431115,"byte_end":6431131,"line_start":76,"line_end":76,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431132,"byte_end":6431135,"line_start":77,"line_end":77,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431136,"byte_end":6431212,"line_start":78,"line_end":78,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431213,"byte_end":6431254,"line_start":79,"line_end":79,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431255,"byte_end":6431258,"line_start":80,"line_end":80,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431259,"byte_end":6431266,"line_start":81,"line_end":81,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431267,"byte_end":6431298,"line_start":82,"line_end":82,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431299,"byte_end":6431349,"line_start":83,"line_end":83,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431350,"byte_end":6431391,"line_start":84,"line_end":84,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431392,"byte_end":6431427,"line_start":85,"line_end":85,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431428,"byte_end":6431476,"line_start":86,"line_end":86,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431477,"byte_end":6431508,"line_start":87,"line_end":87,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431509,"byte_end":6431557,"line_start":88,"line_end":88,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0) // Do not strip frame header","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431558,"byte_end":6431607,"line_start":89,"line_end":89,"column_start":1,"column_end":50}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431608,"byte_end":6431630,"line_start":90,"line_end":90,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431631,"byte_end":6431638,"line_start":91,"line_end":91,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431639,"byte_end":6431661,"line_start":92,"line_end":92,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431662,"byte_end":6431669,"line_start":93,"line_end":93,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431670,"byte_end":6431673,"line_start":94,"line_end":94,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431674,"byte_end":6431722,"line_start":95,"line_end":95,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431723,"byte_end":6431726,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431727,"byte_end":6431738,"line_start":97,"line_end":97,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431739,"byte_end":6431791,"line_start":98,"line_end":98,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431792,"byte_end":6431857,"line_start":99,"line_end":99,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0B |  Hello world  | --> | \\x00\\x0B |  Hello world  |","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431858,"byte_end":6431923,"line_start":100,"line_end":100,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431924,"byte_end":6431989,"line_start":101,"line_end":101,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431990,"byte_end":6431997,"line_start":102,"line_end":102,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6431998,"byte_end":6432001,"line_start":103,"line_end":103,"column_start":1,"column_end":4}},{"value":"! The value of the length field is 11 (`\\x0B`) which represents the length","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432002,"byte_end":6432078,"line_start":104,"line_end":104,"column_start":1,"column_end":77}},{"value":"! of the payload, `hello world`. By default, [`FramedRead`] assumes that","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432079,"byte_end":6432153,"line_start":105,"line_end":105,"column_start":1,"column_end":75}},{"value":"! the length field represents the number of bytes that **follows** the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432154,"byte_end":6432226,"line_start":106,"line_end":106,"column_start":1,"column_end":73}},{"value":"! length field. Thus, the entire frame has a length of 13: 2 bytes for the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432227,"byte_end":6432303,"line_start":107,"line_end":107,"column_start":1,"column_end":77}},{"value":"! frame head + 11 bytes for the payload.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432304,"byte_end":6432346,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432347,"byte_end":6432350,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"! ## Example 2","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432351,"byte_end":6432367,"line_start":110,"line_end":110,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432368,"byte_end":6432371,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, omitting the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432372,"byte_end":6432447,"line_start":112,"line_end":112,"column_start":1,"column_end":76}},{"value":"! frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432448,"byte_end":6432489,"line_start":113,"line_end":113,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432490,"byte_end":6432493,"line_start":114,"line_end":114,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432494,"byte_end":6432501,"line_start":115,"line_end":115,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432502,"byte_end":6432533,"line_start":116,"line_end":116,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432534,"byte_end":6432584,"line_start":117,"line_end":117,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432585,"byte_end":6432626,"line_start":118,"line_end":118,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432627,"byte_end":6432662,"line_start":119,"line_end":119,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432663,"byte_end":6432711,"line_start":120,"line_end":120,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432712,"byte_end":6432743,"line_start":121,"line_end":121,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(0)   // default value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432744,"byte_end":6432792,"line_start":122,"line_end":122,"column_start":1,"column_end":49}},{"value":"!     // `num_skip` is not needed, the default is to skip","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432793,"byte_end":6432852,"line_start":123,"line_end":123,"column_start":1,"column_end":60}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432853,"byte_end":6432875,"line_start":124,"line_end":124,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432876,"byte_end":6432883,"line_start":125,"line_end":125,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432884,"byte_end":6432906,"line_start":126,"line_end":126,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432907,"byte_end":6432914,"line_start":127,"line_end":127,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432915,"byte_end":6432918,"line_start":128,"line_end":128,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432919,"byte_end":6432967,"line_start":129,"line_end":129,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432968,"byte_end":6432971,"line_start":130,"line_end":130,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432972,"byte_end":6432983,"line_start":131,"line_end":131,"column_start":1,"column_end":12}},{"value":"!          INPUT                        DECODED","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6432984,"byte_end":6433033,"line_start":132,"line_end":132,"column_start":1,"column_end":50}},{"value":"! +-- len ---+--- Payload ---+     +--- Payload ---+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433034,"byte_end":6433088,"line_start":133,"line_end":133,"column_start":1,"column_end":55}},{"value":"! | \\x00\\x0B |  Hello world  | --> |  Hello world  |","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433089,"byte_end":6433143,"line_start":134,"line_end":134,"column_start":1,"column_end":55}},{"value":"! +----------+---------------+     +---------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433144,"byte_end":6433198,"line_start":135,"line_end":135,"column_start":1,"column_end":55}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433199,"byte_end":6433206,"line_start":136,"line_end":136,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433207,"byte_end":6433210,"line_start":137,"line_end":137,"column_start":1,"column_end":4}},{"value":"! This is similar to the first example, the only difference is that the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433211,"byte_end":6433284,"line_start":138,"line_end":138,"column_start":1,"column_end":74}},{"value":"! frame head is **not** included in the yielded `BytesMut` value.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433285,"byte_end":6433352,"line_start":139,"line_end":139,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433353,"byte_end":6433356,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"! ## Example 3","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433357,"byte_end":6433373,"line_start":141,"line_end":141,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433374,"byte_end":6433377,"line_start":142,"line_end":142,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 0, including the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433378,"byte_end":6433454,"line_start":143,"line_end":143,"column_start":1,"column_end":77}},{"value":"! frame head in the yielded `BytesMut`. In this case, the length field","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433455,"byte_end":6433527,"line_start":144,"line_end":144,"column_start":1,"column_end":73}},{"value":"! **includes** the frame head length.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433528,"byte_end":6433567,"line_start":145,"line_end":145,"column_start":1,"column_end":40}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433568,"byte_end":6433571,"line_start":146,"line_end":146,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433572,"byte_end":6433579,"line_start":147,"line_end":147,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433580,"byte_end":6433611,"line_start":148,"line_end":148,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433612,"byte_end":6433662,"line_start":149,"line_end":149,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433663,"byte_end":6433704,"line_start":150,"line_end":150,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433705,"byte_end":6433740,"line_start":151,"line_end":151,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433741,"byte_end":6433789,"line_start":152,"line_end":152,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433790,"byte_end":6433821,"line_start":153,"line_end":153,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-2)  // size of head","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433822,"byte_end":6433869,"line_start":154,"line_end":154,"column_start":1,"column_end":48}},{"value":"!     .num_skip(0)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433870,"byte_end":6433890,"line_start":155,"line_end":155,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433891,"byte_end":6433913,"line_start":156,"line_end":156,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433914,"byte_end":6433921,"line_start":157,"line_end":157,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433922,"byte_end":6433944,"line_start":158,"line_end":158,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433945,"byte_end":6433952,"line_start":159,"line_end":159,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433953,"byte_end":6433956,"line_start":160,"line_end":160,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6433957,"byte_end":6434005,"line_start":161,"line_end":161,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434006,"byte_end":6434009,"line_start":162,"line_end":162,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434010,"byte_end":6434021,"line_start":163,"line_end":163,"column_start":1,"column_end":12}},{"value":"!          INPUT                           DECODED","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434022,"byte_end":6434074,"line_start":164,"line_end":164,"column_start":1,"column_end":53}},{"value":"! +-- len ---+--- Payload ---+     +-- len ---+--- Payload ---+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434075,"byte_end":6434140,"line_start":165,"line_end":165,"column_start":1,"column_end":66}},{"value":"! | \\x00\\x0D |  Hello world  | --> | \\x00\\x0D |  Hello world  |","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434141,"byte_end":6434206,"line_start":166,"line_end":166,"column_start":1,"column_end":66}},{"value":"! +----------+---------------+     +----------+---------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434207,"byte_end":6434272,"line_start":167,"line_end":167,"column_start":1,"column_end":66}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434273,"byte_end":6434280,"line_start":168,"line_end":168,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434281,"byte_end":6434284,"line_start":169,"line_end":169,"column_start":1,"column_end":4}},{"value":"! In most cases, the length field represents the length of the payload","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434285,"byte_end":6434357,"line_start":170,"line_end":170,"column_start":1,"column_end":73}},{"value":"! only, as shown in the previous examples. However, in some protocols the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434358,"byte_end":6434433,"line_start":171,"line_end":171,"column_start":1,"column_end":76}},{"value":"! length field represents the length of the whole frame, including the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434434,"byte_end":6434506,"line_start":172,"line_end":172,"column_start":1,"column_end":73}},{"value":"! head. In such cases, we specify a negative `length_adjustment` to adjust","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434507,"byte_end":6434583,"line_start":173,"line_end":173,"column_start":1,"column_end":77}},{"value":"! the value provided in the frame head to represent the payload length.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434584,"byte_end":6434657,"line_start":174,"line_end":174,"column_start":1,"column_end":74}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434658,"byte_end":6434661,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"! ## Example 4","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434662,"byte_end":6434678,"line_start":176,"line_end":176,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434679,"byte_end":6434682,"line_start":177,"line_end":177,"column_start":1,"column_end":4}},{"value":"! The following will parse a 3 byte length field at offset 0 in a 5 byte","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434683,"byte_end":6434757,"line_start":178,"line_end":178,"column_start":1,"column_end":75}},{"value":"! frame head, including the frame head in the yielded `BytesMut`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434758,"byte_end":6434825,"line_start":179,"line_end":179,"column_start":1,"column_end":68}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434826,"byte_end":6434829,"line_start":180,"line_end":180,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434830,"byte_end":6434837,"line_start":181,"line_end":181,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434838,"byte_end":6434869,"line_start":182,"line_end":182,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434870,"byte_end":6434920,"line_start":183,"line_end":183,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434921,"byte_end":6434962,"line_start":184,"line_end":184,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434963,"byte_end":6434998,"line_start":185,"line_end":185,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(0) // default value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6434999,"byte_end":6435047,"line_start":186,"line_end":186,"column_start":1,"column_end":49}},{"value":"!     .length_field_length(3)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435048,"byte_end":6435079,"line_start":187,"line_end":187,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(2)  // remaining head","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435080,"byte_end":6435128,"line_start":188,"line_end":188,"column_start":1,"column_end":49}},{"value":"!     .num_skip(0)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435129,"byte_end":6435149,"line_start":189,"line_end":189,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435150,"byte_end":6435172,"line_start":190,"line_end":190,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435173,"byte_end":6435180,"line_start":191,"line_end":191,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435181,"byte_end":6435203,"line_start":192,"line_end":192,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435204,"byte_end":6435211,"line_start":193,"line_end":193,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435212,"byte_end":6435215,"line_start":194,"line_end":194,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435216,"byte_end":6435264,"line_start":195,"line_end":195,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435265,"byte_end":6435268,"line_start":196,"line_end":196,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435269,"byte_end":6435280,"line_start":197,"line_end":197,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435281,"byte_end":6435307,"line_start":198,"line_end":198,"column_start":1,"column_end":27}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435308,"byte_end":6435353,"line_start":199,"line_end":199,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435354,"byte_end":6435399,"line_start":200,"line_end":200,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435400,"byte_end":6435445,"line_start":201,"line_end":201,"column_start":1,"column_end":46}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435446,"byte_end":6435449,"line_start":202,"line_end":202,"column_start":1,"column_end":4}},{"value":"!                  DECODED","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435450,"byte_end":6435478,"line_start":203,"line_end":203,"column_start":1,"column_end":29}},{"value":"! +---- len -----+- head -+--- Payload ---+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435479,"byte_end":6435524,"line_start":204,"line_end":204,"column_start":1,"column_end":46}},{"value":"! | \\x00\\x00\\x0B | \\xCAFE |  Hello world  |","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435525,"byte_end":6435570,"line_start":205,"line_end":205,"column_start":1,"column_end":46}},{"value":"! +--------------+--------+---------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435571,"byte_end":6435616,"line_start":206,"line_end":206,"column_start":1,"column_end":46}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435617,"byte_end":6435624,"line_start":207,"line_end":207,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435625,"byte_end":6435628,"line_start":208,"line_end":208,"column_start":1,"column_end":4}},{"value":"! A more advanced example that shows a case where there is extra frame","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435629,"byte_end":6435701,"line_start":209,"line_end":209,"column_start":1,"column_end":73}},{"value":"! head data between the length field and the payload. In such cases, it is","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435702,"byte_end":6435778,"line_start":210,"line_end":210,"column_start":1,"column_end":77}},{"value":"! usually desirable to include the frame head as part of the yielded","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435779,"byte_end":6435849,"line_start":211,"line_end":211,"column_start":1,"column_end":71}},{"value":"! `BytesMut`. This lets consumers of the length delimited framer to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435850,"byte_end":6435919,"line_start":212,"line_end":212,"column_start":1,"column_end":70}},{"value":"! process the frame head as needed.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435920,"byte_end":6435957,"line_start":213,"line_end":213,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435958,"byte_end":6435961,"line_start":214,"line_end":214,"column_start":1,"column_end":4}},{"value":"! The positive `length_adjustment` value lets `FramedRead` factor in the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6435962,"byte_end":6436036,"line_start":215,"line_end":215,"column_start":1,"column_end":75}},{"value":"! additional head into the frame length calculation.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436037,"byte_end":6436091,"line_start":216,"line_end":216,"column_start":1,"column_end":55}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436092,"byte_end":6436095,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"! ## Example 5","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436096,"byte_end":6436112,"line_start":218,"line_end":218,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436113,"byte_end":6436116,"line_start":219,"line_end":219,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436117,"byte_end":6436190,"line_start":220,"line_end":220,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436191,"byte_end":6436267,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436268,"byte_end":6436342,"line_start":222,"line_end":222,"column_start":1,"column_end":75}},{"value":"! included.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436343,"byte_end":6436356,"line_start":223,"line_end":223,"column_start":1,"column_end":14}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436357,"byte_end":6436360,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436361,"byte_end":6436368,"line_start":225,"line_end":225,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436369,"byte_end":6436400,"line_start":226,"line_end":226,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436401,"byte_end":6436451,"line_start":227,"line_end":227,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436452,"byte_end":6436493,"line_start":228,"line_end":228,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436494,"byte_end":6436529,"line_start":229,"line_end":229,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436530,"byte_end":6436579,"line_start":230,"line_end":230,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436580,"byte_end":6436611,"line_start":231,"line_end":231,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(1)  // length of hdr2","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436612,"byte_end":6436660,"line_start":232,"line_end":232,"column_start":1,"column_end":49}},{"value":"!     .num_skip(3) // length of hdr1 + LEN","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436661,"byte_end":6436705,"line_start":233,"line_end":233,"column_start":1,"column_end":45}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436706,"byte_end":6436728,"line_start":234,"line_end":234,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436729,"byte_end":6436736,"line_start":235,"line_end":235,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436737,"byte_end":6436759,"line_start":236,"line_end":236,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436760,"byte_end":6436767,"line_start":237,"line_end":237,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436768,"byte_end":6436771,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436772,"byte_end":6436820,"line_start":239,"line_end":239,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436821,"byte_end":6436824,"line_start":240,"line_end":240,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436825,"byte_end":6436836,"line_start":241,"line_end":241,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436837,"byte_end":6436863,"line_start":242,"line_end":242,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436864,"byte_end":6436914,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0B |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436915,"byte_end":6436965,"line_start":244,"line_end":244,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6436966,"byte_end":6437016,"line_start":245,"line_end":245,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437017,"byte_end":6437020,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437021,"byte_end":6437041,"line_start":247,"line_end":247,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437042,"byte_end":6437072,"line_start":248,"line_end":248,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437073,"byte_end":6437103,"line_start":249,"line_end":249,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437104,"byte_end":6437134,"line_start":250,"line_end":250,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437135,"byte_end":6437142,"line_start":251,"line_end":251,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437143,"byte_end":6437146,"line_start":252,"line_end":252,"column_start":1,"column_end":4}},{"value":"! The length field is situated in the middle of the frame head. In this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437147,"byte_end":6437220,"line_start":253,"line_end":253,"column_start":1,"column_end":74}},{"value":"! case, the first byte in the frame head could be a version or some other","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437221,"byte_end":6437296,"line_start":254,"line_end":254,"column_start":1,"column_end":76}},{"value":"! identifier that is not needed for processing. On the other hand, the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437297,"byte_end":6437369,"line_start":255,"line_end":255,"column_start":1,"column_end":73}},{"value":"! second half of the head is needed.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437370,"byte_end":6437408,"line_start":256,"line_end":256,"column_start":1,"column_end":39}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437409,"byte_end":6437412,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"! `length_field_offset` indicates how many bytes to skip before starting","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437413,"byte_end":6437487,"line_start":258,"line_end":258,"column_start":1,"column_end":75}},{"value":"! to read the length field.  `length_adjustment` is the number of bytes to","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437488,"byte_end":6437564,"line_start":259,"line_end":259,"column_start":1,"column_end":77}},{"value":"! skip starting at the end of the length field. In this case, it is the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437565,"byte_end":6437638,"line_start":260,"line_end":260,"column_start":1,"column_end":74}},{"value":"! second half of the head.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437639,"byte_end":6437667,"line_start":261,"line_end":261,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437668,"byte_end":6437671,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"! ## Example 6","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437672,"byte_end":6437688,"line_start":263,"line_end":263,"column_start":1,"column_end":17}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437689,"byte_end":6437692,"line_start":264,"line_end":264,"column_start":1,"column_end":4}},{"value":"! The following will parse a `u16` length field at offset 1 of a 4 byte","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437693,"byte_end":6437766,"line_start":265,"line_end":265,"column_start":1,"column_end":74}},{"value":"! frame head. The first byte and the length field will be omitted from the","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437767,"byte_end":6437843,"line_start":266,"line_end":266,"column_start":1,"column_end":77}},{"value":"! yielded `BytesMut`, but the trailing 2 bytes of the frame head will be","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437844,"byte_end":6437918,"line_start":267,"line_end":267,"column_start":1,"column_end":75}},{"value":"! included. In this case, the length field **includes** the frame head","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437919,"byte_end":6437991,"line_start":268,"line_end":268,"column_start":1,"column_end":73}},{"value":"! length.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6437992,"byte_end":6438003,"line_start":269,"line_end":269,"column_start":1,"column_end":12}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438004,"byte_end":6438007,"line_start":270,"line_end":270,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438008,"byte_end":6438015,"line_start":271,"line_end":271,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438016,"byte_end":6438047,"line_start":272,"line_end":272,"column_start":1,"column_end":32}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438048,"byte_end":6438098,"line_start":273,"line_end":273,"column_start":1,"column_end":51}},{"value":"! # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438099,"byte_end":6438140,"line_start":274,"line_end":274,"column_start":1,"column_end":42}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438141,"byte_end":6438176,"line_start":275,"line_end":275,"column_start":1,"column_end":36}},{"value":"!     .length_field_offset(1) // length of hdr1","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438177,"byte_end":6438226,"line_start":276,"line_end":276,"column_start":1,"column_end":50}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438227,"byte_end":6438258,"line_start":277,"line_end":277,"column_start":1,"column_end":32}},{"value":"!     .length_adjustment(-3)  // length of hdr1 + LEN, negative","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438259,"byte_end":6438324,"line_start":278,"line_end":278,"column_start":1,"column_end":66}},{"value":"!     .num_skip(3)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438325,"byte_end":6438345,"line_start":279,"line_end":279,"column_start":1,"column_end":21}},{"value":"!     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438346,"byte_end":6438368,"line_start":280,"line_end":280,"column_start":1,"column_end":23}},{"value":"! # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438369,"byte_end":6438376,"line_start":281,"line_end":281,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438377,"byte_end":6438384,"line_start":282,"line_end":282,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438385,"byte_end":6438388,"line_start":283,"line_end":283,"column_start":1,"column_end":4}},{"value":"! The following frame will be decoded as such:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438389,"byte_end":6438437,"line_start":284,"line_end":284,"column_start":1,"column_end":49}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438438,"byte_end":6438441,"line_start":285,"line_end":285,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438442,"byte_end":6438453,"line_start":286,"line_end":286,"column_start":1,"column_end":12}},{"value":"!                  INPUT","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438454,"byte_end":6438480,"line_start":287,"line_end":287,"column_start":1,"column_end":27}},{"value":"! +- hdr1 -+-- len ---+- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438481,"byte_end":6438531,"line_start":288,"line_end":288,"column_start":1,"column_end":51}},{"value":"! |  \\xCA  | \\x00\\x0F |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438532,"byte_end":6438582,"line_start":289,"line_end":289,"column_start":1,"column_end":51}},{"value":"! +--------+----------+--------+---------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438583,"byte_end":6438633,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438634,"byte_end":6438637,"line_start":291,"line_end":291,"column_start":1,"column_end":4}},{"value":"!          DECODED","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438638,"byte_end":6438658,"line_start":292,"line_end":292,"column_start":1,"column_end":21}},{"value":"! +- hdr2 -+--- Payload ---+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438659,"byte_end":6438689,"line_start":293,"line_end":293,"column_start":1,"column_end":31}},{"value":"! |  \\xFE  |  Hello world  |","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438690,"byte_end":6438720,"line_start":294,"line_end":294,"column_start":1,"column_end":31}},{"value":"! +--------+---------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438721,"byte_end":6438751,"line_start":295,"line_end":295,"column_start":1,"column_end":31}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438752,"byte_end":6438759,"line_start":296,"line_end":296,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438760,"byte_end":6438763,"line_start":297,"line_end":297,"column_start":1,"column_end":4}},{"value":"! Similar to the example above, the difference is that the length field","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438764,"byte_end":6438837,"line_start":298,"line_end":298,"column_start":1,"column_end":74}},{"value":"! represents the length of the entire frame instead of just the payload.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438838,"byte_end":6438912,"line_start":299,"line_end":299,"column_start":1,"column_end":75}},{"value":"! The length of `hdr1` and `len` must be counted in `length_adjustment`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438913,"byte_end":6438987,"line_start":300,"line_end":300,"column_start":1,"column_end":75}},{"value":"! Note that the length of `hdr2` does **not** need to be explicitly set","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6438988,"byte_end":6439061,"line_start":301,"line_end":301,"column_start":1,"column_end":74}},{"value":"! anywhere because it already is factored into the total frame length that","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439062,"byte_end":6439138,"line_start":302,"line_end":302,"column_start":1,"column_end":77}},{"value":"! is read from the byte stream.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439139,"byte_end":6439172,"line_start":303,"line_end":303,"column_start":1,"column_end":34}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439173,"byte_end":6439176,"line_start":304,"line_end":304,"column_start":1,"column_end":4}},{"value":"! # Encoding","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439177,"byte_end":6439191,"line_start":305,"line_end":305,"column_start":1,"column_end":15}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439192,"byte_end":6439195,"line_start":306,"line_end":306,"column_start":1,"column_end":4}},{"value":"! [`FramedWrite`] adapts an [`AsyncWrite`] into a `Sink` of [`BytesMut`],","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439196,"byte_end":6439271,"line_start":307,"line_end":307,"column_start":1,"column_end":76}},{"value":"! such that each submitted [`BytesMut`] is prefaced by a length field.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439272,"byte_end":6439344,"line_start":308,"line_end":308,"column_start":1,"column_end":73}},{"value":"! There are fewer configuration options than [`FramedRead`]. Given","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439345,"byte_end":6439413,"line_start":309,"line_end":309,"column_start":1,"column_end":69}},{"value":"! protocols that have more complex frame heads, an encoder should probably","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439414,"byte_end":6439490,"line_start":310,"line_end":310,"column_start":1,"column_end":77}},{"value":"! be written by hand using [`Encoder`].","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439491,"byte_end":6439532,"line_start":311,"line_end":311,"column_start":1,"column_end":42}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439533,"byte_end":6439536,"line_start":312,"line_end":312,"column_start":1,"column_end":4}},{"value":"! Here is a simple example, given a `FramedWrite` with the following","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439537,"byte_end":6439607,"line_start":313,"line_end":313,"column_start":1,"column_end":71}},{"value":"! configuration:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439608,"byte_end":6439626,"line_start":314,"line_end":314,"column_start":1,"column_end":19}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439627,"byte_end":6439630,"line_start":315,"line_end":315,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439631,"byte_end":6439638,"line_start":316,"line_end":316,"column_start":1,"column_end":8}},{"value":"! # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439639,"byte_end":6439671,"line_start":317,"line_end":317,"column_start":1,"column_end":33}},{"value":"! # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439672,"byte_end":6439722,"line_start":318,"line_end":318,"column_start":1,"column_end":51}},{"value":"! # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439723,"byte_end":6439767,"line_start":319,"line_end":319,"column_start":1,"column_end":45}},{"value":"! # let _ =","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439768,"byte_end":6439781,"line_start":320,"line_end":320,"column_start":1,"column_end":14}},{"value":"! LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439782,"byte_end":6439817,"line_start":321,"line_end":321,"column_start":1,"column_end":36}},{"value":"!     .length_field_length(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439818,"byte_end":6439849,"line_start":322,"line_end":322,"column_start":1,"column_end":32}},{"value":"!     .new_write(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439850,"byte_end":6439873,"line_start":323,"line_end":323,"column_start":1,"column_end":24}},{"value":"! # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439874,"byte_end":6439881,"line_start":324,"line_end":324,"column_start":1,"column_end":8}},{"value":"! # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439882,"byte_end":6439904,"line_start":325,"line_end":325,"column_start":1,"column_end":23}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439905,"byte_end":6439912,"line_start":326,"line_end":326,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439913,"byte_end":6439916,"line_start":327,"line_end":327,"column_start":1,"column_end":4}},{"value":"! A payload of `hello world` will be encoded as:","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439917,"byte_end":6439967,"line_start":328,"line_end":328,"column_start":1,"column_end":51}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439968,"byte_end":6439971,"line_start":329,"line_end":329,"column_start":1,"column_end":4}},{"value":"! ```text","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439972,"byte_end":6439983,"line_start":330,"line_end":330,"column_start":1,"column_end":12}},{"value":"! +- len: u16 -+---- data ----+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6439984,"byte_end":6440017,"line_start":331,"line_end":331,"column_start":1,"column_end":34}},{"value":"! |  \\x00\\x0b  |  hello world |","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440018,"byte_end":6440051,"line_start":332,"line_end":332,"column_start":1,"column_end":34}},{"value":"! +------------+--------------+","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440052,"byte_end":6440085,"line_start":333,"line_end":333,"column_start":1,"column_end":34}},{"value":"! ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440086,"byte_end":6440093,"line_start":334,"line_end":334,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440094,"byte_end":6440097,"line_start":335,"line_end":335,"column_start":1,"column_end":4}},{"value":"! [`LengthDelimitedCodec::new()`]: struct.LengthDelimitedCodec.html#method.new","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440098,"byte_end":6440178,"line_start":336,"line_end":336,"column_start":1,"column_end":81}},{"value":"! [`FramedRead`]: struct.FramedRead.html","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440179,"byte_end":6440221,"line_start":337,"line_end":337,"column_start":1,"column_end":43}},{"value":"! [`FramedWrite`]: struct.FramedWrite.html","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440222,"byte_end":6440266,"line_start":338,"line_end":338,"column_start":1,"column_end":45}},{"value":"! [`AsyncRead`]: ../../trait.AsyncRead.html","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440267,"byte_end":6440312,"line_start":339,"line_end":339,"column_start":1,"column_end":46}},{"value":"! [`AsyncWrite`]: ../../trait.AsyncWrite.html","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440313,"byte_end":6440360,"line_start":340,"line_end":340,"column_start":1,"column_end":48}},{"value":"! [`Encoder`]: ../trait.Encoder.html","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440361,"byte_end":6440399,"line_start":341,"line_end":341,"column_start":1,"column_end":39}},{"value":"! [`BytesMut`]: https://docs.rs/bytes/0.4/bytes/struct.BytesMut.html","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440400,"byte_end":6440470,"line_start":342,"line_end":342,"column_start":1,"column_end":71}}]},{"kind":"Struct","id":{"krate":0,"index":498},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6441032,"byte_end":6441039,"line_start":359,"line_end":359,"column_start":12,"column_end":19},"name":"Builder","qualname":"::codec::length_delimited::Builder","value":"Builder {  }","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":500},{"krate":0,"index":501},{"krate":0,"index":502},{"krate":0,"index":503},{"krate":0,"index":504}],"decl_id":null,"docs":" Configure length delimited `LengthDelimitedCodec`s.","sig":null,"attributes":[{"value":"/ Configure length delimited `LengthDelimitedCodec`s.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440714,"byte_end":6440769,"line_start":353,"line_end":353,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440770,"byte_end":6440773,"line_start":354,"line_end":354,"column_start":1,"column_end":4}},{"value":"/ `Builder` enables constructing configured length delimited codecs. Note","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440774,"byte_end":6440849,"line_start":355,"line_end":355,"column_start":1,"column_end":76}},{"value":"/ that not all configuration settings apply to both encoding and decoding. See","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440850,"byte_end":6440930,"line_start":356,"line_end":356,"column_start":1,"column_end":81}},{"value":"/ the documentation for specific methods for more detail.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6440931,"byte_end":6440990,"line_start":357,"line_end":357,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":370},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6441710,"byte_end":6441735,"line_start":381,"line_end":381,"column_start":12,"column_end":37},"name":"LengthDelimitedCodecError","qualname":"::codec::length_delimited::LengthDelimitedCodecError","value":"LengthDelimitedCodecError {  }","parent":null,"children":[{"krate":0,"index":371}],"decl_id":null,"docs":" An error when the number of bytes read is more than max frame length.\n","sig":null,"attributes":[{"value":"/ An error when the number of bytes read is more than max frame length.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6441625,"byte_end":6441698,"line_start":380,"line_end":380,"column_start":1,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":510},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442080,"byte_end":6442100,"line_start":394,"line_end":394,"column_start":12,"column_end":32},"name":"LengthDelimitedCodec","qualname":"::codec::length_delimited::LengthDelimitedCodec","value":"LengthDelimitedCodec {  }","parent":null,"children":[{"krate":0,"index":511},{"krate":0,"index":512}],"decl_id":null,"docs":" A codec for frames delimited by a frame head specifying their lengths.","sig":null,"attributes":[{"value":"/ A codec for frames delimited by a frame head specifying their lengths.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6441756,"byte_end":6441830,"line_start":385,"line_end":385,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6441831,"byte_end":6441834,"line_start":386,"line_end":386,"column_start":1,"column_end":4}},{"value":"/ This allows the consumer to work with entire frames without having to worry","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6441835,"byte_end":6441914,"line_start":387,"line_end":387,"column_start":1,"column_end":80}},{"value":"/ about buffering or other framing logic.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6441915,"byte_end":6441958,"line_start":388,"line_end":388,"column_start":1,"column_end":44}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6441959,"byte_end":6441962,"line_start":389,"line_end":389,"column_start":1,"column_end":4}},{"value":"/ See [module level] documentation for more detail.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6441963,"byte_end":6442016,"line_start":390,"line_end":390,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442017,"byte_end":6442020,"line_start":391,"line_end":391,"column_start":1,"column_end":4}},{"value":"/ [module level]: index.html","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442021,"byte_end":6442051,"line_start":392,"line_end":392,"column_start":1,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442444,"byte_end":6442447,"line_start":412,"line_end":412,"column_start":12,"column_end":15},"name":"new","qualname":"<LengthDelimitedCodec>::new","value":"pub fn new() -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `LengthDelimitedCodec` with the default configuration values.\n","sig":null,"attributes":[{"value":"/ Creates a new `LengthDelimitedCodec` with the default configuration values.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442353,"byte_end":6442432,"line_start":411,"line_end":411,"column_start":5,"column_end":84}}]},{"kind":"Method","id":{"krate":0,"index":374},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442674,"byte_end":6442681,"line_start":421,"line_end":421,"column_start":12,"column_end":19},"name":"builder","qualname":"<LengthDelimitedCodec>::builder","value":"pub fn builder() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.\n","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442571,"byte_end":6442646,"line_start":419,"line_end":419,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442651,"byte_end":6442662,"line_start":420,"line_end":420,"column_start":5,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":375},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442903,"byte_end":6442919,"line_start":429,"line_end":429,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<LengthDelimitedCodec>::max_frame_length","value":"pub fn max_frame_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the current max frame setting","sig":null,"attributes":[{"value":"/ Returns the current max frame setting","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442731,"byte_end":6442772,"line_start":425,"line_end":425,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442777,"byte_end":6442780,"line_start":426,"line_end":426,"column_start":5,"column_end":8}},{"value":"/ This is the largest size this codec will accept from the wire. Larger","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442785,"byte_end":6442858,"line_start":427,"line_end":427,"column_start":5,"column_end":78}},{"value":"/ frames will be rejected.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442863,"byte_end":6442891,"line_start":428,"line_end":428,"column_start":5,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":376},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6443340,"byte_end":6443360,"line_start":439,"line_end":439,"column_start":12,"column_end":32},"name":"set_max_frame_length","qualname":"<LengthDelimitedCodec>::set_max_frame_length","value":"pub fn set_max_frame_length(&mut Self, usize)","parent":null,"children":[],"decl_id":null,"docs":" Updates the max frame setting.","sig":null,"attributes":[{"value":"/ Updates the max frame setting.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442984,"byte_end":6443018,"line_start":433,"line_end":433,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6443023,"byte_end":6443026,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The change takes effect the next time a frame is decoded. In other","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6443031,"byte_end":6443101,"line_start":435,"line_end":435,"column_start":5,"column_end":75}},{"value":"/ words, if a frame is currently in process of being decoded with a frame","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6443106,"byte_end":6443181,"line_start":436,"line_end":436,"column_start":5,"column_end":80}},{"value":"/ size greater than `val` but less than the max frame length in effect","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6443186,"byte_end":6443258,"line_start":437,"line_end":437,"column_start":5,"column_end":77}},{"value":"/ before calling this function, then the frame will be allowed.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6443263,"byte_end":6443328,"line_start":438,"line_end":438,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448636,"byte_end":6448639,"line_start":621,"line_end":621,"column_start":12,"column_end":15},"name":"new","qualname":"<Builder>::new","value":"pub fn new() -> Builder","parent":null,"children":[],"decl_id":null,"docs":" Creates a new length delimited codec builder with default configuration\n values.","sig":null,"attributes":[{"value":"/ Creates a new length delimited codec builder with default configuration","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448094,"byte_end":6448169,"line_start":602,"line_end":602,"column_start":5,"column_end":80}},{"value":"/ values.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448174,"byte_end":6448185,"line_start":603,"line_end":603,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448190,"byte_end":6448193,"line_start":604,"line_end":604,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448198,"byte_end":6448212,"line_start":605,"line_end":605,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448217,"byte_end":6448220,"line_start":606,"line_end":606,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448225,"byte_end":6448232,"line_start":607,"line_end":607,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448237,"byte_end":6448268,"line_start":608,"line_end":608,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448273,"byte_end":6448321,"line_start":609,"line_end":609,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448326,"byte_end":6448329,"line_start":610,"line_end":610,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448334,"byte_end":6448375,"line_start":611,"line_end":611,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448380,"byte_end":6448415,"line_start":612,"line_end":612,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448420,"byte_end":6448451,"line_start":613,"line_end":613,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448456,"byte_end":6448487,"line_start":614,"line_end":614,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448492,"byte_end":6448521,"line_start":615,"line_end":615,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448526,"byte_end":6448546,"line_start":616,"line_end":616,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448551,"byte_end":6448573,"line_start":617,"line_end":617,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448578,"byte_end":6448585,"line_start":618,"line_end":618,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448590,"byte_end":6448612,"line_start":619,"line_end":619,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448617,"byte_end":6448624,"line_start":620,"line_end":620,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":391},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449824,"byte_end":6449834,"line_start":662,"line_end":662,"column_start":12,"column_end":22},"name":"big_endian","qualname":"<Builder>::big_endian","value":"pub fn big_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a big endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a big endian integer","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449303,"byte_end":6449352,"line_start":643,"line_end":643,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449357,"byte_end":6449360,"line_start":644,"line_end":644,"column_start":5,"column_end":8}},{"value":"/ This is the default setting.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449365,"byte_end":6449397,"line_start":645,"line_end":645,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449402,"byte_end":6449405,"line_start":646,"line_end":646,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449410,"byte_end":6449478,"line_start":647,"line_end":647,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449483,"byte_end":6449486,"line_start":648,"line_end":648,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449491,"byte_end":6449505,"line_start":649,"line_end":649,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449510,"byte_end":6449513,"line_start":650,"line_end":650,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449518,"byte_end":6449525,"line_start":651,"line_end":651,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449530,"byte_end":6449561,"line_start":652,"line_end":652,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449566,"byte_end":6449614,"line_start":653,"line_end":653,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449619,"byte_end":6449622,"line_start":654,"line_end":654,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449627,"byte_end":6449668,"line_start":655,"line_end":655,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449673,"byte_end":6449708,"line_start":656,"line_end":656,"column_start":5,"column_end":40}},{"value":"/     .big_endian()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449713,"byte_end":6449734,"line_start":657,"line_end":657,"column_start":5,"column_end":26}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449739,"byte_end":6449761,"line_start":658,"line_end":658,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449766,"byte_end":6449773,"line_start":659,"line_end":659,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449778,"byte_end":6449800,"line_start":660,"line_end":660,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449805,"byte_end":6449812,"line_start":661,"line_end":661,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":392},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450466,"byte_end":6450479,"line_start":686,"line_end":686,"column_start":12,"column_end":25},"name":"little_endian","qualname":"<Builder>::little_endian","value":"pub fn little_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a little endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a little endian integer","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449933,"byte_end":6449985,"line_start":667,"line_end":667,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449990,"byte_end":6449993,"line_start":668,"line_end":668,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6449998,"byte_end":6450036,"line_start":669,"line_end":669,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450041,"byte_end":6450044,"line_start":670,"line_end":670,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450049,"byte_end":6450117,"line_start":671,"line_end":671,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450122,"byte_end":6450125,"line_start":672,"line_end":672,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450130,"byte_end":6450144,"line_start":673,"line_end":673,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450149,"byte_end":6450152,"line_start":674,"line_end":674,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450157,"byte_end":6450164,"line_start":675,"line_end":675,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450169,"byte_end":6450200,"line_start":676,"line_end":676,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450205,"byte_end":6450253,"line_start":677,"line_end":677,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450258,"byte_end":6450261,"line_start":678,"line_end":678,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450266,"byte_end":6450307,"line_start":679,"line_end":679,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450312,"byte_end":6450347,"line_start":680,"line_end":680,"column_start":5,"column_end":40}},{"value":"/     .little_endian()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450352,"byte_end":6450376,"line_start":681,"line_end":681,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450381,"byte_end":6450403,"line_start":682,"line_end":682,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450408,"byte_end":6450415,"line_start":683,"line_end":683,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450420,"byte_end":6450442,"line_start":684,"line_end":684,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450447,"byte_end":6450454,"line_start":685,"line_end":685,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451112,"byte_end":6451125,"line_start":710,"line_end":710,"column_start":12,"column_end":25},"name":"native_endian","qualname":"<Builder>::native_endian","value":"pub fn native_endian(&mut Self) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Read the length field as a native endian integer","sig":null,"attributes":[{"value":"/ Read the length field as a native endian integer","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450579,"byte_end":6450631,"line_start":691,"line_end":691,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450636,"byte_end":6450639,"line_start":692,"line_end":692,"column_start":5,"column_end":8}},{"value":"/ The default setting is big endian.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450644,"byte_end":6450682,"line_start":693,"line_end":693,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450687,"byte_end":6450690,"line_start":694,"line_end":694,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450695,"byte_end":6450763,"line_start":695,"line_end":695,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450768,"byte_end":6450771,"line_start":696,"line_end":696,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450776,"byte_end":6450790,"line_start":697,"line_end":697,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450795,"byte_end":6450798,"line_start":698,"line_end":698,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450803,"byte_end":6450810,"line_start":699,"line_end":699,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450815,"byte_end":6450846,"line_start":700,"line_end":700,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450851,"byte_end":6450899,"line_start":701,"line_end":701,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450904,"byte_end":6450907,"line_start":702,"line_end":702,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450912,"byte_end":6450953,"line_start":703,"line_end":703,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450958,"byte_end":6450993,"line_start":704,"line_end":704,"column_start":5,"column_end":40}},{"value":"/     .native_endian()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6450998,"byte_end":6451022,"line_start":705,"line_end":705,"column_start":5,"column_end":29}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451027,"byte_end":6451049,"line_start":706,"line_end":706,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451054,"byte_end":6451061,"line_start":707,"line_end":707,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451066,"byte_end":6451088,"line_start":708,"line_end":708,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451093,"byte_end":6451100,"line_start":709,"line_end":709,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":394},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452206,"byte_end":6452222,"line_start":744,"line_end":744,"column_start":12,"column_end":28},"name":"max_frame_length","qualname":"<Builder>::max_frame_length","value":"pub fn max_frame_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the max frame length","sig":null,"attributes":[{"value":"/ Sets the max frame length","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451294,"byte_end":6451323,"line_start":718,"line_end":718,"column_start":5,"column_end":34}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451328,"byte_end":6451331,"line_start":719,"line_end":719,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding. The","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451336,"byte_end":6451408,"line_start":720,"line_end":720,"column_start":5,"column_end":77}},{"value":"/ default value is 8MB.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451413,"byte_end":6451438,"line_start":721,"line_end":721,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451443,"byte_end":6451446,"line_start":722,"line_end":722,"column_start":5,"column_end":8}},{"value":"/ When decoding, the length field read from the byte stream is checked","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451451,"byte_end":6451523,"line_start":723,"line_end":723,"column_start":5,"column_end":77}},{"value":"/ against this setting **before** any adjustments are applied. When","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451528,"byte_end":6451597,"line_start":724,"line_end":724,"column_start":5,"column_end":74}},{"value":"/ encoding, the length of the submitted payload is checked against this","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451602,"byte_end":6451675,"line_start":725,"line_end":725,"column_start":5,"column_end":78}},{"value":"/ setting.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451680,"byte_end":6451692,"line_start":726,"line_end":726,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451697,"byte_end":6451700,"line_start":727,"line_end":727,"column_start":5,"column_end":8}},{"value":"/ When frames exceed the max length, an `io::Error` with the custom value","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451705,"byte_end":6451780,"line_start":728,"line_end":728,"column_start":5,"column_end":80}},{"value":"/ of the `LengthDelimitedCodecError` type will be returned.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451785,"byte_end":6451846,"line_start":729,"line_end":729,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451851,"byte_end":6451854,"line_start":730,"line_end":730,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451859,"byte_end":6451873,"line_start":731,"line_end":731,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451878,"byte_end":6451881,"line_start":732,"line_end":732,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451886,"byte_end":6451893,"line_start":733,"line_end":733,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451898,"byte_end":6451929,"line_start":734,"line_end":734,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451934,"byte_end":6451982,"line_start":735,"line_end":735,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451987,"byte_end":6451990,"line_start":736,"line_end":736,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6451995,"byte_end":6452036,"line_start":737,"line_end":737,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452041,"byte_end":6452076,"line_start":738,"line_end":738,"column_start":5,"column_end":40}},{"value":"/     .max_frame_length(8 * 1024)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452081,"byte_end":6452116,"line_start":739,"line_end":739,"column_start":5,"column_end":40}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452121,"byte_end":6452143,"line_start":740,"line_end":740,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452148,"byte_end":6452155,"line_start":741,"line_end":741,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452160,"byte_end":6452182,"line_start":742,"line_end":742,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452187,"byte_end":6452194,"line_start":743,"line_end":743,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":395},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452883,"byte_end":6452902,"line_start":768,"line_end":768,"column_start":12,"column_end":31},"name":"length_field_length","qualname":"<Builder>::length_field_length","value":"pub fn length_field_length(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes used to represent the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes used to represent the length field","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452319,"byte_end":6452382,"line_start":749,"line_end":749,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452387,"byte_end":6452390,"line_start":750,"line_end":750,"column_start":5,"column_end":8}},{"value":"/ The default value is `4`. The max value is `8`.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452395,"byte_end":6452446,"line_start":751,"line_end":751,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452451,"byte_end":6452454,"line_start":752,"line_end":752,"column_start":5,"column_end":8}},{"value":"/ This configuration option applies to both encoding and decoding.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452459,"byte_end":6452527,"line_start":753,"line_end":753,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452532,"byte_end":6452535,"line_start":754,"line_end":754,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452540,"byte_end":6452554,"line_start":755,"line_end":755,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452559,"byte_end":6452562,"line_start":756,"line_end":756,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452567,"byte_end":6452574,"line_start":757,"line_end":757,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452579,"byte_end":6452610,"line_start":758,"line_end":758,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452615,"byte_end":6452663,"line_start":759,"line_end":759,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452668,"byte_end":6452671,"line_start":760,"line_end":760,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452676,"byte_end":6452717,"line_start":761,"line_end":761,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452722,"byte_end":6452757,"line_start":762,"line_end":762,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(4)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452762,"byte_end":6452793,"line_start":763,"line_end":763,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452798,"byte_end":6452820,"line_start":764,"line_end":764,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452825,"byte_end":6452832,"line_start":765,"line_end":765,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452837,"byte_end":6452859,"line_start":766,"line_end":766,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6452864,"byte_end":6452871,"line_start":767,"line_end":767,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453561,"byte_end":6453580,"line_start":791,"line_end":791,"column_start":12,"column_end":31},"name":"length_field_offset","qualname":"<Builder>::length_field_offset","value":"pub fn length_field_offset(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes in the header before the length field","sig":null,"attributes":[{"value":"/ Sets the number of bytes in the header before the length field","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453071,"byte_end":6453137,"line_start":774,"line_end":774,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453142,"byte_end":6453145,"line_start":775,"line_end":775,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453150,"byte_end":6453205,"line_start":776,"line_end":776,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453210,"byte_end":6453213,"line_start":777,"line_end":777,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453218,"byte_end":6453232,"line_start":778,"line_end":778,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453237,"byte_end":6453240,"line_start":779,"line_end":779,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453245,"byte_end":6453252,"line_start":780,"line_end":780,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453257,"byte_end":6453288,"line_start":781,"line_end":781,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453293,"byte_end":6453341,"line_start":782,"line_end":782,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453346,"byte_end":6453349,"line_start":783,"line_end":783,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453354,"byte_end":6453395,"line_start":784,"line_end":784,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453400,"byte_end":6453435,"line_start":785,"line_end":785,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(1)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453440,"byte_end":6453471,"line_start":786,"line_end":786,"column_start":5,"column_end":36}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453476,"byte_end":6453498,"line_start":787,"line_end":787,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453503,"byte_end":6453510,"line_start":788,"line_end":788,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453515,"byte_end":6453537,"line_start":789,"line_end":789,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453542,"byte_end":6453549,"line_start":790,"line_end":790,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":397},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454134,"byte_end":6454151,"line_start":812,"line_end":812,"column_start":12,"column_end":29},"name":"length_adjustment","qualname":"<Builder>::length_adjustment","value":"pub fn length_adjustment(&mut Self, isize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Delta between the payload length specified in the header and the real\n payload length","sig":null,"attributes":[{"value":"/ Delta between the payload length specified in the header and the real","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453683,"byte_end":6453756,"line_start":796,"line_end":796,"column_start":5,"column_end":78}},{"value":"/ payload length","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453761,"byte_end":6453779,"line_start":797,"line_end":797,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453784,"byte_end":6453787,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453792,"byte_end":6453806,"line_start":799,"line_end":799,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453811,"byte_end":6453814,"line_start":800,"line_end":800,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453819,"byte_end":6453826,"line_start":801,"line_end":801,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453831,"byte_end":6453862,"line_start":802,"line_end":802,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453867,"byte_end":6453915,"line_start":803,"line_end":803,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453920,"byte_end":6453923,"line_start":804,"line_end":804,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453928,"byte_end":6453969,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6453974,"byte_end":6454009,"line_start":806,"line_end":806,"column_start":5,"column_end":40}},{"value":"/     .length_adjustment(-2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454014,"byte_end":6454044,"line_start":807,"line_end":807,"column_start":5,"column_end":35}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454049,"byte_end":6454071,"line_start":808,"line_end":808,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454076,"byte_end":6454083,"line_start":809,"line_end":809,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454088,"byte_end":6454110,"line_start":810,"line_end":810,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454115,"byte_end":6454122,"line_start":811,"line_end":811,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454801,"byte_end":6454809,"line_start":836,"line_end":836,"column_start":12,"column_end":20},"name":"num_skip","qualname":"<Builder>::num_skip","value":"pub fn num_skip(&mut Self, usize) -> &mut Self","parent":null,"children":[],"decl_id":null,"docs":" Sets the number of bytes to skip before reading the payload","sig":null,"attributes":[{"value":"/ Sets the number of bytes to skip before reading the payload","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454252,"byte_end":6454315,"line_start":817,"line_end":817,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454320,"byte_end":6454323,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ Default value is `length_field_len + length_field_offset`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454328,"byte_end":6454389,"line_start":819,"line_end":819,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454394,"byte_end":6454397,"line_start":820,"line_end":820,"column_start":5,"column_end":8}},{"value":"/ This configuration option only applies to decoding","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454402,"byte_end":6454456,"line_start":821,"line_end":821,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454461,"byte_end":6454464,"line_start":822,"line_end":822,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454469,"byte_end":6454483,"line_start":823,"line_end":823,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454488,"byte_end":6454491,"line_start":824,"line_end":824,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454496,"byte_end":6454503,"line_start":825,"line_end":825,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454508,"byte_end":6454539,"line_start":826,"line_end":826,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454544,"byte_end":6454592,"line_start":827,"line_end":827,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454597,"byte_end":6454600,"line_start":828,"line_end":828,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454605,"byte_end":6454646,"line_start":829,"line_end":829,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454651,"byte_end":6454686,"line_start":830,"line_end":830,"column_start":5,"column_end":40}},{"value":"/     .num_skip(4)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454691,"byte_end":6454711,"line_start":831,"line_end":831,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454716,"byte_end":6454738,"line_start":832,"line_end":832,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454743,"byte_end":6454750,"line_start":833,"line_end":833,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454755,"byte_end":6454777,"line_start":834,"line_end":834,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454782,"byte_end":6454789,"line_start":835,"line_end":835,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":399},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455329,"byte_end":6455338,"line_start":856,"line_end":856,"column_start":12,"column_end":21},"name":"new_codec","qualname":"<Builder>::new_codec","value":"pub fn new_codec(&Self) -> LengthDelimitedCodec","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `LengthDelimitedCodec`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `LengthDelimitedCodec`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454907,"byte_end":6454970,"line_start":841,"line_end":841,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454975,"byte_end":6454978,"line_start":842,"line_end":842,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6454983,"byte_end":6454997,"line_start":843,"line_end":843,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455002,"byte_end":6455005,"line_start":844,"line_end":844,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455010,"byte_end":6455017,"line_start":845,"line_end":845,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455022,"byte_end":6455070,"line_start":846,"line_end":846,"column_start":5,"column_end":53}},{"value":"/ # pub fn main() {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455075,"byte_end":6455096,"line_start":847,"line_end":847,"column_start":5,"column_end":26}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455101,"byte_end":6455136,"line_start":848,"line_end":848,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455141,"byte_end":6455172,"line_start":849,"line_end":849,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455177,"byte_end":6455208,"line_start":850,"line_end":850,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455213,"byte_end":6455242,"line_start":851,"line_end":851,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455247,"byte_end":6455267,"line_start":852,"line_end":852,"column_start":5,"column_end":25}},{"value":"/     .new_codec();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455272,"byte_end":6455293,"line_start":853,"line_end":853,"column_start":5,"column_end":26}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455298,"byte_end":6455305,"line_start":854,"line_end":854,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455310,"byte_end":6455317,"line_start":855,"line_end":855,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":400},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455994,"byte_end":6456002,"line_start":881,"line_end":881,"column_start":12,"column_end":20},"name":"new_read","qualname":"<Builder>::new_read","value":"pub fn new_read<T>(&Self, T) -> FramedRead<T, LengthDelimitedCodec> where\nT: AsyncRead","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedRead`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedRead`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455490,"byte_end":6455543,"line_start":863,"line_end":863,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455548,"byte_end":6455551,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455556,"byte_end":6455570,"line_start":865,"line_end":865,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455575,"byte_end":6455578,"line_start":866,"line_end":866,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455583,"byte_end":6455590,"line_start":867,"line_end":867,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncRead;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455595,"byte_end":6455626,"line_start":868,"line_end":868,"column_start":5,"column_end":36}},{"value":"/ use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455631,"byte_end":6455679,"line_start":869,"line_end":869,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455684,"byte_end":6455687,"line_start":870,"line_end":870,"column_start":5,"column_end":8}},{"value":"/ # fn bind_read<T: AsyncRead>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455692,"byte_end":6455733,"line_start":871,"line_end":871,"column_start":5,"column_end":46}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455738,"byte_end":6455773,"line_start":872,"line_end":872,"column_start":5,"column_end":40}},{"value":"/     .length_field_offset(0)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455778,"byte_end":6455809,"line_start":873,"line_end":873,"column_start":5,"column_end":36}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455814,"byte_end":6455845,"line_start":874,"line_end":874,"column_start":5,"column_end":36}},{"value":"/     .length_adjustment(0)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455850,"byte_end":6455879,"line_start":875,"line_end":875,"column_start":5,"column_end":34}},{"value":"/     .num_skip(0)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455884,"byte_end":6455904,"line_start":876,"line_end":876,"column_start":5,"column_end":25}},{"value":"/     .new_read(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455909,"byte_end":6455931,"line_start":877,"line_end":877,"column_start":5,"column_end":27}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455936,"byte_end":6455943,"line_start":878,"line_end":878,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455948,"byte_end":6455970,"line_start":879,"line_end":879,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6455975,"byte_end":6455982,"line_start":880,"line_end":880,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":402},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456575,"byte_end":6456584,"line_start":902,"line_end":902,"column_start":12,"column_end":21},"name":"new_write","qualname":"<Builder>::new_write","value":"pub fn new_write<T>(&Self, T) -> FramedWrite<T, LengthDelimitedCodec> where\nT: AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `FramedWrite`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `FramedWrite`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456166,"byte_end":6456220,"line_start":888,"line_end":888,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456225,"byte_end":6456228,"line_start":889,"line_end":889,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456233,"byte_end":6456247,"line_start":890,"line_end":890,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456252,"byte_end":6456255,"line_start":891,"line_end":891,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456260,"byte_end":6456267,"line_start":892,"line_end":892,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::AsyncWrite;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456272,"byte_end":6456304,"line_start":893,"line_end":893,"column_start":5,"column_end":37}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456309,"byte_end":6456359,"line_start":894,"line_end":894,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456364,"byte_end":6456408,"line_start":895,"line_end":895,"column_start":5,"column_end":49}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456413,"byte_end":6456448,"line_start":896,"line_end":896,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456453,"byte_end":6456484,"line_start":897,"line_end":897,"column_start":5,"column_end":36}},{"value":"/     .new_write(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456489,"byte_end":6456512,"line_start":898,"line_end":898,"column_start":5,"column_end":28}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456517,"byte_end":6456524,"line_start":899,"line_end":899,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456529,"byte_end":6456551,"line_start":900,"line_end":900,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456556,"byte_end":6456563,"line_start":901,"line_end":901,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":404},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6457193,"byte_end":6457203,"line_start":924,"line_end":924,"column_start":12,"column_end":22},"name":"new_framed","qualname":"<Builder>::new_framed","value":"pub fn new_framed<T>(&Self, T) -> Framed<T, LengthDelimitedCodec> where\nT: AsyncRead + AsyncWrite","parent":null,"children":[],"decl_id":null,"docs":" Create a configured length delimited `Framed`","sig":null,"attributes":[{"value":"/ Create a configured length delimited `Framed`","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456745,"byte_end":6456794,"line_start":909,"line_end":909,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456799,"byte_end":6456802,"line_start":910,"line_end":910,"column_start":5,"column_end":8}},{"value":"/ # Examples","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456807,"byte_end":6456821,"line_start":911,"line_end":911,"column_start":5,"column_end":19}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456826,"byte_end":6456829,"line_start":912,"line_end":912,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456834,"byte_end":6456841,"line_start":913,"line_end":913,"column_start":5,"column_end":12}},{"value":"/ # use tokio::io::{AsyncRead, AsyncWrite};","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456846,"byte_end":6456891,"line_start":914,"line_end":914,"column_start":5,"column_end":50}},{"value":"/ # use tokio_util::codec::LengthDelimitedCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456896,"byte_end":6456946,"line_start":915,"line_end":915,"column_start":5,"column_end":55}},{"value":"/ # fn write_frame<T: AsyncRead + AsyncWrite>(io: T) {","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6456951,"byte_end":6457007,"line_start":916,"line_end":916,"column_start":5,"column_end":61}},{"value":"/ # let _ =","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6457012,"byte_end":6457025,"line_start":917,"line_end":917,"column_start":5,"column_end":18}},{"value":"/ LengthDelimitedCodec::builder()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6457030,"byte_end":6457065,"line_start":918,"line_end":918,"column_start":5,"column_end":40}},{"value":"/     .length_field_length(2)","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6457070,"byte_end":6457101,"line_start":919,"line_end":919,"column_start":5,"column_end":36}},{"value":"/     .new_framed(io);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6457106,"byte_end":6457130,"line_start":920,"line_end":920,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6457135,"byte_end":6457142,"line_start":921,"line_end":921,"column_start":5,"column_end":12}},{"value":"/ # pub fn main() {}","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6457147,"byte_end":6457169,"line_start":922,"line_end":922,"column_start":5,"column_end":27}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6457174,"byte_end":6457181,"line_start":923,"line_end":923,"column_start":5,"column_end":12}}]},{"kind":"Struct","id":{"krate":0,"index":526},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6458582,"byte_end":6458592,"line_start":12,"line_end":12,"column_start":12,"column_end":22},"name":"LinesCodec","qualname":"::codec::lines_codec::LinesCodec","value":"LinesCodec {  }","parent":null,"children":[{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":529}],"decl_id":null,"docs":" A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","sig":null,"attributes":[{"value":"/ A simple [`Decoder`] and [`Encoder`] implementation that splits up data into lines.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6458339,"byte_end":6458426,"line_start":7,"line_end":7,"column_start":1,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6458427,"byte_end":6458430,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"/ [`Decoder`]: crate::codec::Decoder","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6458431,"byte_end":6458469,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"/ [`Encoder`]: crate::codec::Encoder","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6458470,"byte_end":6458508,"line_start":10,"line_end":10,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459692,"byte_end":6459695,"line_start":40,"line_end":40,"column_start":12,"column_end":15},"name":"new","qualname":"<LinesCodec>::new","value":"pub fn new() -> LinesCodec","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` for splitting up data into lines.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` for splitting up data into lines.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459273,"byte_end":6459333,"line_start":31,"line_end":31,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459338,"byte_end":6459341,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459346,"byte_end":6459356,"line_start":33,"line_end":33,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459361,"byte_end":6459364,"line_start":34,"line_end":34,"column_start":5,"column_end":8}},{"value":"/ The returned `LinesCodec` will not have an upper bound on the length","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459369,"byte_end":6459441,"line_start":35,"line_end":35,"column_start":5,"column_end":77}},{"value":"/ of a buffered line. See the documentation for [`new_with_max_length`]","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459446,"byte_end":6459519,"line_start":36,"line_end":36,"column_start":5,"column_end":78}},{"value":"/ for information on why this could be a potential security risk.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459524,"byte_end":6459591,"line_start":37,"line_end":37,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459596,"byte_end":6459599,"line_start":38,"line_end":38,"column_start":5,"column_end":8}},{"value":"/ [`new_with_max_length`]: crate::codec::LinesCodec::new_with_max_length()","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459604,"byte_end":6459680,"line_start":39,"line_end":39,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460826,"byte_end":6460845,"line_start":66,"line_end":66,"column_start":12,"column_end":31},"name":"new_with_max_length","qualname":"<LinesCodec>::new_with_max_length","value":"pub fn new_with_max_length(usize) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Returns a `LinesCodec` with a maximum line length limit.","sig":null,"attributes":[{"value":"/ Returns a `LinesCodec` with a maximum line length limit.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459853,"byte_end":6459913,"line_start":48,"line_end":48,"column_start":5,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459918,"byte_end":6459921,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ If this is set, calls to `LinesCodec::decode` will return a","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459926,"byte_end":6459989,"line_start":50,"line_end":50,"column_start":5,"column_end":68}},{"value":"/ [`LinesCodecError`] when a line exceeds the length limit. Subsequent calls","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459994,"byte_end":6460072,"line_start":51,"line_end":51,"column_start":5,"column_end":83}},{"value":"/ will discard up to `limit` bytes from that line until a newline","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460077,"byte_end":6460144,"line_start":52,"line_end":52,"column_start":5,"column_end":72}},{"value":"/ character is reached, returning `None` until the line over the limit","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460149,"byte_end":6460221,"line_start":53,"line_end":53,"column_start":5,"column_end":77}},{"value":"/ has been fully discarded. After that point, calls to `decode` will","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460226,"byte_end":6460296,"line_start":54,"line_end":54,"column_start":5,"column_end":75}},{"value":"/ function as normal.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460301,"byte_end":6460324,"line_start":55,"line_end":55,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460329,"byte_end":6460332,"line_start":56,"line_end":56,"column_start":5,"column_end":8}},{"value":"/ # Note","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460337,"byte_end":6460347,"line_start":57,"line_end":57,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460352,"byte_end":6460355,"line_start":58,"line_end":58,"column_start":5,"column_end":8}},{"value":"/ Setting a length limit is highly recommended for any `LinesCodec` which","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460360,"byte_end":6460435,"line_start":59,"line_end":59,"column_start":5,"column_end":80}},{"value":"/ will be exposed to untrusted input. Otherwise, the size of the buffer","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460440,"byte_end":6460513,"line_start":60,"line_end":60,"column_start":5,"column_end":78}},{"value":"/ that holds the line currently being read is unbounded. An attacker could","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460518,"byte_end":6460594,"line_start":61,"line_end":61,"column_start":5,"column_end":81}},{"value":"/ exploit this unbounded buffer by sending an unbounded amount of input","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460599,"byte_end":6460672,"line_start":62,"line_end":62,"column_start":5,"column_end":78}},{"value":"/ without any `\\n` characters, causing unbounded memory consumption.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460677,"byte_end":6460747,"line_start":63,"line_end":63,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460752,"byte_end":6460755,"line_start":64,"line_end":64,"column_start":5,"column_end":8}},{"value":"/ [`LinesCodecError`]: crate::codec::LinesCodecError","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460760,"byte_end":6460814,"line_start":65,"line_end":65,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461411,"byte_end":6461421,"line_start":88,"line_end":88,"column_start":12,"column_end":22},"name":"max_length","qualname":"<LinesCodec>::max_length","value":"pub fn max_length(&Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the maximum line length when decoding.","sig":null,"attributes":[{"value":"/ Returns the maximum line length when decoding.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6460973,"byte_end":6461023,"line_start":73,"line_end":73,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461028,"byte_end":6461031,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461036,"byte_end":6461043,"line_start":75,"line_end":75,"column_start":5,"column_end":12}},{"value":"/ use std::usize;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461048,"byte_end":6461067,"line_start":76,"line_end":76,"column_start":5,"column_end":24}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461072,"byte_end":6461110,"line_start":77,"line_end":77,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461115,"byte_end":6461118,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new();","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461123,"byte_end":6461157,"line_start":79,"line_end":79,"column_start":5,"column_end":39}},{"value":"/ assert_eq!(codec.max_length(), usize::MAX);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461162,"byte_end":6461209,"line_start":80,"line_end":80,"column_start":5,"column_end":52}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461214,"byte_end":6461221,"line_start":81,"line_end":81,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461226,"byte_end":6461233,"line_start":82,"line_end":82,"column_start":5,"column_end":12}},{"value":"/ use tokio_util::codec::LinesCodec;","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461238,"byte_end":6461276,"line_start":83,"line_end":83,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461281,"byte_end":6461284,"line_start":84,"line_end":84,"column_start":5,"column_end":8}},{"value":"/ let codec = LinesCodec::new_with_max_length(256);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461289,"byte_end":6461342,"line_start":85,"line_end":85,"column_start":5,"column_end":58}},{"value":"/ assert_eq!(codec.max_length(), 256);","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461347,"byte_end":6461387,"line_start":86,"line_end":86,"column_start":5,"column_end":45}},{"value":"/ ```","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461392,"byte_end":6461399,"line_start":87,"line_end":87,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":561},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6465781,"byte_end":6465802,"line_start":210,"line_end":210,"column_start":5,"column_end":26},"name":"MaxLineLengthExceeded","qualname":"::codec::lines_codec::LinesCodecError::MaxLineLengthExceeded","value":"LinesCodecError::MaxLineLengthExceeded","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" The maximum line length was exceeded.\n","sig":null,"attributes":[{"value":"/ The maximum line length was exceeded.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6465735,"byte_end":6465776,"line_start":209,"line_end":209,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":563},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6465837,"byte_end":6465839,"line_start":212,"line_end":212,"column_start":5,"column_end":7},"name":"Io","qualname":"::codec::lines_codec::LinesCodecError::Io","value":"LinesCodecError::Io(io::Error)","parent":{"krate":0,"index":560},"children":[],"decl_id":null,"docs":" An IO error occured.\n","sig":null,"attributes":[{"value":"/ An IO error occured.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6465808,"byte_end":6465832,"line_start":211,"line_end":211,"column_start":5,"column_end":29}}]},{"kind":"Enum","id":{"krate":0,"index":560},"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6465713,"byte_end":6465728,"line_start":208,"line_end":208,"column_start":10,"column_end":25},"name":"LinesCodecError","qualname":"::codec::lines_codec::LinesCodecError","value":"pub enum LinesCodecError {\n\n    /// The maximum line length was exceeded.\n    MaxLineLengthExceeded,\n\n    /// An IO error occured.\n    Io(io::Error),\n}","parent":null,"children":[{"krate":0,"index":561},{"krate":0,"index":563}],"decl_id":null,"docs":" An error occured while encoding or decoding a line.\n","sig":null,"attributes":[{"value":"/ An error occured while encoding or decoding a line.","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6465631,"byte_end":6465686,"line_start":206,"line_end":206,"column_start":1,"column_end":56}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6388116,"byte_end":6388126,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":17}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6388277,"byte_end":6388287,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":21}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6388614,"byte_end":6388624,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":23},{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6398471,"byte_end":6398475,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6398746,"byte_end":6398752,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":93},{"krate":0,"index":94}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401980,"byte_end":6401986,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":103},{"krate":0,"index":104},{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6406553,"byte_end":6406559,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":110}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6406821,"byte_end":6406827,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":115},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":119}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6407598,"byte_end":6407604,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":123}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6407964,"byte_end":6407968,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":127}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6408106,"byte_end":6408110,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":131},{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6408317,"byte_end":6408321,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":136},{"krate":0,"index":137}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6408716,"byte_end":6408720,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":141},{"krate":0,"index":142}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6409001,"byte_end":6409005,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6409222,"byte_end":6409226,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6409755,"byte_end":6409759,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410140,"byte_end":6410144,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":166}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6411047,"byte_end":6411058,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":170}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6412192,"byte_end":6412202,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6412989,"byte_end":6412999,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":201},{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6414491,"byte_end":6414501,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6414814,"byte_end":6414824,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":216},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6415914,"byte_end":6415924,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6416980,"byte_end":6416991,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":231},{"krate":0,"index":232},{"krate":0,"index":233},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6417509,"byte_end":6417520,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":239},{"krate":0,"index":240}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6420643,"byte_end":6420654,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":276}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6420977,"byte_end":6420988,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":280},{"krate":0,"index":281},{"krate":0,"index":282},{"krate":0,"index":283},{"krate":0,"index":284}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6422416,"byte_end":6422427,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":290},{"krate":0,"index":291},{"krate":0,"index":292},{"krate":0,"index":293}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6423138,"byte_end":6423149,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":297},{"krate":0,"index":298}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6423481,"byte_end":6423492,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":302}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6424335,"byte_end":6424347,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6424689,"byte_end":6424701,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":319},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6426961,"byte_end":6426973,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":323},{"krate":0,"index":324},{"krate":0,"index":325},{"krate":0,"index":326}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6427309,"byte_end":6427321,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":329}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6427456,"byte_end":6427468,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":332},{"krate":0,"index":333}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6427675,"byte_end":6427687,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":336},{"krate":0,"index":337}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6428082,"byte_end":6428094,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":340},{"krate":0,"index":341}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6428374,"byte_end":6428386,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":344},{"krate":0,"index":345},{"krate":0,"index":346}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442326,"byte_end":6442346,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":373},{"krate":0,"index":374},{"krate":0,"index":375},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6445699,"byte_end":6445719,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":380},{"krate":0,"index":381},{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6446606,"byte_end":6446626,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":384},{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6447967,"byte_end":6447987,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":388}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448080,"byte_end":6448087,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":390},{"krate":0,"index":391},{"krate":0,"index":392},{"krate":0,"index":393},{"krate":0,"index":394},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":399},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6457686,"byte_end":6457693,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6457819,"byte_end":6457844,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6458002,"byte_end":6458027,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":413}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6458162,"byte_end":6458187,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459256,"byte_end":6459266,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":432},{"krate":0,"index":433},{"krate":0,"index":434}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461808,"byte_end":6461818,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":439},{"krate":0,"index":440},{"krate":0,"index":441},{"krate":0,"index":443}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6465229,"byte_end":6465239,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":446},{"krate":0,"index":447}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6465562,"byte_end":6465572,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6465877,"byte_end":6465892,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":451}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6466174,"byte_end":6466189,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6466306,"byte_end":6466321,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\lib.rs","byte_start":740,"byte_end":745,"line_start":28,"line_end":28,"column_start":13,"column_end":18},"ref_id":{"krate":0,"index":7}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\mod.rs","byte_start":6386643,"byte_end":6386659,"line_start":30,"line_end":30,"column_start":9,"column_end":25},"ref_id":{"krate":0,"index":348}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6388116,"byte_end":6388126,"line_start":47,"line_end":47,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":458},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6388277,"byte_end":6388287,"line_start":54,"line_end":54,"column_start":18,"column_end":28},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\bytes_codec.rs","byte_start":6388614,"byte_end":6388624,"line_start":68,"line_end":68,"column_start":25,"column_end":35},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":458},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6398471,"byte_end":6398475,"line_start":54,"line_end":54,"column_start":28,"column_end":32},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":80}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6398746,"byte_end":6398752,"line_start":67,"line_end":67,"column_start":12,"column_end":18},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6401980,"byte_end":6401986,"line_start":134,"line_end":134,"column_start":12,"column_end":18},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6406553,"byte_end":6406559,"line_start":249,"line_end":249,"column_start":23,"column_end":29},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":777},"to":{"krate":17,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6406821,"byte_end":6406827,"line_start":261,"line_end":261,"column_start":27,"column_end":33},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":777},"to":{"krate":37,"index":9}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6407598,"byte_end":6407604,"line_start":286,"line_end":286,"column_start":27,"column_end":33},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":777},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6407964,"byte_end":6407968,"line_start":301,"line_end":301,"column_start":27,"column_end":31},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":2961}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6408106,"byte_end":6408110,"line_start":307,"line_end":307,"column_start":33,"column_end":37},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":3044}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6408317,"byte_end":6408321,"line_start":317,"line_end":317,"column_start":37,"column_end":41},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":732},"to":{"krate":15,"index":215}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6408716,"byte_end":6408720,"line_start":331,"line_end":331,"column_start":43,"column_end":47},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":732},"to":{"krate":15,"index":186}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6409001,"byte_end":6409005,"line_start":341,"line_end":341,"column_start":29,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":732},"to":{"krate":1,"index":3020}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6409222,"byte_end":6409226,"line_start":351,"line_end":351,"column_start":39,"column_end":43},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":732},"to":{"krate":15,"index":271}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6409755,"byte_end":6409759,"line_start":369,"line_end":369,"column_start":33,"column_end":37},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6410140,"byte_end":6410144,"line_start":382,"line_end":382,"column_start":42,"column_end":46},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":732},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed.rs","byte_start":6411047,"byte_end":6411058,"line_start":414,"line_end":414,"column_start":12,"column_end":23},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":486},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6412192,"byte_end":6412202,"line_start":39,"line_end":39,"column_start":12,"column_end":22},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6412989,"byte_end":6412999,"line_start":69,"line_end":69,"column_start":12,"column_end":22},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":691},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6414491,"byte_end":6414501,"line_start":115,"line_end":115,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":691},"to":{"krate":17,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6414814,"byte_end":6414824,"line_start":128,"line_end":128,"column_start":27,"column_end":37},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":691},"to":{"krate":37,"index":9}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6415914,"byte_end":6415924,"line_start":175,"line_end":175,"column_start":27,"column_end":37},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":691},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6416980,"byte_end":6416991,"line_start":215,"line_end":215,"column_start":9,"column_end":20},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":646},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_read.rs","byte_start":6417509,"byte_end":6417520,"line_start":241,"line_end":241,"column_start":20,"column_end":31},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":646},"to":{"krate":17,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6420643,"byte_end":6420654,"line_start":42,"line_end":42,"column_start":12,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6420977,"byte_end":6420988,"line_start":57,"line_end":57,"column_start":12,"column_end":23},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":605},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6422416,"byte_end":6422427,"line_start":99,"line_end":99,"column_start":27,"column_end":38},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":605},"to":{"krate":37,"index":9}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6423138,"byte_end":6423149,"line_start":124,"line_end":124,"column_start":23,"column_end":34},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":605},"to":{"krate":17,"index":68}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6423481,"byte_end":6423492,"line_start":141,"line_end":141,"column_start":27,"column_end":38},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":605},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6424335,"byte_end":6424347,"line_start":172,"line_end":172,"column_start":9,"column_end":21},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":568},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6424689,"byte_end":6424701,"line_start":190,"line_end":190,"column_start":24,"column_end":36},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":568},"to":{"krate":37,"index":9}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6426961,"byte_end":6426973,"line_start":261,"line_end":261,"column_start":30,"column_end":42},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6427309,"byte_end":6427321,"line_start":274,"line_end":274,"column_start":24,"column_end":36},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":2961}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6427456,"byte_end":6427468,"line_start":280,"line_end":280,"column_start":30,"column_end":42},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":568},"to":{"krate":1,"index":3044}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6427675,"byte_end":6427687,"line_start":290,"line_end":290,"column_start":34,"column_end":46},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":568},"to":{"krate":15,"index":215}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6428082,"byte_end":6428094,"line_start":304,"line_end":304,"column_start":40,"column_end":52},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":568},"to":{"krate":15,"index":186}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\framed_write.rs","byte_start":6428374,"byte_end":6428386,"line_start":314,"line_end":314,"column_start":25,"column_end":37},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":568},"to":{"krate":0,"index":80}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6442326,"byte_end":6442346,"line_start":410,"line_end":410,"column_start":6,"column_end":26},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":510},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6445699,"byte_end":6445719,"line_start":518,"line_end":518,"column_start":18,"column_end":38},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6446606,"byte_end":6446626,"line_start":549,"line_end":549,"column_start":25,"column_end":45},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":510},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6447967,"byte_end":6447987,"line_start":593,"line_end":593,"column_start":18,"column_end":38},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":510},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6448080,"byte_end":6448087,"line_start":601,"line_end":601,"column_start":6,"column_end":13},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":498},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6457686,"byte_end":6457693,"line_start":942,"line_end":942,"column_start":18,"column_end":25},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":498},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6457819,"byte_end":6457844,"line_start":950,"line_end":950,"column_start":21,"column_end":46},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":6210}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6458002,"byte_end":6458027,"line_start":956,"line_end":956,"column_start":23,"column_end":48},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":370},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\length_delimited.rs","byte_start":6458162,"byte_end":6458187,"line_start":962,"line_end":962,"column_start":19,"column_end":44},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":370},"to":{"krate":1,"index":1642}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6459256,"byte_end":6459266,"line_start":30,"line_end":30,"column_start":6,"column_end":16},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":526},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6461808,"byte_end":6461818,"line_start":106,"line_end":106,"column_start":18,"column_end":28},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":33}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6465229,"byte_end":6465239,"line_start":185,"line_end":185,"column_start":24,"column_end":34},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":526},"to":{"krate":0,"index":44}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6465562,"byte_end":6465572,"line_start":200,"line_end":200,"column_start":18,"column_end":28},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":526},"to":{"krate":2,"index":1915}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6465877,"byte_end":6465892,"line_start":215,"line_end":215,"column_start":23,"column_end":38},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":6215}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6466174,"byte_end":6466189,"line_start":224,"line_end":224,"column_start":26,"column_end":41},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":560},"to":{"krate":2,"index":1845}},{"span":{"file_name":"C:\\Users\\Nlanson\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\tokio-util-0.3.1\\src\\codec\\lines_codec.rs","byte_start":6466306,"byte_end":6466321,"line_start":230,"line_end":230,"column_start":28,"column_end":43},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":560},"to":{"krate":1,"index":1642}}]}